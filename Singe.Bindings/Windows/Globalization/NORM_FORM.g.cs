// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Globalization
    {
        /// <summary>Specifies the supported normalization forms.</summary>
        /// <remarks>
        /// <para>For more information about the normalization forms, see <a href = "https://docs.microsoft.com/windows/desktop/Intl/using-unicode-normalization-to-represent-strings">Using Unicode Normalization to Represent Strings</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winnls/ne-winnls-norm_form#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal enum NORM_FORM
        {
            /// <summary>Not supported.</summary>
            NormalizationOther = 0,
            /// <summary>Unicode normalization form C, canonical composition. Transforms each decomposed grouping, consisting of a base character plus combining characters, to the canonical precomposed equivalent. For example, A + ¨ becomes Ä.</summary>
            NormalizationC = 1,
            /// <summary>Unicode normalization form D, canonical decomposition. Transforms each precomposed character to its canonical decomposed equivalent. For example, Ä becomes A + ¨.</summary>
            NormalizationD = 2,
            /// <summary>Unicode normalization form KC, compatibility composition. Transforms each base plus combining characters to the canonical precomposed equivalent and all compatibility characters to their equivalents. For example, the ligature ﬁ becomes f + i; similarly, A + ¨ + ﬁ + n becomes Ä + f + i + n.</summary>
            NormalizationKC = 5,
            /// <summary>Unicode normalization form KD, compatibility decomposition. Transforms each precomposed character to its canonical decomposed equivalent and all compatibility characters to their equivalents. For example, Ä + ﬁ + n becomes A + ¨ + f + i + n.</summary>
            NormalizationKD = 6,
        }
    }
}