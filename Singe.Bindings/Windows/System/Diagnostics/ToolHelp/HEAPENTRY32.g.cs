// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace System.Diagnostics.ToolHelp
    {
        /// <summary>Describes one entry (block) of a heap that is being examined.</summary>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//tlhelp32/ns-tlhelp32-heapentry32">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct HEAPENTRY32
        {
            /// <summary>
            /// <para>The size of the structure, in bytes. Before calling the <a href = "https://docs.microsoft.com/windows/desktop/api/tlhelp32/nf-tlhelp32-heap32first">Heap32First</a> function, set this member to <c>sizeof(HEAPENTRY32)</c>. If you do not initialize <b>dwSize</b>, <b>Heap32First</b> fails.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//tlhelp32/ns-tlhelp32-heapentry32#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal nuint dwSize;
            /// <summary>A handle to the heap block.</summary>
            internal win32.System.SystemServices.HANDLE hHandle;
            /// <summary>The linear address of the start of the block.</summary>
            internal nuint dwAddress;
            /// <summary>The size of the heap block, in bytes.</summary>
            internal nuint dwBlockSize;
            /// <summary></summary>
            internal win32.System.Diagnostics.ToolHelp.HEAPENTRY32_FLAGS dwFlags;
            /// <summary>This member is no longer used and is always set to zero.</summary>
            internal uint dwLockCount;
            /// <summary>Reserved; do not use or alter.</summary>
            internal uint dwResvd;
            /// <summary>The identifier of the process that uses the heap.</summary>
            internal uint th32ProcessID;
            /// <summary>The heap identifier. This is not a handle, and has meaning only to the tool help functions.</summary>
            internal nuint th32HeapID;
        }
    }
}