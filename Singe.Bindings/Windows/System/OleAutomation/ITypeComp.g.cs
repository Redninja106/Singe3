// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace System.OleAutomation
    {
        [Guid("00020403-0000-0000-C000-000000000046")]
        internal unsafe struct ITypeComp
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ITypeComp*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ITypeComp*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ITypeComp*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "Bind(win32.System.SystemServices.PWSTR, uint, ushort, win32.System.OleAutomation.ITypeInfo**, win32.System.OleAutomation.DESCKIND*, win32.System.OleAutomation.BINDPTR*)"/>
            internal unsafe win32.System.Com.HRESULT Bind(win32.System.SystemServices.PWSTR szName, uint lHashVal, ushort wFlags, win32.System.OleAutomation.ITypeInfo**ppTInfo, out win32.System.OleAutomation.DESCKIND pDescKind, out win32.System.OleAutomation.BINDPTR pBindPtr)
            {
                fixed (win32.System.OleAutomation.BINDPTR*pBindPtrLocal = &pBindPtr)
                {
                    fixed (win32.System.OleAutomation.DESCKIND*pDescKindLocal = &pDescKind)
                    {
                        win32.System.Com.HRESULT __result = this.Bind(szName, lHashVal, wFlags, ppTInfo, pDescKindLocal, pBindPtrLocal);
                        return __result;
                    }
                }
            }

            /// <summary>Maps a name to a member of a type, or binds global variables and functions contained in a type library.</summary>
            /// <param name = "szName">The name to be bound.</param>
            /// <param name = "lHashVal">The hash value for the name computed by <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-lhashvalofnamesys">LHashValOfNameSys</a>.</param>
            /// <param name = "wFlags">One or more of the flags defined in the INVOKEKIND enumeration. Specifies whether the name was referenced as a method or a property. When binding to a variable, specify the flag INVOKE_PROPERTYGET. Specify zero to bind to any type of member.</param>
            /// <param name = "ppTInfo">If a FUNCDESC or VARDESC was returned, then <i>ppTInfo</i> points to a pointer to the type description that contains the item to which it is bound.</param>
            /// <param name = "pDescKind">Indicates whether the name bound to is a VARDESC, FUNCDESC, or TYPECOMP. If there was no match, DESCKIND_NONE.</param>
            /// <param name = "pBindPtr">The bound-to VARDESC, FUNCDESC, or <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> interface.</param>
            /// <returns>
            /// <para>This method can return one of these values.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//oaidl/nf-oaidl-itypecomp-bind">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Bind(win32.System.SystemServices.PWSTR szName, uint lHashVal, ushort wFlags, win32.System.OleAutomation.ITypeInfo**ppTInfo, win32.System.OleAutomation.DESCKIND*pDescKind, win32.System.OleAutomation.BINDPTR*pBindPtr)
            {
                fixed (ITypeComp*pThis = &this)
                    return lpVtbl->Bind_4(pThis, szName, lHashVal, wFlags, ppTInfo, pDescKind, pBindPtr);
            }

            /// <summary>Binds to the type descriptions contained within a type library.</summary>
            /// <param name = "szName">The name to be bound.</param>
            /// <param name = "lHashVal">The hash value for the name computed by <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-lhashvalofname">LHashValOfName</a>.</param>
            /// <param name = "ppTInfo">An <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</a> of the type to which the name was bound.</param>
            /// <param name = "ppTComp">Passes a valid pointer, such as the address of an <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> variable.</param>
            /// <returns>
            /// <para>This method can return one of these values.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//oaidl/nf-oaidl-itypecomp-bindtype">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT BindType(win32.System.SystemServices.PWSTR szName, uint lHashVal, win32.System.OleAutomation.ITypeInfo**ppTInfo, win32.System.OleAutomation.ITypeComp**ppTComp)
            {
                fixed (ITypeComp*pThis = &this)
                    return lpVtbl->BindType_5(pThis, szName, lHashVal, ppTInfo, ppTComp);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ITypeComp*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ITypeComp*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ITypeComp*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ITypeComp*, win32.System.SystemServices.PWSTR, uint, ushort, win32.System.OleAutomation.ITypeInfo**, win32.System.OleAutomation.DESCKIND*, win32.System.OleAutomation.BINDPTR*, win32.System.Com.HRESULT>Bind_4;
                internal delegate *unmanaged[Stdcall]<ITypeComp*, win32.System.SystemServices.PWSTR, uint, win32.System.OleAutomation.ITypeInfo**, win32.System.OleAutomation.ITypeComp**, win32.System.Com.HRESULT>BindType_5;
            }

            private Vtbl*lpVtbl;
        }
    }
}