// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace System.SystemServices
    {
        /// <summary>Defines the control setting for a serial communications device.</summary>
        /// <remarks>
        /// <para>When a <b>DCB</b> structure is used to configure the 8250, the following restrictions apply to the values specified for the <b>ByteSize</b> and <b>StopBits</b> members:</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winbase/ns-winbase-dcb#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct DCB
        {
            /// <summary>
            /// <para>The length of the structure, in bytes. The caller must set this member to <c>sizeof(DCB)</c>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winbase/ns-winbase-dcb#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint DCBlength;
            /// <summary>
            /// <para>The baud rate at which the communications device operates. This member can be an actual baud rate value, or one of the following indexes.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winbase/ns-winbase-dcb#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint BaudRate;
            internal uint _bitfield;
            /// <summary>Reserved; must be zero.</summary>
            internal ushort wReserved;
            /// <summary>
            /// <para>The minimum number of bytes in use allowed in the input buffer before flow control is activated to allow transmission by the sender. This assumes that either XON/XOFF, RTS, or DTR input flow control is specified in the <b>fInX</b>, <b>fRtsControl</b>, or <b>fDtrControl</b> members.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winbase/ns-winbase-dcb#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal ushort XonLim;
            /// <summary>
            /// <para>The minimum number of free bytes allowed in the input buffer before flow control is activated to inhibit the sender. Note that the sender may transmit characters after the flow control signal has been activated, so this value should never be zero. This assumes that either XON/XOFF, RTS, or DTR input flow control is specified in the <b>fInX</b>, <b>fRtsControl</b>, or <b>fDtrControl</b> members. The maximum number of bytes in use allowed is calculated by subtracting this value from the size, in bytes, of the input buffer.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winbase/ns-winbase-dcb#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal ushort XoffLim;
            /// <summary>The number of bits in the bytes transmitted and received.</summary>
            internal byte ByteSize;
            /// <summary></summary>
            internal byte Parity;
            /// <summary></summary>
            internal byte StopBits;
            /// <summary>The value of the XON character for both transmission and reception.</summary>
            internal win32.System.SystemServices.CHAR XonChar;
            /// <summary>The value of the XOFF character for both transmission and reception.</summary>
            internal win32.System.SystemServices.CHAR XoffChar;
            /// <summary>The value of the character used to replace bytes received with a parity error.</summary>
            internal win32.System.SystemServices.CHAR ErrorChar;
            /// <summary>The value of the character used to signal the end of data.</summary>
            internal win32.System.SystemServices.CHAR EofChar;
            /// <summary>The value of the character used to signal an event.</summary>
            internal win32.System.SystemServices.CHAR EvtChar;
            /// <summary>Reserved; do not use.</summary>
            internal ushort wReserved1;
        }
    }
}