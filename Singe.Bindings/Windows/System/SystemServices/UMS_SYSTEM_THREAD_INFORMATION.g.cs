// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace System.SystemServices
    {
        /// <summary>Specifies a UMS scheduler thread, UMS worker thread, or non-UMS thread. The GetUmsSystemThreadInformation function uses this structure.</summary>
        /// <remarks>
        /// <para>If both <b>IsUmsSchedulerThread</b>  and <b>IsUmsWorkerThread</b> are clear, the structure specifies a non-UMS thread.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winbase/ns-winbase-ums_system_thread_information#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct UMS_SYSTEM_THREAD_INFORMATION
        {
            /// <summary>The UMS version. This member must be UMS_VERSION.</summary>
            internal uint UmsVersion;
            internal win32.System.SystemServices.UMS_SYSTEM_THREAD_INFORMATION._Anonymous_e__Union Anonymous;
            [StructLayout(LayoutKind.Explicit)]
            internal partial struct _Anonymous_e__Union
            {
                [FieldOffset(0)]
                internal win32.System.SystemServices.UMS_SYSTEM_THREAD_INFORMATION._Anonymous_e__Union._Anonymous_e__Struct Anonymous;
                [FieldOffset(0)]
                internal uint ThreadUmsFlags;
                internal partial struct _Anonymous_e__Struct
                {
                    internal uint _bitfield;
                }
            }
        }
    }
}