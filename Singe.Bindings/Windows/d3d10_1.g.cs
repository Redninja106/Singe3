// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    internal static partial class d3d10_1
    {
        /// <inheritdoc cref = "D3D10CreateDevice1(win32.Graphics.Dxgi.IDXGIAdapter*, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE, win32.System.SystemServices.HINSTANCE, uint, win32.Graphics.Direct3D10.D3D10_FEATURE_LEVEL1, uint, win32.Graphics.Direct3D10.ID3D10Device1**)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10CreateDevice1(win32.Graphics.Dxgi.IDXGIAdapter*pAdapter, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE DriverType, SafeHandle Software, uint Flags, win32.Graphics.Direct3D10.D3D10_FEATURE_LEVEL1 HardwareLevel, uint SDKVersion, win32.Graphics.Direct3D10.ID3D10Device1**ppDevice)
        {
            bool SoftwareAddRef = false;
            try
            {
                win32.System.SystemServices.HINSTANCE SoftwareLocal;
                if (Software is object)
                {
                    Software.DangerousAddRef(ref SoftwareAddRef);
                    SoftwareLocal = (win32.System.SystemServices.HINSTANCE)Software.DangerousGetHandle();
                }
                else
                    SoftwareLocal = default(win32.System.SystemServices.HINSTANCE);
                win32.System.Com.HRESULT __result = d3d10_1.D3D10CreateDevice1(pAdapter, DriverType, SoftwareLocal, Flags, HardwareLevel, SDKVersion, ppDevice);
                return __result;
            }
            finally
            {
                if (SoftwareAddRef)
                    Software.DangerousRelease();
            }
        }

        /// <summary>Create a Direct3D 10.1 device that represents the display adapter.</summary>
        /// <param name = "pAdapter">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>*</b></para>
        /// <para>Pointer to the display adapter (see <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>) when creating a hardware device; otherwise set this parameter to <b>NULL</b>. If <b>NULL</b> is specified when creating a hardware device, Direct3D will use the first adapter enumerated by <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-enumadapters">EnumAdapters</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdevice1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "DriverType">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10misc/ne-d3d10misc-d3d10_driver_type">D3D10_DRIVER_TYPE</a></b></para>
        /// <para>The device-driver type (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10misc/ne-d3d10misc-d3d10_driver_type">D3D10_DRIVER_TYPE</a>). The driver type determines the type of device you will create.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdevice1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Software">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMODULE</a></b></para>
        /// <para>This is set to <b>NULL</b> except for D3D10_DRIVER_TYPE_SOFTWARE driver types.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdevice1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Optional. Device creation flags (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/ne-d3d10-d3d10_create_device_flag">D3D10_CREATE_DEVICE_FLAG</a>) that enable <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-graphics-programming-guide-api-features-layers">API layers</a>. These flags can be bitwise OR'd together.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdevice1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "HardwareLevel">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10_1/ne-d3d10_1-d3d10_feature_level1">D3D10_FEATURE_LEVEL1</a></b></para>
        /// <para>The version of hardware that is available for acceleration (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10_1/ne-d3d10_1-d3d10_feature_level1">D3D10_FEATURE_LEVEL1</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdevice1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SDKVersion">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Bit flag that indicates the version of the SDK. Should be D3D10_1_SDK_VERSION, defined in D3D10.h.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdevice1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10_1/nn-d3d10_1-id3d10device1">ID3D10Device1</a>**</b></para>
        /// <para>Address of a pointer to the device created (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10_1/nn-d3d10_1-id3d10device1">ID3D10Device1 Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdevice1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdevice1">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10_1", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CreateDevice1([Optional] win32.Graphics.Dxgi.IDXGIAdapter*pAdapter, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE DriverType, win32.System.SystemServices.HINSTANCE Software, uint Flags, win32.Graphics.Direct3D10.D3D10_FEATURE_LEVEL1 HardwareLevel, uint SDKVersion, [Optional] win32.Graphics.Direct3D10.ID3D10Device1**ppDevice);
        /// <inheritdoc cref = "D3D10CreateDeviceAndSwapChain1(win32.Graphics.Dxgi.IDXGIAdapter*, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE, win32.System.SystemServices.HINSTANCE, uint, win32.Graphics.Direct3D10.D3D10_FEATURE_LEVEL1, uint, win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*, win32.Graphics.Dxgi.IDXGISwapChain**, win32.Graphics.Direct3D10.ID3D10Device1**)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10CreateDeviceAndSwapChain1(win32.Graphics.Dxgi.IDXGIAdapter*pAdapter, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE DriverType, SafeHandle Software, uint Flags, win32.Graphics.Direct3D10.D3D10_FEATURE_LEVEL1 HardwareLevel, uint SDKVersion, win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC? pSwapChainDesc, win32.Graphics.Dxgi.IDXGISwapChain**ppSwapChain, win32.Graphics.Direct3D10.ID3D10Device1**ppDevice)
        {
            bool SoftwareAddRef = false;
            try
            {
                win32.System.SystemServices.HINSTANCE SoftwareLocal;
                if (Software is object)
                {
                    Software.DangerousAddRef(ref SoftwareAddRef);
                    SoftwareLocal = (win32.System.SystemServices.HINSTANCE)Software.DangerousGetHandle();
                }
                else
                    SoftwareLocal = default(win32.System.SystemServices.HINSTANCE);
                win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC pSwapChainDescLocal = pSwapChainDesc.HasValue ? pSwapChainDesc.Value : default(win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC);
                win32.System.Com.HRESULT __result = d3d10_1.D3D10CreateDeviceAndSwapChain1(pAdapter, DriverType, SoftwareLocal, Flags, HardwareLevel, SDKVersion, pSwapChainDesc.HasValue ? &pSwapChainDescLocal : null, ppSwapChain, ppDevice);
                return __result;
            }
            finally
            {
                if (SoftwareAddRef)
                    Software.DangerousRelease();
            }
        }

        /// <summary>Create a Direct3D 10.1 device and a swap chain.</summary>
        /// <param name = "pAdapter">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>*</b></para>
        /// <para>Pointer to a <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "DriverType">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10misc/ne-d3d10misc-d3d10_driver_type">D3D10_DRIVER_TYPE</a></b></para>
        /// <para>The type of driver for the device. See <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10misc/ne-d3d10misc-d3d10_driver_type">D3D10_DRIVER_TYPE</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Software">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMODULE</a></b></para>
        /// <para>A handle to the DLL that implements a software rasterizer. Must be <b>NULL</b> if DriverType is non-software. The HMODULE of a DLL can be obtained with <a href = "https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibrarya">LoadLibrary</a>, <a href = "https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibraryexa">LoadLibraryEx</a>, or <a href = "https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-getmodulehandlea">GetModuleHandle</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Optional. Device creation flags (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/ne-d3d10-d3d10_create_device_flag">D3D10_CREATE_DEVICE_FLAG</a>) that enable <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-graphics-programming-guide-api-features-layers">API layers</a>. These flags can be bitwise OR'd together.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "HardwareLevel">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10_1/ne-d3d10_1-d3d10_feature_level1">D3D10_FEATURE_LEVEL1</a></b></para>
        /// <para>The version of hardware that is available for acceleration (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10_1/ne-d3d10_1-d3d10_feature_level1">D3D10_FEATURE_LEVEL1</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SDKVersion">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Bit flag that indicates the version of the SDK. Should be D3D10_1_SDK_VERSION, defined in D3D10.h.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pSwapChainDesc">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>*</b></para>
        /// <para>Description of the swap chain. See <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppSwapChain">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiswapchain">IDXGISwapChain</a>**</b></para>
        /// <para>Address of a pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiswapchain">IDXGISwapChain</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10_1/nn-d3d10_1-id3d10device1">ID3D10Device1</a>**</b></para>
        /// <para>Address of a pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10_1/nn-d3d10_1-id3d10device1">ID3D10Device1 Interface</a> that will receive the newly created device.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10_1/nf-d3d10_1-d3d10createdeviceandswapchain1">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10_1", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CreateDeviceAndSwapChain1([Optional] win32.Graphics.Dxgi.IDXGIAdapter*pAdapter, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE DriverType, win32.System.SystemServices.HINSTANCE Software, uint Flags, win32.Graphics.Direct3D10.D3D10_FEATURE_LEVEL1 HardwareLevel, uint SDKVersion, [Optional] win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*pSwapChainDesc, [Optional] win32.Graphics.Dxgi.IDXGISwapChain**ppSwapChain, [Optional] win32.Graphics.Direct3D10.ID3D10Device1**ppDevice);
    }
}