// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    internal static partial class DXGI
    {
        /// <inheritdoc cref = "CreateDXGIFactory(global::System.Guid*, void **)"/>
        internal static unsafe win32.System.Com.HRESULT CreateDXGIFactory(in global::System.Guid riid, out void *ppFactory)
        {
            fixed (void **ppFactoryLocal = &ppFactory)
            {
                fixed (global::System.Guid*riidLocal = &riid)
                {
                    win32.System.Com.HRESULT __result = DXGI.CreateDXGIFactory(riidLocal, ppFactoryLocal);
                    return __result;
                }
            }
        }

        /// <summary>Creates a DXGI 1.0 factory that you can use to generate other DXGI objects.</summary>
        /// <param name = "riid">
        /// <para>Type: <b>REFIID</b></para>
        /// <para>The globally unique identifier (GUID) of the <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory">IDXGIFactory</a> object referenced by the <i>ppFactory</i> parameter.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppFactory">
        /// <para>Type: <b>void**</b></para>
        /// <para>Address of a pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory">IDXGIFactory</a> object.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns <b>S_OK</b> if successful; otherwise, returns one of the following <a href = "/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("DXGI", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT CreateDXGIFactory(global::System.Guid*riid, void **ppFactory);
        /// <inheritdoc cref = "CreateDXGIFactory1(global::System.Guid*, void **)"/>
        internal static unsafe win32.System.Com.HRESULT CreateDXGIFactory1(in global::System.Guid riid, out void *ppFactory)
        {
            fixed (void **ppFactoryLocal = &ppFactory)
            {
                fixed (global::System.Guid*riidLocal = &riid)
                {
                    win32.System.Com.HRESULT __result = DXGI.CreateDXGIFactory1(riidLocal, ppFactoryLocal);
                    return __result;
                }
            }
        }

        /// <summary>Creates a DXGI 1.1 factory that you can use to generate other DXGI objects.</summary>
        /// <param name = "riid">
        /// <para>Type: <b>REFIID</b></para>
        /// <para>The globally unique identifier (GUID) of the <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory1">IDXGIFactory1</a> object referenced by the <i>ppFactory</i> parameter.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppFactory">
        /// <para>Type: <b>void**</b></para>
        /// <para>Address of a pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory1">IDXGIFactory1</a> object.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory1#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href = "/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory1">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("DXGI", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT CreateDXGIFactory1(global::System.Guid*riid, void **ppFactory);
        /// <inheritdoc cref = "CreateDXGIFactory2(uint, global::System.Guid*, void **)"/>
        internal static unsafe win32.System.Com.HRESULT CreateDXGIFactory2(uint Flags, in global::System.Guid riid, out void *ppFactory)
        {
            fixed (void **ppFactoryLocal = &ppFactory)
            {
                fixed (global::System.Guid*riidLocal = &riid)
                {
                    win32.System.Com.HRESULT __result = DXGI.CreateDXGIFactory2(Flags, riidLocal, ppFactoryLocal);
                    return __result;
                }
            }
        }

        /// <summary>Creates a DXGI 1.3 factory that you can use to generate other DXGI objects.</summary>
        /// <param name = "Flags">
        /// <para>Type: <b>UINT</b></para>
        /// <para>Valid values include the <b>DXGI_CREATE_FACTORY_DEBUG (0x01)</b> flag, and zero.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-createdxgifactory2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "riid">
        /// <para>Type: <b>REFIID</b></para>
        /// <para>The globally unique identifier (GUID) of the <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgifactory2">IDXGIFactory2</a> object referenced by the <i>ppFactory</i> parameter.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-createdxgifactory2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppFactory">
        /// <para>Type: <b>void**</b></para>
        /// <para>Address of a pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgifactory2">IDXGIFactory2</a> object.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-createdxgifactory2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href = "/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-createdxgifactory2">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("DXGI", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT CreateDXGIFactory2(uint Flags, global::System.Guid*riid, void **ppFactory);
        /// <inheritdoc cref = "DXGIGetDebugInterface1(uint, global::System.Guid*, void **)"/>
        internal static unsafe win32.System.Com.HRESULT DXGIGetDebugInterface1(uint Flags, in global::System.Guid riid, out void *pDebug)
        {
            fixed (void **pDebugLocal = &pDebug)
            {
                fixed (global::System.Guid*riidLocal = &riid)
                {
                    win32.System.Com.HRESULT __result = DXGI.DXGIGetDebugInterface1(Flags, riidLocal, pDebugLocal);
                    return __result;
                }
            }
        }

        /// <summary>Retrieves an interface that Windows Store apps use for debugging the Microsoft DirectX Graphics Infrastructure (DXGI).</summary>
        /// <param name = "Flags">Not used.</param>
        /// <param name = "riid">The globally unique identifier (GUID) of the requested interface type, which can be the identifier for the <a href = "https://docs.microsoft.com/windows/desktop/api/dxgidebug/nn-dxgidebug-idxgidebug">IDXGIDebug</a>, <a href = "https://docs.microsoft.com/windows/desktop/api/dxgidebug/nn-dxgidebug-idxgidebug1">IDXGIDebug1</a>, or <a href = "https://docs.microsoft.com/windows/desktop/api/dxgidebug/nn-dxgidebug-idxgiinfoqueue">IDXGIInfoQueue</a> interfaces.</param>
        /// <param name = "pDebug">A pointer to a buffer that receives a pointer to the debugging interface.</param>
        /// <returns>If this function succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-dxgigetdebuginterface1">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("DXGI", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT DXGIGetDebugInterface1(uint Flags, global::System.Guid*riid, void **pDebug);
        /// <summary>Allows a process to indicate that it's resilient to any of its graphics devices being removed.</summary>
        /// <returns>
        /// <para>Type: <b>HRESULT</b></para>
        /// <para>Returns <b>S_OK</b> if successful; an error code otherwise. If this function is called after device creation, it returns <b>DXGI_ERROR_INVALID_CALL</b>. If this is not the first time that this function is called, it returns <b>DXGI_ERROR_ALREADY_EXISTS</b>. For a full list of error codes, see <a href = "/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-dxgideclareadapterremovalsupport">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("DXGI", ExactSpelling = true)]
        internal static extern win32.System.Com.HRESULT DXGIDeclareAdapterRemovalSupport();
    }
}