// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Storage.StructuredStorage
    {
        [Guid("0000000C-0000-0000-C000-000000000046")]
        internal unsafe struct IStream
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal unsafe win32.System.Com.HRESULT Read(void *pv, uint cb, [Optional] uint *pcbRead)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->Read_4(pThis, pv, cb, pcbRead);
            }

            internal unsafe win32.System.Com.HRESULT Write(void *pv, uint cb, [Optional] uint *pcbWritten)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->Write_5(pThis, pv, cb, pcbWritten);
            }

            /// <summary>Changes the seek pointer to a new location. The new location is relative to either the beginning of the stream, the end of the stream, or the current seek pointer.</summary>
            /// <param name = "dlibMove">The displacement to be added to the location indicated by the <i>dwOrigin</i> parameter. If <i>dwOrigin</i> is <b>STREAM_SEEK_SET</b>, this is interpreted as an unsigned value rather than a signed value.</param>
            /// <param name = "dwOrigin">The origin for the displacement specified in <i>dlibMove</i>. The origin can be the beginning of the file (<b>STREAM_SEEK_SET</b>), the current seek pointer (<b>STREAM_SEEK_CUR</b>), or the end of the file (<b>STREAM_SEEK_END</b>). For more information about values, see the <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/ne-objidl-stream_seek">STREAM_SEEK</a> enumeration.</param>
            /// <param name = "plibNewPosition">
            /// <para>A pointer to the location where this method writes the value of the new seek pointer from the beginning of the stream.</para>
            /// <para>You can set this pointer to <b>NULL</b>. In this case, this method does not provide the new seek pointer.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-seek#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-seek">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Seek(long dlibMove, win32.Storage.StructuredStorage.STREAM_SEEK dwOrigin, [Optional] ulong *plibNewPosition)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->Seek_6(pThis, dlibMove, dwOrigin, plibNewPosition);
            }

            /// <summary>Changes the size of the stream object.</summary>
            /// <param name = "libNewSize">Specifies the new size, in bytes, of the stream.</param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-setsize">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT SetSize(ulong libNewSize)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->SetSize_7(pThis, libNewSize);
            }

            /// <summary>Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.</summary>
            /// <param name = "pstm">A pointer to the destination stream. The stream pointed to by <i>pstm</i> can be a new stream or a clone of the source stream.</param>
            /// <param name = "cb">The number of bytes to copy from the source stream.</param>
            /// <param name = "pcbRead">A pointer to the location where this method writes the actual number of bytes read from the source. You can set this pointer to <b>NULL</b>. In this case, this method does not provide the actual number of bytes read.</param>
            /// <param name = "pcbWritten">A pointer to the location where this method writes the actual number of bytes written to the destination. You can set this pointer to <b>NULL</b>. In this case, this method does not provide the actual number of bytes written.</param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-copyto">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CopyTo(win32.Storage.StructuredStorage.IStream*pstm, ulong cb, [Optional] ulong *pcbRead, [Optional] ulong *pcbWritten)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->CopyTo_8(pThis, pstm, cb, pcbRead, pcbWritten);
            }

            /// <summary>The Commit method ensures that any changes made to a stream object open in transacted mode are reflected in the parent storage.</summary>
            /// <param name = "grfCommitFlags">
            /// <para>Controls how the changes for the stream object are committed. See the <a href = "https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-stgc">STGC</a> enumeration for a definition of these values.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-commit#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-commit">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT Commit(uint grfCommitFlags)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->Commit_9(pThis, grfCommitFlags);
            }

            /// <summary>The Revert method discards all changes that have been made to a transacted stream since the last IStream::Commit call. On streams open in direct mode and streams using the COM compound file implementation of IStream::Revert, this method has no effect.</summary>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-revert">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT Revert()
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->Revert_10(pThis);
            }

            /// <summary>The LockRegion method restricts access to a specified range of bytes in the stream.</summary>
            /// <param name = "libOffset">Integer that specifies the byte offset for the beginning of the range.</param>
            /// <param name = "cb">Integer that specifies the length of the range, in bytes, to be restricted.</param>
            /// <param name = "dwLockType">Specifies the restrictions being requested on accessing the range.</param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-lockregion">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT LockRegion(ulong libOffset, ulong cb, uint dwLockType)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->LockRegion_11(pThis, libOffset, cb, dwLockType);
            }

            /// <summary>The UnlockRegion method removes the access restriction on a range of bytes previously restricted with IStream::LockRegion.</summary>
            /// <param name = "libOffset">Specifies the byte offset for the beginning of the range.</param>
            /// <param name = "cb">Specifies, in bytes, the length of the range to be restricted.</param>
            /// <param name = "dwLockType">Specifies the access restrictions previously placed on the range.</param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-unlockregion">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT UnlockRegion(ulong libOffset, ulong cb, uint dwLockType)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->UnlockRegion_12(pThis, libOffset, cb, dwLockType);
            }

            /// <inheritdoc cref = "Stat(win32.Storage.StructuredStorage.STATSTG*, uint)"/>
            internal unsafe win32.System.Com.HRESULT Stat(out win32.Storage.StructuredStorage.STATSTG pstatstg, uint grfStatFlag)
            {
                fixed (win32.Storage.StructuredStorage.STATSTG*pstatstgLocal = &pstatstg)
                {
                    win32.System.Com.HRESULT __result = this.Stat(pstatstgLocal, grfStatFlag);
                    return __result;
                }
            }

            /// <summary>The Stat method retrieves the STATSTG structure for this stream.</summary>
            /// <param name = "pstatstg">
            /// <para>Pointer to a <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure where this method places information about this stream object.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-stat#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "grfStatFlag">
            /// <para>Specifies that this method does not return some of the members in the <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure, thus saving a memory allocation operation. Values are taken from the <a href = "https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-statflag">STATFLAG</a> enumeration.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-stat#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-stat">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Stat(win32.Storage.StructuredStorage.STATSTG*pstatstg, uint grfStatFlag)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->Stat_13(pThis, pstatstg, grfStatFlag);
            }

            /// <summary>The Clone method creates a new stream object with its own seek pointer that references the same bytes as the original stream.</summary>
            /// <param name = "ppstm">
            /// <para>When successful, pointer to the location of an <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a> pointer to the new stream object. If an error occurs, this parameter is <b>NULL</b>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-clone#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istream-clone">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Clone(win32.Storage.StructuredStorage.IStream**ppstm)
            {
                fixed (IStream*pThis = &this)
                    return lpVtbl->Clone_14(pThis, ppstm);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<IStream*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<IStream*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<IStream*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<IStream*, void *, uint, uint *, win32.System.Com.HRESULT>Read_4;
                internal delegate *unmanaged[Stdcall]<IStream*, void *, uint, uint *, win32.System.Com.HRESULT>Write_5;
                internal delegate *unmanaged[Stdcall]<IStream*, long, win32.Storage.StructuredStorage.STREAM_SEEK, ulong *, win32.System.Com.HRESULT>Seek_6;
                internal delegate *unmanaged[Stdcall]<IStream*, ulong, win32.System.Com.HRESULT>SetSize_7;
                internal delegate *unmanaged[Stdcall]<IStream*, win32.Storage.StructuredStorage.IStream*, ulong, ulong *, ulong *, win32.System.Com.HRESULT>CopyTo_8;
                internal delegate *unmanaged[Stdcall]<IStream*, uint, win32.System.Com.HRESULT>Commit_9;
                internal delegate *unmanaged[Stdcall]<IStream*, win32.System.Com.HRESULT>Revert_10;
                internal delegate *unmanaged[Stdcall]<IStream*, ulong, ulong, uint, win32.System.Com.HRESULT>LockRegion_11;
                internal delegate *unmanaged[Stdcall]<IStream*, ulong, ulong, uint, win32.System.Com.HRESULT>UnlockRegion_12;
                internal delegate *unmanaged[Stdcall]<IStream*, win32.Storage.StructuredStorage.STATSTG*, uint, win32.System.Com.HRESULT>Stat_13;
                internal delegate *unmanaged[Stdcall]<IStream*, win32.Storage.StructuredStorage.IStream**, win32.System.Com.HRESULT>Clone_14;
            }

            private Vtbl*lpVtbl;
        }
    }
}