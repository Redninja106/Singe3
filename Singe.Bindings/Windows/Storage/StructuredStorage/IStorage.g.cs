// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Storage.StructuredStorage
    {
        [Guid("0000000B-0000-0000-C000-000000000046")]
        internal unsafe struct IStorage
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "CreateStream(win32.System.SystemServices.PCWSTR, uint, uint, uint, win32.Storage.StructuredStorage.IStream**)"/>
            internal unsafe win32.System.Com.HRESULT CreateStream(string pwcsName, uint grfMode, uint reserved1, uint reserved2, win32.Storage.StructuredStorage.IStream**ppstm)
            {
                fixed (char *pwcsNameLocal = pwcsName)
                {
                    win32.System.Com.HRESULT __result = this.CreateStream(pwcsNameLocal, grfMode, reserved1, reserved2, ppstm);
                    return __result;
                }
            }

            /// <summary>Creates and opens a stream object with the specified name contained in this storage object.</summary>
            /// <param name = "pwcsName">A pointer to a wide character null-terminated Unicode string that contains the name of the newly created stream. The name can be used later to open or reopen the stream. The name must not exceed 31 characters in length, not including the string terminator. The 000 through 01f characters, serving as the first character of the stream/storage name, are reserved for use by OLE. This is a compound file restriction, not a structured storage restriction.</param>
            /// <param name = "grfMode">Specifies the access mode to use when opening the newly created stream. For more information and descriptions of the possible values, see <a href = "https://docs.microsoft.com/windows/desktop/Stg/stgm-constants">STGM Constants</a>.</param>
            /// <param name = "reserved1">Reserved for future use; must be zero.</param>
            /// <param name = "reserved2">Reserved for future use; must be zero.</param>
            /// <param name = "ppstm">
            /// <para>On return, pointer to the location of the new <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a> interface pointer. This is only valid if the operation is successful. When an error occurs, this parameter is set to <b>NULL</b>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-createstream#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-createstream">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CreateStream(win32.System.SystemServices.PCWSTR pwcsName, uint grfMode, uint reserved1, uint reserved2, win32.Storage.StructuredStorage.IStream**ppstm)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->CreateStream_4(pThis, pwcsName, grfMode, reserved1, reserved2, ppstm);
            }

            /// <inheritdoc cref = "OpenStream(win32.System.SystemServices.PCWSTR, void *, uint, uint, win32.Storage.StructuredStorage.IStream**)"/>
            internal unsafe win32.System.Com.HRESULT OpenStream(string pwcsName, void *reserved1, uint grfMode, uint reserved2, win32.Storage.StructuredStorage.IStream**ppstm)
            {
                fixed (char *pwcsNameLocal = pwcsName)
                {
                    win32.System.Com.HRESULT __result = this.OpenStream(pwcsNameLocal, reserved1, grfMode, reserved2, ppstm);
                    return __result;
                }
            }

            /// <summary>Opens an existing stream object within this storage object in the specified access mode.</summary>
            /// <param name = "pwcsName">A pointer to a wide character null-terminated Unicode string that contains the name of the stream to open. The 000 through 01f characters, serving as the first character of the stream/storage name, are reserved for use by OLE. This is a compound file restriction, not a structured storage restriction.</param>
            /// <param name = "reserved1">Reserved for future use; must be <b>NULL</b>.</param>
            /// <param name = "grfMode">Specifies the access mode to be assigned to the open stream. For more information and descriptions of possible values, see <a href = "https://docs.microsoft.com/windows/desktop/Stg/stgm-constants">STGM Constants</a>.  Other modes you choose must at least specify STGM_SHARE_EXCLUSIVE when calling this method in the compound file implementation.</param>
            /// <param name = "reserved2">Reserved for future use; must be zero.</param>
            /// <param name = "ppstm">
            /// <para>A pointer to <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a> pointer variable that receives the interface pointer to the newly opened stream object. If an error occurs, *<i>ppstm</i> must be set to <b>NULL</b>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-openstream#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-openstream">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT OpenStream(win32.System.SystemServices.PCWSTR pwcsName, void *reserved1, uint grfMode, uint reserved2, win32.Storage.StructuredStorage.IStream**ppstm)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->OpenStream_5(pThis, pwcsName, reserved1, grfMode, reserved2, ppstm);
            }

            /// <inheritdoc cref = "CreateStorage(win32.System.SystemServices.PCWSTR, uint, uint, uint, win32.Storage.StructuredStorage.IStorage**)"/>
            internal unsafe win32.System.Com.HRESULT CreateStorage(string pwcsName, uint grfMode, uint reserved1, uint reserved2, win32.Storage.StructuredStorage.IStorage**ppstg)
            {
                fixed (char *pwcsNameLocal = pwcsName)
                {
                    win32.System.Com.HRESULT __result = this.CreateStorage(pwcsNameLocal, grfMode, reserved1, reserved2, ppstg);
                    return __result;
                }
            }

            /// <summary>Creates and opens a new storage object nested within this storage object with the specified name in the specified access mode.</summary>
            /// <param name = "pwcsName">A pointer to a wide character null-terminated Unicode string that contains the name of the newly created storage object. The name can be used later to reopen the storage object. The name must not exceed 31 characters in length, not including the string terminator. The 000 through 01f characters, serving as the first character of the stream/storage name, are reserved for use by OLE. This is a compound file restriction, not a structured storage restriction.</param>
            /// <param name = "grfMode">A value that specifies the access mode to use when opening the newly created storage object. For more information and a description of possible values, see <a href = "https://docs.microsoft.com/windows/desktop/Stg/stgm-constants">STGM Constants</a>.</param>
            /// <param name = "reserved1">Reserved for future use; must be zero.</param>
            /// <param name = "reserved2">Reserved for future use; must be zero.</param>
            /// <param name = "ppstg">
            /// <para>A pointer, when successful, to the location of the <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a> pointer to the newly created storage object. This parameter is set to <b>NULL</b> if an error occurs.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-createstorage#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-createstorage">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CreateStorage(win32.System.SystemServices.PCWSTR pwcsName, uint grfMode, uint reserved1, uint reserved2, win32.Storage.StructuredStorage.IStorage**ppstg)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->CreateStorage_6(pThis, pwcsName, grfMode, reserved1, reserved2, ppstg);
            }

            /// <inheritdoc cref = "OpenStorage(win32.System.SystemServices.PCWSTR, win32.Storage.StructuredStorage.IStorage*, uint, ushort **, uint, win32.Storage.StructuredStorage.IStorage**)"/>
            internal unsafe win32.System.Com.HRESULT OpenStorage(string pwcsName, win32.Storage.StructuredStorage.IStorage*pstgPriority, uint grfMode, in ushort *snbExclude, uint reserved, win32.Storage.StructuredStorage.IStorage**ppstg)
            {
                fixed (ushort **snbExcludeLocal = &snbExclude)
                {
                    fixed (char *pwcsNameLocal = pwcsName)
                    {
                        win32.System.Com.HRESULT __result = this.OpenStorage(pwcsNameLocal, pstgPriority, grfMode, snbExcludeLocal, reserved, ppstg);
                        return __result;
                    }
                }
            }

            /// <summary>Opens an existing storage object with the specified name in the specified access mode.</summary>
            /// <param name = "pwcsName">A pointer to a wide character null-terminated Unicode string that contains the name of the storage object to open. The 000 through 01f characters, serving as the first character of the stream/storage name, are reserved for use by OLE. This is a compound file restriction, not a structured storage restriction. It is ignored if <i>pstgPriority</i> is non-<b>NULL</b>.</param>
            /// <param name = "pstgPriority">Must be <b>NULL</b>. A non-<b>NULL</b> value will return STG_E_INVALIDPARAMETER.</param>
            /// <param name = "grfMode">Specifies the access mode to use when opening the storage object. For descriptions of the possible values, see <a href = "https://docs.microsoft.com/windows/desktop/Stg/stgm-constants">STGM Constants</a>. Other modes you choose must at least specify STGM_SHARE_EXCLUSIVE when calling this method.</param>
            /// <param name = "snbExclude">Must be <b>NULL</b>. A non-<b>NULL</b> value will return STG_E_INVALIDPARAMETER.</param>
            /// <param name = "reserved">Reserved for future use; must be zero.</param>
            /// <param name = "ppstg">
            /// <para>When successful, pointer to the location of an <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a> pointer to the opened storage object. This parameter is set to <b>NULL</b> if an error occurs.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-openstorage#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-openstorage">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT OpenStorage(win32.System.SystemServices.PCWSTR pwcsName, win32.Storage.StructuredStorage.IStorage*pstgPriority, uint grfMode, ushort **snbExclude, uint reserved, win32.Storage.StructuredStorage.IStorage**ppstg)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->OpenStorage_7(pThis, pwcsName, pstgPriority, grfMode, snbExclude, reserved, ppstg);
            }

            /// <inheritdoc cref = "CopyTo(uint, global::System.Guid*, ushort **, win32.Storage.StructuredStorage.IStorage*)"/>
            internal unsafe win32.System.Com.HRESULT CopyTo(ReadOnlySpan<global::System.Guid> rgiidExclude, ushort **snbExclude, win32.Storage.StructuredStorage.IStorage*pstgDest)
            {
                fixed (global::System.Guid*rgiidExcludeLocal = rgiidExclude)
                {
                    win32.System.Com.HRESULT __result = this.CopyTo((uint)rgiidExclude.Length, rgiidExcludeLocal, snbExclude, pstgDest);
                    return __result;
                }
            }

            /// <summary>Copies the entire contents of an open storage object to another storage object.</summary>
            /// <param name = "ciidExclude">The number of elements in the array pointed to by <i>rgiidExclude</i>. If <i>rgiidExclude</i> is <b>NULL</b>, then <i>ciidExclude</i> is ignored.</param>
            /// <param name = "rgiidExclude">
            /// <para>An array of interface identifiers (IIDs) that either the caller knows about and does not want copied or that the storage object does not support, but whose state the caller will later explicitly copy. The array can include <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a>, indicating that only stream objects are to be copied, and <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>, indicating that only storage objects are to be copied. An array length of zero indicates that only the state exposed by the <b>IStorage</b> object is to be copied; all other interfaces on the object are to be ignored. Passing <b>NULL</b> indicates that all interfaces on the object are to be copied.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-copyto#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "snbExclude">
            /// <para>A string name block (refer to <a href = "https://docs.microsoft.com/windows/desktop/Stg/snb">SNB</a>) that specifies a block of storage or stream objects that are not to be copied to the destination. These elements are not created at the destination. If <b>IID_IStorage</b> is in the <i>rgiidExclude</i> array, this parameter is ignored. This parameter may be <b>NULL</b>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-copyto#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pstgDest">
            /// <para>A pointer to the open storage object into which this storage object is to be copied. The destination storage object can be a different implementation of the <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a> interface from the source storage object. Thus, <b>IStorage::CopyTo</b> can use only publicly available methods of the destination storage object. If <i>pstgDest</i> is open in transacted mode, it can be reverted by calling its <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-revert">IStorage::Revert</a> method.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-copyto#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-copyto">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CopyTo(uint ciidExclude, [Optional] global::System.Guid*rgiidExclude, [Optional] ushort **snbExclude, win32.Storage.StructuredStorage.IStorage*pstgDest)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->CopyTo_8(pThis, ciidExclude, rgiidExclude, snbExclude, pstgDest);
            }

            /// <inheritdoc cref = "MoveElementTo(win32.System.SystemServices.PCWSTR, win32.Storage.StructuredStorage.IStorage*, win32.System.SystemServices.PCWSTR, uint)"/>
            internal unsafe win32.System.Com.HRESULT MoveElementTo(string pwcsName, win32.Storage.StructuredStorage.IStorage*pstgDest, string pwcsNewName, uint grfFlags)
            {
                fixed (char *pwcsNewNameLocal = pwcsNewName)
                {
                    fixed (char *pwcsNameLocal = pwcsName)
                    {
                        win32.System.Com.HRESULT __result = this.MoveElementTo(pwcsNameLocal, pstgDest, pwcsNewNameLocal, grfFlags);
                        return __result;
                    }
                }
            }

            /// <summary>The MoveElementTo method copies or moves a substorage or stream from this storage object to another storage object.</summary>
            /// <param name = "pwcsName">Pointer to a wide character null-terminated Unicode string that contains the name of the element in this storage object to be moved or copied.</param>
            /// <param name = "pstgDest"><a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a> pointer to the destination storage object.</param>
            /// <param name = "pwcsNewName">Pointer to a wide character null-terminated unicode string that contains the new name for the element in its new storage object.</param>
            /// <param name = "grfFlags">
            /// <para>Specifies whether the operation should be a move (STGMOVE_MOVE) or a copy (STGMOVE_COPY). See the <a href = "https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-stgmove">STGMOVE</a> enumeration.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-moveelementto#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-moveelementto">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT MoveElementTo(win32.System.SystemServices.PCWSTR pwcsName, win32.Storage.StructuredStorage.IStorage*pstgDest, win32.System.SystemServices.PCWSTR pwcsNewName, uint grfFlags)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->MoveElementTo_9(pThis, pwcsName, pstgDest, pwcsNewName, grfFlags);
            }

            /// <summary>The Commit method ensures that any changes made to a storage object open in transacted mode are reflected in the parent storage.</summary>
            /// <param name = "grfCommitFlags">
            /// <para>Controls how the changes are committed to the storage object. See the <a href = "https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-stgc">STGC</a> enumeration for a definition of these values.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-commit#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-commit">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT Commit(uint grfCommitFlags)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->Commit_10(pThis, grfCommitFlags);
            }

            /// <summary>The Revert method discards all changes that have been made to the storage object since the last commit operation.</summary>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-revert">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT Revert()
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->Revert_11(pThis);
            }

            /// <summary>The EnumElements method retrieves a pointer to an enumerator object that can be used to enumerate the storage and stream objects contained within this storage object.</summary>
            /// <param name = "reserved1">Reserved for future use; must be zero.</param>
            /// <param name = "reserved2">Reserved for future use; must be <b>NULL</b>.</param>
            /// <param name = "reserved3">Reserved for future use; must be zero.</param>
            /// <param name = "ppenum">
            /// <para>Pointer to <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstatstg">IEnumSTATSTG</a>* pointer variable that receives the interface pointer to the new enumerator object.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-enumelements#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-enumelements">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT EnumElements(uint reserved1, void *reserved2, uint reserved3, win32.Storage.StructuredStorage.IEnumSTATSTG**ppenum)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->EnumElements_12(pThis, reserved1, reserved2, reserved3, ppenum);
            }

            /// <inheritdoc cref = "DestroyElement(win32.System.SystemServices.PCWSTR)"/>
            internal unsafe win32.System.Com.HRESULT DestroyElement(string pwcsName)
            {
                fixed (char *pwcsNameLocal = pwcsName)
                {
                    win32.System.Com.HRESULT __result = this.DestroyElement(pwcsNameLocal);
                    return __result;
                }
            }

            /// <summary>Removes the specified storage or stream from this storage object.</summary>
            /// <param name = "pwcsName">A pointer to a wide character null-terminated Unicode string that contains the name of the storage or stream to be removed.</param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-destroyelement">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT DestroyElement(win32.System.SystemServices.PCWSTR pwcsName)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->DestroyElement_13(pThis, pwcsName);
            }

            /// <inheritdoc cref = "RenameElement(win32.System.SystemServices.PCWSTR, win32.System.SystemServices.PCWSTR)"/>
            internal unsafe win32.System.Com.HRESULT RenameElement(string pwcsOldName, string pwcsNewName)
            {
                fixed (char *pwcsNewNameLocal = pwcsNewName)
                {
                    fixed (char *pwcsOldNameLocal = pwcsOldName)
                    {
                        win32.System.Com.HRESULT __result = this.RenameElement(pwcsOldNameLocal, pwcsNewNameLocal);
                        return __result;
                    }
                }
            }

            /// <summary>The RenameElement method renames the specified substorage or stream in this storage object.</summary>
            /// <param name = "pwcsOldName">
            /// <para>Pointer to a wide character null-terminated Unicode string that contains the name of the substorage or stream to be changed.</para>
            /// <para><div class = "alert"><b>Note</b>  The <i>pwcsName</i>, created in <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-createstorage">CreateStorage</a> or <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-createstream">CreateStream</a> must not exceed 31 characters in length, not including the string terminator.</div> <div> </div></para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-renameelement#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pwcsNewName">
            /// <para>Pointer to a wide character null-terminated unicode string that contains the new name for the specified substorage or stream.</para>
            /// <para><div class = "alert"><b>Note</b>  The <i>pwcsName</i>, created in <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-createstorage">CreateStorage</a> or <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-createstream">CreateStream</a> must not exceed 31 characters in length, not including the string terminator.</div> <div> </div></para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-renameelement#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-renameelement">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT RenameElement(win32.System.SystemServices.PCWSTR pwcsOldName, win32.System.SystemServices.PCWSTR pwcsNewName)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->RenameElement_14(pThis, pwcsOldName, pwcsNewName);
            }

            /// <inheritdoc cref = "SetElementTimes(win32.System.SystemServices.PCWSTR, global::System.Runtime.InteropServices.ComTypes.FILETIME*, global::System.Runtime.InteropServices.ComTypes.FILETIME*, global::System.Runtime.InteropServices.ComTypes.FILETIME*)"/>
            internal unsafe win32.System.Com.HRESULT SetElementTimes(string pwcsName, in global::System.Runtime.InteropServices.ComTypes.FILETIME pctime, in global::System.Runtime.InteropServices.ComTypes.FILETIME patime, in global::System.Runtime.InteropServices.ComTypes.FILETIME pmtime)
            {
                fixed (global::System.Runtime.InteropServices.ComTypes.FILETIME*pmtimeLocal = &pmtime)
                {
                    fixed (global::System.Runtime.InteropServices.ComTypes.FILETIME*patimeLocal = &patime)
                    {
                        fixed (global::System.Runtime.InteropServices.ComTypes.FILETIME*pctimeLocal = &pctime)
                        {
                            fixed (char *pwcsNameLocal = pwcsName)
                            {
                                win32.System.Com.HRESULT __result = this.SetElementTimes(pwcsNameLocal, pctimeLocal, patimeLocal, pmtimeLocal);
                                return __result;
                            }
                        }
                    }
                }
            }

            /// <summary>The SetElementTimes method sets the modification, access, and creation times of the specified storage element, if the underlying file system supports this method.</summary>
            /// <param name = "pwcsName">The name of the storage object element whose times are to be modified. If <b>NULL</b>, the time is set on the root storage rather than one of its elements.</param>
            /// <param name = "pctime">Either the new creation time for the element or <b>NULL</b> if the creation time is not to be modified.</param>
            /// <param name = "patime">Either the new access time for the element or <b>NULL</b> if the access time is not to be modified.</param>
            /// <param name = "pmtime">Either the new modification time for the element or <b>NULL</b> if the modification time is not to be modified.</param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-setelementtimes">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetElementTimes(win32.System.SystemServices.PCWSTR pwcsName, global::System.Runtime.InteropServices.ComTypes.FILETIME*pctime, global::System.Runtime.InteropServices.ComTypes.FILETIME*patime, global::System.Runtime.InteropServices.ComTypes.FILETIME*pmtime)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->SetElementTimes_15(pThis, pwcsName, pctime, patime, pmtime);
            }

            /// <inheritdoc cref = "SetClass(global::System.Guid*)"/>
            internal unsafe win32.System.Com.HRESULT SetClass(in global::System.Guid clsid)
            {
                fixed (global::System.Guid*clsidLocal = &clsid)
                {
                    win32.System.Com.HRESULT __result = this.SetClass(clsidLocal);
                    return __result;
                }
            }

            /// <summary>The SetClass method assigns the specified class identifier (CLSID) to this storage object.</summary>
            /// <param name = "clsid">The CLSID that is to be associated with the storage object.</param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-setclass">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetClass(global::System.Guid*clsid)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->SetClass_16(pThis, clsid);
            }

            /// <summary>The SetStateBits method stores up to 32 bits of state information in this storage object.</summary>
            /// <param name = "grfStateBits">Specifies the new values of the bits to set. No legal values are defined for these bits; they are all reserved for future use and must not be used by applications.</param>
            /// <param name = "grfMask">A binary mask indicating which bits in <i>grfStateBits</i> are significant in this call.</param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-setstatebits">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT SetStateBits(uint grfStateBits, uint grfMask)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->SetStateBits_17(pThis, grfStateBits, grfMask);
            }

            /// <inheritdoc cref = "Stat(win32.Storage.StructuredStorage.STATSTG*, uint)"/>
            internal unsafe win32.System.Com.HRESULT Stat(out win32.Storage.StructuredStorage.STATSTG pstatstg, uint grfStatFlag)
            {
                fixed (win32.Storage.StructuredStorage.STATSTG*pstatstgLocal = &pstatstg)
                {
                    win32.System.Com.HRESULT __result = this.Stat(pstatstgLocal, grfStatFlag);
                    return __result;
                }
            }

            /// <summary>The Stat method retrieves the STATSTG structure for this open storage object.</summary>
            /// <param name = "pstatstg">
            /// <para>On return, pointer to a <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure where this method places information about the open storage object. This parameter is <b>NULL</b> if an error occurs.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-stat#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "grfStatFlag">
            /// <para>Specifies that some of the members in the <a href = "https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure are not returned, thus saving a memory allocation operation. Values are taken from the <a href = "https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-statflag">STATFLAG</a> enumeration.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-stat#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>This method can return one of these values.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//objidl/nf-objidl-istorage-stat">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Stat(win32.Storage.StructuredStorage.STATSTG*pstatstg, uint grfStatFlag)
            {
                fixed (IStorage*pThis = &this)
                    return lpVtbl->Stat_18(pThis, pstatstg, grfStatFlag);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<IStorage*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<IStorage*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<IStorage*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.System.SystemServices.PCWSTR, uint, uint, uint, win32.Storage.StructuredStorage.IStream**, win32.System.Com.HRESULT>CreateStream_4;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.System.SystemServices.PCWSTR, void *, uint, uint, win32.Storage.StructuredStorage.IStream**, win32.System.Com.HRESULT>OpenStream_5;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.System.SystemServices.PCWSTR, uint, uint, uint, win32.Storage.StructuredStorage.IStorage**, win32.System.Com.HRESULT>CreateStorage_6;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.System.SystemServices.PCWSTR, win32.Storage.StructuredStorage.IStorage*, uint, ushort **, uint, win32.Storage.StructuredStorage.IStorage**, win32.System.Com.HRESULT>OpenStorage_7;
                internal delegate *unmanaged[Stdcall]<IStorage*, uint, global::System.Guid*, ushort **, win32.Storage.StructuredStorage.IStorage*, win32.System.Com.HRESULT>CopyTo_8;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.System.SystemServices.PCWSTR, win32.Storage.StructuredStorage.IStorage*, win32.System.SystemServices.PCWSTR, uint, win32.System.Com.HRESULT>MoveElementTo_9;
                internal delegate *unmanaged[Stdcall]<IStorage*, uint, win32.System.Com.HRESULT>Commit_10;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.System.Com.HRESULT>Revert_11;
                internal delegate *unmanaged[Stdcall]<IStorage*, uint, void *, uint, win32.Storage.StructuredStorage.IEnumSTATSTG**, win32.System.Com.HRESULT>EnumElements_12;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.System.SystemServices.PCWSTR, win32.System.Com.HRESULT>DestroyElement_13;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.System.SystemServices.PCWSTR, win32.System.SystemServices.PCWSTR, win32.System.Com.HRESULT>RenameElement_14;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.System.SystemServices.PCWSTR, global::System.Runtime.InteropServices.ComTypes.FILETIME*, global::System.Runtime.InteropServices.ComTypes.FILETIME*, global::System.Runtime.InteropServices.ComTypes.FILETIME*, win32.System.Com.HRESULT>SetElementTimes_15;
                internal delegate *unmanaged[Stdcall]<IStorage*, global::System.Guid*, win32.System.Com.HRESULT>SetClass_16;
                internal delegate *unmanaged[Stdcall]<IStorage*, uint, uint, win32.System.Com.HRESULT>SetStateBits_17;
                internal delegate *unmanaged[Stdcall]<IStorage*, win32.Storage.StructuredStorage.STATSTG*, uint, win32.System.Com.HRESULT>Stat_18;
            }

            private Vtbl*lpVtbl;
        }
    }
}