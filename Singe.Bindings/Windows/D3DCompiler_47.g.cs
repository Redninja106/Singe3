// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    internal static partial class D3DCompiler_47
    {
        /// <summary>Disassembles a section of compiled Microsoft High Level Shader Language (HLSL) code that is specified by shader trace steps.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b>LPCVOID</b></para>
        /// <para>A pointer to compiled shader data.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-d3ddisassemble11trace#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b>SIZE_T</b></para>
        /// <para>The size, in bytes, of the block of memory that pSrcData points to.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-d3ddisassemble11trace#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pTrace">
        /// <para>Type: <b>ID3D11ShaderTrace*</b></para>
        /// <para>A pointer to the ID3D11ShaderTrace interface for the shader trace information object.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-d3ddisassemble11trace#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "StartStep">
        /// <para>Type: <b>UINT</b></para>
        /// <para>The number of the step in the trace from which D3DDisassemble11Trace starts the disassembly.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-d3ddisassemble11trace#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "NumSteps">
        /// <para>Type: <b>UINT</b></para>
        /// <para>The number of trace steps to disassemble.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-d3ddisassemble11trace#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">
        /// <para>Type: <b>UINT</b></para>
        /// <para>A combination of zero or more of the following flags that are combined by using a bitwise OR operation. The resulting value specifies how D3DDisassemble11Trace disassembles the compiled shader data.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-d3ddisassemble11trace#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDisassembly">
        /// <para>Type: <b>ID3D10Blob**</b></para>
        /// <para>A pointer to a buffer that receives the ID3DBlob interface that accesses the disassembled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-d3ddisassemble11trace#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns an HRESULT error code.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/nf-d3d11shadertracing-d3ddisassemble11trace">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DDisassemble11Trace(void *pSrcData, nuint SrcDataSize, win32.Graphics.Direct3D11.ID3D11ShaderTrace*pTrace, uint StartStep, uint NumSteps, uint Flags, win32.Graphics.Direct3D11.ID3DBlob**ppDisassembly);
        /// <inheritdoc cref = "D3DReadFileToBlob(win32.System.SystemServices.PCWSTR, win32.Graphics.Direct3D11.ID3DBlob**)"/>
        internal static unsafe win32.System.Com.HRESULT D3DReadFileToBlob(string pFileName, win32.Graphics.Direct3D11.ID3DBlob**ppContents)
        {
            fixed (char *pFileNameLocal = pFileName)
            {
                win32.System.Com.HRESULT __result = D3DCompiler_47.D3DReadFileToBlob(pFileNameLocal, ppContents);
                return __result;
            }
        }

        /// <summary>Reads a file that is on disk into memory.</summary>
        /// <param name = "pFileName">A pointer to a constant null-terminated string that contains  the name of the file to read into memory.</param>
        /// <param name = "ppContents">A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that contains information that <b>D3DReadFileToBlob</b> read from the <i>pFileName</i> file. You can use this <b>ID3DBlob</b> interface to access the file information and pass it to other compiler functions.</param>
        /// <returns>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreadfiletoblob">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DReadFileToBlob(win32.System.SystemServices.PCWSTR pFileName, win32.Graphics.Direct3D11.ID3DBlob**ppContents);
        /// <inheritdoc cref = "D3DWriteBlobToFile(win32.Graphics.Direct3D11.ID3DBlob*, win32.System.SystemServices.PCWSTR, bool)"/>
        internal static unsafe win32.System.Com.HRESULT D3DWriteBlobToFile(win32.Graphics.Direct3D11.ID3DBlob*pBlob, string pFileName, bool bOverwrite)
        {
            fixed (char *pFileNameLocal = pFileName)
            {
                win32.System.Com.HRESULT __result = D3DCompiler_47.D3DWriteBlobToFile(pBlob, pFileNameLocal, bOverwrite);
                return __result;
            }
        }

        /// <summary>Writes a memory blob to a file on disk.</summary>
        /// <param name = "pBlob">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>*</b></para>
        /// <para>A pointer to a <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that contains the memory blob to write to the file that the <i>pFileName</i> parameter specifies.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dwriteblobtofile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pFileName">
        /// <para>Type: <b>LPCWSTR</b></para>
        /// <para>A pointer to a constant null-terminated string that contains  the name of the file to which to write.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dwriteblobtofile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "bOverwrite">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
        /// <para>A Boolean value that specifies whether to overwrite information in the <i>pFileName</i> file. TRUE specifies to overwrite information and FALSE specifies not to overwrite information.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dwriteblobtofile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dwriteblobtofile">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DWriteBlobToFile(win32.Graphics.Direct3D11.ID3DBlob*pBlob, win32.System.SystemServices.PCWSTR pFileName, bool bOverwrite);
        /// <inheritdoc cref = "D3DCompile(void *, nuint, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D11.D3D_SHADER_MACRO*, win32.Graphics.Direct3D11.ID3DInclude*, win32.System.SystemServices.PCSTR, win32.System.SystemServices.PCSTR, uint, uint, win32.Graphics.Direct3D11.ID3DBlob**, win32.Graphics.Direct3D11.ID3DBlob**)"/>
        internal static unsafe win32.System.Com.HRESULT D3DCompile(void *pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pSourceName, win32.Graphics.Direct3D11.D3D_SHADER_MACRO? pDefines, win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.System.SystemServices.PCSTR pEntrypoint, win32.System.SystemServices.PCSTR pTarget, uint Flags1, uint Flags2, win32.Graphics.Direct3D11.ID3DBlob**ppCode, win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs)
        {
            win32.Graphics.Direct3D11.D3D_SHADER_MACRO pDefinesLocal = pDefines.HasValue ? pDefines.Value : default(win32.Graphics.Direct3D11.D3D_SHADER_MACRO);
            win32.System.Com.HRESULT __result = D3DCompiler_47.D3DCompile(pSrcData, SrcDataSize, pSourceName, pDefines.HasValue ? &pDefinesLocal : null, pInclude, pEntrypoint, pTarget, Flags1, Flags2, ppCode, ppErrorMsgs);
            return __result;
        }

        /// <summary>Compile HLSL code or an effect file into bytecode for a given target.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to uncompiled shader data; either ASCII HLSL code or a compiled effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pSrcData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pSourceName">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>You can use this parameter for strings that specify  error messages. If not used, set to <b>NULL</b>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pDefines">
        /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D_SHADER_MACRO</a>*</b></para>
        /// <para>An array of NULL-terminated macro definitions (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D_SHADER_MACRO</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pInclude">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3dinclude">ID3DInclude</a>*</b></para>
        /// <para>Optional. A pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3dinclude">ID3DInclude</a> for handling include files. Setting this to <b>NULL</b> will cause a compile error if a shader contains a #include. You can pass the <b>D3D_COMPILE_STANDARD_FILE_INCLUDE</b> macro, which is a pointer to a default include handler. This default include handler includes files that are relative to the current directory and files that are relative to the directory of the initial source file. When you use <b>D3D_COMPILE_STANDARD_FILE_INCLUDE</b>, you must specify the source file name in the <i>pSourceName</i> parameter; the compiler will derive the initial relative directory from <i>pSourceName</i>.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pEntrypoint">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The name of the shader entry point function where shader execution begins. When you compile using a fx profile (for example, fx_4_0, fx_5_0, and so on), <b>D3DCompile</b> ignores <i>pEntrypoint</i>. In this case, we recommend that you set <i>pEntrypoint</i> to <b>NULL</b> because it is good programming practice to set a pointer parameter to <b>NULL</b> if the called function will not use it. For all other shader profiles, a valid <i>pEntrypoint</i> is required.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pTarget">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>A string that specifies the shader target or set of shader features to compile against. The shader target can be shader model 2, shader model 3, shader model 4, or shader model 5. The target can also be an effect type (for example, fx_4_1). For info about the targets that various profiles support, see <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/specifying-compiler-targets">Specifying Compiler Targets</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags1">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Flags defined by <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dcompile-constants">D3D compile constants</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags2">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Flags defined by <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dcompile-effect-constants">D3D compile effect constants</a>. When you compile a shader and not an effect file, <b>D3DCompile</b> ignores <i>Flags2</i>; we recommend that you set <i>Flags2</i> to zero because it is good programming practice to set a nonpointer parameter to zero if the called function will not use it.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppCode">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the compiled code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppErrorMsgs">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access compiler error messages, or <b>NULL</b> if there are no errors.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DCompile(void *pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pSourceName, [Optional] win32.Graphics.Direct3D11.D3D_SHADER_MACRO*pDefines, [Optional] win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.System.SystemServices.PCSTR pEntrypoint, win32.System.SystemServices.PCSTR pTarget, uint Flags1, uint Flags2, win32.Graphics.Direct3D11.ID3DBlob**ppCode, [Optional] win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs);
        /// <inheritdoc cref = "D3DCompile2(void *, nuint, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D11.D3D_SHADER_MACRO*, win32.Graphics.Direct3D11.ID3DInclude*, win32.System.SystemServices.PCSTR, win32.System.SystemServices.PCSTR, uint, uint, uint, void *, nuint, win32.Graphics.Direct3D11.ID3DBlob**, win32.Graphics.Direct3D11.ID3DBlob**)"/>
        internal static unsafe win32.System.Com.HRESULT D3DCompile2(void *pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pSourceName, win32.Graphics.Direct3D11.D3D_SHADER_MACRO? pDefines, win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.System.SystemServices.PCSTR pEntrypoint, win32.System.SystemServices.PCSTR pTarget, uint Flags1, uint Flags2, uint SecondaryDataFlags, void *pSecondaryData, nuint SecondaryDataSize, win32.Graphics.Direct3D11.ID3DBlob**ppCode, win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs)
        {
            win32.Graphics.Direct3D11.D3D_SHADER_MACRO pDefinesLocal = pDefines.HasValue ? pDefines.Value : default(win32.Graphics.Direct3D11.D3D_SHADER_MACRO);
            win32.System.Com.HRESULT __result = D3DCompiler_47.D3DCompile2(pSrcData, SrcDataSize, pSourceName, pDefines.HasValue ? &pDefinesLocal : null, pInclude, pEntrypoint, pTarget, Flags1, Flags2, SecondaryDataFlags, pSecondaryData, SecondaryDataSize, ppCode, ppErrorMsgs);
            return __result;
        }

        /// <summary>Compiles Microsoft High Level Shader Language (HLSL) code into bytecode for a given target.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to uncompiled shader data (ASCII HLSL code).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The size, in bytes, of the block of memory that <i>pSrcData</i> points to.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pSourceName">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>An optional pointer to a constant null-terminated string containing the name that identifies the source data to use in error messages. If not used, set to <b>NULL</b>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pDefines">
        /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D_SHADER_MACRO</a>*</b></para>
        /// <para>An optional array of <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D_SHADER_MACRO</a> structures that define shader macros. Each macro definition contains a name and a NULL-terminated definition. If not used, set to <b>NULL</b>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pInclude">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3dinclude">ID3DInclude</a>*</b></para>
        /// <para>A pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3dinclude">ID3DInclude</a> interface that the compiler uses to handle include files. If you set this parameter to <b>NULL</b> and the shader contains a #include, a compile error occurs. You can pass the <b>D3D_COMPILE_STANDARD_FILE_INCLUDE</b> macro, which is a pointer to a default include handler. This default include handler includes files that are relative to the current directory and files that are relative to the directory of the initial source file. When you use <b>D3D_COMPILE_STANDARD_FILE_INCLUDE</b>, you must specify the source file name in the <i>pSourceName</i> parameter; the compiler will derive the initial relative directory from <i>pSourceName</i>.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pEntrypoint">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>A pointer to a constant null-terminated string that contains  the name of the shader entry point function where shader execution begins. When you compile an effect, <b>D3DCompile2</b> ignores <i>pEntrypoint</i>; we recommend that you set <i>pEntrypoint</i> to <b>NULL</b> because it is good programming practice to set a pointer parameter to <b>NULL</b> if the called function will not use it.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pTarget">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>A pointer to a constant null-terminated string that specifies the shader target or set of shader features to compile against. The shader target can be a shader model (for example, shader model 2, shader model 3, shader model 4, or shader model 5). The target can also be an effect type (for example, fx_4_1). For info about the targets that various profiles support, see <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/specifying-compiler-targets">Specifying Compiler Targets</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags1">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>A combination of shader <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dcompile-constants">D3D compile constants</a> that are combined by using a bitwise <b>OR</b> operation. The resulting value specifies how the compiler compiles the HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags2">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>A combination of effect <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dcompile-effect-constants">D3D compile effect constants</a> that are combined by using a bitwise <b>OR</b> operation. The resulting value specifies how the compiler compiles the effect. When you compile a shader and not an effect file, <b>D3DCompile2</b> ignores <i>Flags2</i>; we recommend that you set <i>Flags2</i> to zero because it is good programming practice to set a nonpointer parameter to zero if the called function will not use it.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SecondaryDataFlags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>A combination of the following flags that are combined by using a bitwise <b>OR</b> operation. The resulting value specifies how the compiler compiles the HLSL code.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pSecondaryData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to secondary data. If you don't pass secondary data, set to <b>NULL</b>. Use this secondary data  to align UAV slots in two shaders. Suppose shader A has UAVs and they are bound to some slots. To compile shader B such that UAVs with the same names are mapped in B to the same slots as in A, pass A’s byte code to <b>D3DCompile2</b> as the secondary data.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SecondaryDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The size, in bytes, of the block of memory that <i>pSecondaryData</i> points to. If <i>pSecondaryData</i> is <b>NULL</b>, set to zero.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppCode">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the compiled code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppErrorMsgs">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access compiler error messages, or <b>NULL</b> if there are no errors.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompile2">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DCompile2(void *pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pSourceName, [Optional] win32.Graphics.Direct3D11.D3D_SHADER_MACRO*pDefines, [Optional] win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.System.SystemServices.PCSTR pEntrypoint, win32.System.SystemServices.PCSTR pTarget, uint Flags1, uint Flags2, uint SecondaryDataFlags, [Optional] void *pSecondaryData, nuint SecondaryDataSize, win32.Graphics.Direct3D11.ID3DBlob**ppCode, [Optional] win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs);
        /// <inheritdoc cref = "D3DCompileFromFile(win32.System.SystemServices.PCWSTR, win32.Graphics.Direct3D11.D3D_SHADER_MACRO*, win32.Graphics.Direct3D11.ID3DInclude*, win32.System.SystemServices.PCSTR, win32.System.SystemServices.PCSTR, uint, uint, win32.Graphics.Direct3D11.ID3DBlob**, win32.Graphics.Direct3D11.ID3DBlob**)"/>
        internal static unsafe win32.System.Com.HRESULT D3DCompileFromFile(string pFileName, win32.Graphics.Direct3D11.D3D_SHADER_MACRO? pDefines, win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.System.SystemServices.PCSTR pEntrypoint, win32.System.SystemServices.PCSTR pTarget, uint Flags1, uint Flags2, win32.Graphics.Direct3D11.ID3DBlob**ppCode, win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs)
        {
            fixed (char *pFileNameLocal = pFileName)
            {
                win32.Graphics.Direct3D11.D3D_SHADER_MACRO pDefinesLocal = pDefines.HasValue ? pDefines.Value : default(win32.Graphics.Direct3D11.D3D_SHADER_MACRO);
                win32.System.Com.HRESULT __result = D3DCompiler_47.D3DCompileFromFile(pFileNameLocal, pDefines.HasValue ? &pDefinesLocal : null, pInclude, pEntrypoint, pTarget, Flags1, Flags2, ppCode, ppErrorMsgs);
                return __result;
            }
        }

        /// <summary>Compiles Microsoft High Level Shader Language (HLSL) code into bytecode for a given target.</summary>
        /// <param name = "pFileName">A pointer to a constant null-terminated string that contains  the name of the file that contains the shader code.</param>
        /// <param name = "pDefines">An optional array of <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D_SHADER_MACRO</a> structures that define shader macros. Each macro definition contains a name and a NULL-terminated definition. If not used, set to <b>NULL</b>.</param>
        /// <param name = "pInclude">
        /// <para>An optional pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3dinclude">ID3DInclude</a> interface that the compiler uses to handle include files. If you set this parameter to <b>NULL</b> and the shader contains a #include, a compile error occurs. You can pass the <b>D3D_COMPILE_STANDARD_FILE_INCLUDE</b> macro, which is a pointer to a default include handler. This default include handler includes files that are relative to the current directory.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompilefromfile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pEntrypoint">A pointer to a constant null-terminated string that contains  the name of the shader entry point function where shader execution begins. When you compile an effect, <b>D3DCompileFromFile</b> ignores <i>pEntrypoint</i>; we recommend that you set <i>pEntrypoint</i> to <b>NULL</b> because it is good programming practice to set a pointer parameter to <b>NULL</b> if the called function will not use it.</param>
        /// <param name = "pTarget">A pointer to a constant null-terminated string that specifies the shader target or set of shader features to compile against. The shader target can be a shader model (for example, shader model 2, shader model 3, shader model 4, or shader model 5 and later). The target can also be an effect type (for example, fx_4_1). For info about the targets that various profiles support, see <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/specifying-compiler-targets">Specifying Compiler Targets</a>.</param>
        /// <param name = "Flags1">A combination of shader <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dcompile-constants">compile options</a> that are combined by using a bitwise <b>OR</b> operation. The resulting value specifies how the compiler compiles the HLSL code.</param>
        /// <param name = "Flags2">A combination of effect <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dcompile-effect-constants">compile options</a> that are combined by using a bitwise <b>OR</b> operation. The resulting value specifies how the compiler compiles the effect. When you compile a shader and not an effect file, <b>D3DCompileFromFile</b> ignores <i>Flags2</i>; we recommend that you set <i>Flags2</i> to zero because it is good programming practice to set a nonpointer parameter to zero if the called function will not use it.</param>
        /// <param name = "ppCode">A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the compiled code.</param>
        /// <param name = "ppErrorMsgs">An optional pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access compiler error messages, or <b>NULL</b> if there are no errors.</param>
        /// <returns>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompilefromfile">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DCompileFromFile(win32.System.SystemServices.PCWSTR pFileName, [Optional] win32.Graphics.Direct3D11.D3D_SHADER_MACRO*pDefines, [Optional] win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.System.SystemServices.PCSTR pEntrypoint, win32.System.SystemServices.PCSTR pTarget, uint Flags1, uint Flags2, win32.Graphics.Direct3D11.ID3DBlob**ppCode, [Optional] win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs);
        /// <inheritdoc cref = "D3DPreprocess(void *, nuint, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D11.D3D_SHADER_MACRO*, win32.Graphics.Direct3D11.ID3DInclude*, win32.Graphics.Direct3D11.ID3DBlob**, win32.Graphics.Direct3D11.ID3DBlob**)"/>
        internal static unsafe win32.System.Com.HRESULT D3DPreprocess(void *pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pSourceName, win32.Graphics.Direct3D11.D3D_SHADER_MACRO? pDefines, win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.Graphics.Direct3D11.ID3DBlob**ppCodeText, win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs)
        {
            win32.Graphics.Direct3D11.D3D_SHADER_MACRO pDefinesLocal = pDefines.HasValue ? pDefines.Value : default(win32.Graphics.Direct3D11.D3D_SHADER_MACRO);
            win32.System.Com.HRESULT __result = D3DCompiler_47.D3DPreprocess(pSrcData, SrcDataSize, pSourceName, pDefines.HasValue ? &pDefinesLocal : null, pInclude, ppCodeText, ppErrorMsgs);
            return __result;
        }

        /// <summary>Preprocesses uncompiled HLSL code.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to uncompiled shader data; either ASCII HLSL code or a compiled effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dpreprocess#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pSrcData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dpreprocess#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pSourceName">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The name of the file that contains the uncompiled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dpreprocess#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pDefines">
        /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D_SHADER_MACRO</a>*</b></para>
        /// <para>An array of NULL-terminated macro definitions (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D_SHADER_MACRO</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dpreprocess#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pInclude">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3dinclude">ID3DInclude</a>*</b></para>
        /// <para>A pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3dinclude">ID3DInclude</a> for handling include files. Setting this to <b>NULL</b> will cause a compile error if a shader contains a #include. You can pass the <b>D3D_COMPILE_STANDARD_FILE_INCLUDE</b> macro, which is a pointer to a default include handler. This default include handler includes files that are relative to the current directory and files that are relative to the directory of the initial source file. When you use <b>D3D_COMPILE_STANDARD_FILE_INCLUDE</b>, you must specify the source file name in the <i>pSourceName</i> parameter; the compiler will derive the initial relative directory from <i>pSourceName</i>.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dpreprocess#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppCodeText">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>The address of a <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> that contains the compiled code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dpreprocess#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppErrorMsgs">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to an <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> that contains compiler error messages, or <b>NULL</b> if there were no errors.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dpreprocess#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dpreprocess">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DPreprocess(void *pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pSourceName, [Optional] win32.Graphics.Direct3D11.D3D_SHADER_MACRO*pDefines, [Optional] win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.Graphics.Direct3D11.ID3DBlob**ppCodeText, [Optional] win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs);
        /// <summary>Note  You can use this API to develop your Windows Store apps, but you can't use it in apps that you submit to the Windows Store. Gets shader debug information.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to source data; either uncompiled or compiled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetdebuginfo#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pSrcData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetdebuginfo#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDebugInfo">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a buffer that receives the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that contains debug information.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetdebuginfo#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetdebuginfo">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DGetDebugInfo(void *pSrcData, nuint SrcDataSize, win32.Graphics.Direct3D11.ID3DBlob**ppDebugInfo);
        /// <inheritdoc cref = "D3DReflect(void *, nuint, global::System.Guid*, void **)"/>
        internal static unsafe win32.System.Com.HRESULT D3DReflect(void *pSrcData, nuint SrcDataSize, in global::System.Guid pInterface, out void *ppReflector)
        {
            fixed (void **ppReflectorLocal = &ppReflector)
            {
                fixed (global::System.Guid*pInterfaceLocal = &pInterface)
                {
                    win32.System.Com.HRESULT __result = D3DCompiler_47.D3DReflect(pSrcData, SrcDataSize, pInterfaceLocal, ppReflectorLocal);
                    return __result;
                }
            }
        }

        /// <summary>Gets a pointer to a reflection interface.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to source data as compiled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pSrcData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pInterface">
        /// <para>Type: <b>REFIID</b></para>
        /// <para>The reference GUID of the COM interface to use. For example, <b>IID_ID3D11ShaderReflection</b>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppReflector">
        /// <para>Type: <b>void**</b></para>
        /// <para>A pointer to a reflection interface.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflect">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DReflect(void *pSrcData, nuint SrcDataSize, global::System.Guid*pInterface, void **ppReflector);
        /// <inheritdoc cref = "D3DReflectLibrary(void *, nuint, global::System.Guid*, void **)"/>
        internal static unsafe win32.System.Com.HRESULT D3DReflectLibrary(void *pSrcData, nuint SrcDataSize, in global::System.Guid riid, out void *ppReflector)
        {
            fixed (void **ppReflectorLocal = &ppReflector)
            {
                fixed (global::System.Guid*riidLocal = &riid)
                {
                    win32.System.Com.HRESULT __result = D3DCompiler_47.D3DReflectLibrary(pSrcData, SrcDataSize, riidLocal, ppReflectorLocal);
                    return __result;
                }
            }
        }

        /// <summary>Creates a library-reflection interface from source data that contains an HLSL library of functions.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to source data as an HLSL library of functions.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflectlibrary#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The size, in bytes, of the block of memory that <i>pSrcData</i> points to.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflectlibrary#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "riid">
        /// <para>Type: <b>REFIID</b></para>
        /// <para>The reference GUID of the COM interface to use. For example, <b>IID_ID3D11LibraryReflection</b>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflectlibrary#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppReflector">
        /// <para>Type: <b>LPVOID*</b></para>
        /// <para>A pointer to a variable that receives a pointer to a library-reflection interface, <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11libraryreflection">ID3D11LibraryReflection</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflectlibrary#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns S_OK if successful; otherwise, returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dreflectlibrary">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DReflectLibrary(void *pSrcData, nuint SrcDataSize, global::System.Guid*riid, void **ppReflector);
        /// <summary>Disassembles compiled HLSL code.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to source data as compiled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassemble#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pSrcData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassemble#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></param>
        /// <param name = "szComments">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The comment string at the top of the shader that identifies the shader constants and variables.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassemble#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDisassembly">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a buffer that receives the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that accesses assembly text.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassemble#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassemble">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DDisassemble(void *pSrcData, nuint SrcDataSize, uint Flags, win32.System.SystemServices.PCSTR szComments, win32.Graphics.Direct3D11.ID3DBlob**ppDisassembly);
        /// <summary>Disassembles a specific region of compiled Microsoft High Level Shader Language (HLSL) code.</summary>
        /// <param name = "pSrcData">A pointer to compiled shader data.</param>
        /// <param name = "SrcDataSize">The size, in bytes, of the block of memory that <i>pSrcData</i> points to.</param>
        /// <param name = "Flags">
        /// <para>A combination of zero or more of the following flags that are combined by using a bitwise <b>OR</b> operation. The resulting value specifies how <b>D3DDisassembleRegion</b> disassembles the compiled shader data.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassembleregion#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "szComments">A pointer to a constant null-terminated string at the top of the shader that identifies the shader constants and variables.</param>
        /// <param name = "StartByteOffset">The number of bytes offset into the compiled shader data where <b>D3DDisassembleRegion</b> starts the disassembly.</param>
        /// <param name = "NumInsts">The number of instructions to disassemble.</param>
        /// <param name = "pFinishByteOffset">A pointer to a variable that receives the number of bytes offset into the compiled shader data where <b>D3DDisassembleRegion</b> finishes the disassembly.</param>
        /// <param name = "ppDisassembly">A pointer to a buffer that receives the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that accesses the disassembled HLSL code.</param>
        /// <returns>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassembleregion">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DDisassembleRegion(void *pSrcData, nuint SrcDataSize, uint Flags, win32.System.SystemServices.PCSTR szComments, nuint StartByteOffset, nuint NumInsts, [Optional] nuint*pFinishByteOffset, win32.Graphics.Direct3D11.ID3DBlob**ppDisassembly);
        /// <summary>Creates a linker interface. Note  This function is part of the HLSL shader linking technology that you can use on all Direct3D 11 platforms to create precompiled HLSL functions, package them into libraries, and link them into full shaders at run time.  .</summary>
        /// <param name = "ppLinker">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11linker">ID3D11Linker</a>**</b></para>
        /// <para>A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11linker">ID3D11Linker</a> interface that is used to link a shader module.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcreatelinker#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns S_OK if successful; otherwise, returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcreatelinker">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DCreateLinker(win32.Graphics.Direct3D11.ID3D11Linker**ppLinker);
        /// <summary>Creates a shader module interface from source data for the shader module.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to the source data for the shader module.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dloadmodule#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "cbSrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The size, in bytes, of the block of memory that <i>pSrcData</i> points to.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dloadmodule#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppModule">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11module">ID3D11Module</a>**</b></para>
        /// <para>A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11module">ID3D11Module</a> interface that is used for shader resource re-binding.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dloadmodule#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns S_OK if successful; otherwise, returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dloadmodule">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DLoadModule(void *pSrcData, nuint cbSrcDataSize, win32.Graphics.Direct3D11.ID3D11Module**ppModule);
        /// <summary>Creates a function-linking-graph interface.</summary>
        /// <param name = "uFlags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Reserved</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcreatefunctionlinkinggraph#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppFunctionLinkingGraph">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11functionlinkinggraph">ID3D11FunctionLinkingGraph</a>**</b></para>
        /// <para>A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11functionlinkinggraph">ID3D11FunctionLinkingGraph</a> interface that is used for constructing shaders that consist of a sequence of precompiled function calls.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcreatefunctionlinkinggraph#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns S_OK if successful; otherwise, returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcreatefunctionlinkinggraph">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DCreateFunctionLinkingGraph(uint uFlags, win32.Graphics.Direct3D11.ID3D11FunctionLinkingGraph**ppFunctionLinkingGraph);
        /// <inheritdoc cref = "D3DGetTraceInstructionOffsets(void *, nuint, uint, nuint, nuint, nuint*, nuint*)"/>
        internal static unsafe win32.System.Com.HRESULT D3DGetTraceInstructionOffsets(void *pSrcData, nuint SrcDataSize, uint Flags, nuint StartInstIndex, Span<nuint> pOffsets, nuint*pTotalInsts)
        {
            fixed (nuint*pOffsetsLocal = pOffsets)
            {
                win32.System.Com.HRESULT __result = D3DCompiler_47.D3DGetTraceInstructionOffsets(pSrcData, SrcDataSize, Flags, StartInstIndex, (nuint)pOffsets.Length, pOffsetsLocal, pTotalInsts);
                return __result;
            }
        }

        /// <summary>Retrieves the byte offsets for instructions within a section of shader code.</summary>
        /// <param name = "pSrcData">A pointer to the compiled shader data.</param>
        /// <param name = "SrcDataSize">The size, in bytes, of the block of memory that <i>pSrcData</i> points to.</param>
        /// <param name = "Flags">
        /// <para>A combination of the following flags that are combined by using a bitwise <b>OR</b> operation. The resulting value specifies how <b>D3DGetTraceInstructionOffsets</b> retrieves the instruction offsets.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgettraceinstructionoffsets#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "StartInstIndex">The index of the instruction in the compiled shader data for which <b>D3DGetTraceInstructionOffsets</b> starts to retrieve the byte offsets.</param>
        /// <param name = "NumInsts">The number of instructions for which <b>D3DGetTraceInstructionOffsets</b> retrieves the byte offsets.</param>
        /// <param name = "pOffsets">A pointer to a variable that receives the actual number of offsets.</param>
        /// <param name = "pTotalInsts">A pointer to a variable that receives the total number of instructions in the section of shader code.</param>
        /// <returns>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgettraceinstructionoffsets">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DGetTraceInstructionOffsets(void *pSrcData, nuint SrcDataSize, uint Flags, nuint StartInstIndex, nuint NumInsts, [Optional] nuint*pOffsets, [Optional] nuint*pTotalInsts);
        /// <summary>Note  D3DGetInputSignatureBlob may be altered or unavailable for releases after Windows 8.1. Instead use D3DGetBlobPart with the D3D_BLOB_INPUT_SIGNATURE_BLOB value.  Gets the input signature from a compilation result.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to source data as compiled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetinputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pSrcData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetinputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppSignatureBlob">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a buffer that receives the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that contains a compiled shader.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetinputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetinputsignatureblob">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DGetInputSignatureBlob(void *pSrcData, nuint SrcDataSize, win32.Graphics.Direct3D11.ID3DBlob**ppSignatureBlob);
        /// <summary>Note  D3DGetOutputSignatureBlob may be altered or unavailable for releases after Windows 8.1. Instead use D3DGetBlobPart with the D3D_BLOB_OUTPUT_SIGNATURE_BLOB value.  Gets the output signature from a compilation result.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to source data as compiled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pSrcData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppSignatureBlob">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a buffer that receives the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that contains a compiled shader.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetoutputsignatureblob">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DGetOutputSignatureBlob(void *pSrcData, nuint SrcDataSize, win32.Graphics.Direct3D11.ID3DBlob**ppSignatureBlob);
        /// <summary>Note  D3DGetInputAndOutputSignatureBlob may be altered or unavailable for releases after Windows 8.1. Instead use D3DGetBlobPart with the D3D_BLOB_INPUT_AND_OUTPUT_SIGNATURE_BLOB value.  Gets the input and output signatures from a compilation result.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to source data as compiled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetinputandoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pSrcData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetinputandoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppSignatureBlob">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a buffer that receives the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that contains a compiled shader.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetinputandoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetinputandoutputsignatureblob">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DGetInputAndOutputSignatureBlob(void *pSrcData, nuint SrcDataSize, win32.Graphics.Direct3D11.ID3DBlob**ppSignatureBlob);
        /// <summary>Removes unwanted blobs from a compilation result.</summary>
        /// <param name = "pShaderBytecode">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to source data as compiled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dstripshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "BytecodeLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pSrcData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dstripshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "uStripFlags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Strip flag options, represented by <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dcompiler-strip-flags">D3DCOMPILER_STRIP_FLAGS</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dstripshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppStrippedBlob">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the unwanted stripped out shader code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dstripshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dstripshader">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DStripShader(void *pShaderBytecode, nuint BytecodeLength, uint uStripFlags, win32.Graphics.Direct3D11.ID3DBlob**ppStrippedBlob);
        /// <summary>Retrieves a specific part from a compilation result.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to uncompiled shader data; either ASCII HLSL code or a compiled effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of uncompiled shader data that <i>pSrcData</i> points to.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Part">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3d-blob-part">D3D_BLOB_PART</a></b></para>
        /// <para>A <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3d-blob-part">D3D_BLOB_PART</a>-typed value that specifies the part of the buffer to retrieve.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Flags that indicate how to retrieve the blob part. Currently, no flags are defined.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppPart">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>The address of a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that is used to retrieve the specified part of the buffer.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dgetblobpart">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DGetBlobPart(void *pSrcData, nuint SrcDataSize, win32.Graphics.Hlsl.D3D_BLOB_PART Part, uint Flags, win32.Graphics.Direct3D11.ID3DBlob**ppPart);
        /// <summary>Sets information in a compilation result.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to compiled shader data.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dsetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The length of the compiled shader data that <i>pSrcData</i> points to.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dsetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Part">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3d-blob-part">D3D_BLOB_PART</a></b></para>
        /// <para>A <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3d-blob-part">D3D_BLOB_PART</a>-typed value that specifies the part to set. Currently, you can update only private data; that is, <b>D3DSetBlobPart</b> currently only supports the <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3d-blob-part">D3D_BLOB_PRIVATE_DATA</a> value.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dsetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Flags that indicate how to set the blob part. Currently, no flags are defined; therefore, set to zero.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dsetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pPart">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to data to set in the compilation result.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dsetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "PartSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The length of the data that <i>pPart</i> points to.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dsetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppNewShader">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a buffer that receives the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface for the new shader in which the new part data is set.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dsetblobpart#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dsetblobpart">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DSetBlobPart(void *pSrcData, nuint SrcDataSize, win32.Graphics.Hlsl.D3D_BLOB_PART Part, uint Flags, void *pPart, nuint PartSize, win32.Graphics.Direct3D11.ID3DBlob**ppNewShader);
        /// <summary>Creates a buffer.</summary>
        /// <param name = "Size">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Number of bytes in the blob.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcreateblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppBlob">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>The address of a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that is used to retrieve the buffer.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcreateblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcreateblob">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DCreateBlob(nuint Size, win32.Graphics.Direct3D11.ID3DBlob**ppBlob);
        /// <inheritdoc cref = "D3DCompressShaders(uint, win32.Graphics.Hlsl.D3D_SHADER_DATA*, uint, win32.Graphics.Direct3D11.ID3DBlob**)"/>
        internal static unsafe win32.System.Com.HRESULT D3DCompressShaders(Span<win32.Graphics.Hlsl.D3D_SHADER_DATA> pShaderData, uint uFlags, win32.Graphics.Direct3D11.ID3DBlob**ppCompressedData)
        {
            fixed (win32.Graphics.Hlsl.D3D_SHADER_DATA*pShaderDataLocal = pShaderData)
            {
                win32.System.Com.HRESULT __result = D3DCompiler_47.D3DCompressShaders((uint)pShaderData.Length, pShaderDataLocal, uFlags, ppCompressedData);
                return __result;
            }
        }

        /// <summary>Compresses a set of shaders into a more compact form.</summary>
        /// <param name = "uNumShaders">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>The number of shaders to compress.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pShaderData">
        /// <para>Type: [D3D_SHADER_DATA](./ns-d3dcompiler-d3d_shader_data.md)*</b></para>
        /// <para>An array of [D3D_SHADER_DATA](./ns-d3dcompiler-d3d_shader_data.md) structures that describe the set of shaders to compress.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name="uFlags">
        /// <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Flags that indicate how to compress the shaders. Currently, only the  D3D_COMPRESS_SHADER_KEEP_ALL_PARTS (0x00000001) flag is defined.</para>
        /// <para><see href="https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name="ppCompressedData">
        /// <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>The address of a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that is used to retrieve the compressed shader data.</para>
        /// <para><see href="https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href="https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3dcompressshaders">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DCompressShaders(uint uNumShaders, win32.Graphics.Hlsl.D3D_SHADER_DATA*pShaderData, uint uFlags, win32.Graphics.Direct3D11.ID3DBlob**ppCompressedData);
        /// <inheritdoc cref = "D3DDecompressShaders(void *, nuint, uint, uint, uint *, uint, win32.Graphics.Direct3D11.ID3DBlob**, uint *)"/>
        internal static unsafe win32.System.Com.HRESULT D3DDecompressShaders(void *pSrcData, nuint SrcDataSize, uint uStartIndex, Span<uint> pIndices, uint uFlags, win32.Graphics.Direct3D11.ID3DBlob**ppShaders, uint *pTotalShaders)
        {
            fixed (uint *pIndicesLocal = pIndices)
            {
                win32.System.Com.HRESULT __result = D3DCompiler_47.D3DDecompressShaders(pSrcData, SrcDataSize, (uint)pIndices.Length, uStartIndex, pIndicesLocal, uFlags, ppShaders, pTotalShaders);
                return __result;
            }
        }

        /// <summary>Decompresses one or more shaders from a compressed set.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCVOID</a></b></para>
        /// <para>A pointer to uncompiled shader data; either ASCII HLSL code or a compiled effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddecompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of uncompiled shader data that <i>pSrcData</i> points to.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddecompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "uNumShaders">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>The number of shaders to decompress.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddecompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "uStartIndex">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>The index of the first shader to decompress.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddecompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pIndices">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b></para>
        /// <para>An array of indexes that represent the shaders to decompress.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddecompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "uFlags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Flags that indicate how to decompress. Currently, no flags are defined.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddecompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppShaders">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>The address of a pointer to the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that is used to retrieve the decompressed shader data.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddecompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pTotalShaders">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b></para>
        /// <para>A pointer to a variable that receives the total number of shaders that  <b>D3DDecompressShaders</b> decompressed.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddecompressshaders#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddecompressshaders">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DDecompressShaders(void *pSrcData, nuint SrcDataSize, uint uNumShaders, uint uStartIndex, [Optional] uint *pIndices, uint uFlags, win32.Graphics.Direct3D11.ID3DBlob**ppShaders, [Optional] uint *pTotalShaders);
        /// <summary>Disassembles compiled HLSL code from a Direct3D10 effect.</summary>
        /// <param name = "pEffect">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effect">ID3D10Effect</a>*</b></para>
        /// <para>A pointer to source data as compiled HLSL code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassemble10effect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Shader <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-shader">compile options</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassemble10effect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDisassembly">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
        /// <para>A pointer to a buffer that receives the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that contains disassembly text.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassemble10effect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">HRESULT</a></b></para>
        /// <para>Returns one of the <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 return codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcompiler/nf-d3dcompiler-d3ddisassemble10effect">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("D3DCompiler_47", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3DDisassemble10Effect(win32.Graphics.Direct3D10.ID3D10Effect*pEffect, uint Flags, win32.Graphics.Direct3D11.ID3DBlob**ppDisassembly);
    }
}