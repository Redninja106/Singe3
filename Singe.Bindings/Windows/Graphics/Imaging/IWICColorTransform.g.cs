// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Imaging
    {
        [Guid("B66F034F-D0E2-40AB-B436-6DE39E321A94")]
        internal unsafe struct IWICColorTransform
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (IWICColorTransform*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (IWICColorTransform*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (IWICColorTransform*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "GetSize(uint *, uint *)"/>
            internal unsafe win32.System.Com.HRESULT GetSize(out uint puiWidth, out uint puiHeight)
            {
                fixed (uint *puiHeightLocal = &puiHeight)
                {
                    fixed (uint *puiWidthLocal = &puiWidth)
                    {
                        win32.System.Com.HRESULT __result = this.GetSize(puiWidthLocal, puiHeightLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetSize(uint *puiWidth, uint *puiHeight)
            {
                fixed (IWICColorTransform*pThis = &this)
                    return lpVtbl->GetSize_4(pThis, puiWidth, puiHeight);
            }

            /// <inheritdoc cref = "GetPixelFormat(global::System.Guid*)"/>
            internal unsafe win32.System.Com.HRESULT GetPixelFormat(out global::System.Guid pPixelFormat)
            {
                fixed (global::System.Guid*pPixelFormatLocal = &pPixelFormat)
                {
                    win32.System.Com.HRESULT __result = this.GetPixelFormat(pPixelFormatLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetPixelFormat(global::System.Guid*pPixelFormat)
            {
                fixed (IWICColorTransform*pThis = &this)
                    return lpVtbl->GetPixelFormat_5(pThis, pPixelFormat);
            }

            /// <inheritdoc cref = "GetResolution(double *, double *)"/>
            internal unsafe win32.System.Com.HRESULT GetResolution(out double pDpiX, out double pDpiY)
            {
                fixed (double *pDpiYLocal = &pDpiY)
                {
                    fixed (double *pDpiXLocal = &pDpiX)
                    {
                        win32.System.Com.HRESULT __result = this.GetResolution(pDpiXLocal, pDpiYLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetResolution(double *pDpiX, double *pDpiY)
            {
                fixed (IWICColorTransform*pThis = &this)
                    return lpVtbl->GetResolution_6(pThis, pDpiX, pDpiY);
            }

            internal unsafe win32.System.Com.HRESULT CopyPalette(win32.Graphics.Imaging.IWICPalette*pIPalette)
            {
                fixed (IWICColorTransform*pThis = &this)
                    return lpVtbl->CopyPalette_7(pThis, pIPalette);
            }

            /// <inheritdoc cref = "CopyPixels(win32.Graphics.Imaging.WICRect*, uint, uint, byte *)"/>
            internal unsafe win32.System.Com.HRESULT CopyPixels(in win32.Graphics.Imaging.WICRect prc, uint cbStride, Span<byte> pbBuffer)
            {
                fixed (byte *pbBufferLocal = pbBuffer)
                {
                    fixed (win32.Graphics.Imaging.WICRect*prcLocal = &prc)
                    {
                        win32.System.Com.HRESULT __result = this.CopyPixels(prcLocal, cbStride, (uint)pbBuffer.Length, pbBufferLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CopyPixels(win32.Graphics.Imaging.WICRect*prc, uint cbStride, uint cbBufferSize, byte *pbBuffer)
            {
                fixed (IWICColorTransform*pThis = &this)
                    return lpVtbl->CopyPixels_8(pThis, prc, cbStride, cbBufferSize, pbBuffer);
            }

            /// <inheritdoc cref = "Initialize(win32.Graphics.Imaging.IWICBitmapSource*, win32.Graphics.Imaging.IWICColorContext*, win32.Graphics.Imaging.IWICColorContext*, global::System.Guid*)"/>
            internal unsafe win32.System.Com.HRESULT Initialize(win32.Graphics.Imaging.IWICBitmapSource*pIBitmapSource, win32.Graphics.Imaging.IWICColorContext*pIContextSource, win32.Graphics.Imaging.IWICColorContext*pIContextDest, in global::System.Guid pixelFmtDest)
            {
                fixed (global::System.Guid*pixelFmtDestLocal = &pixelFmtDest)
                {
                    win32.System.Com.HRESULT __result = this.Initialize(pIBitmapSource, pIContextSource, pIContextDest, pixelFmtDestLocal);
                    return __result;
                }
            }

            /// <summary>Initializes an IWICColorTransform with a IWICBitmapSource and transforms it from one IWICColorContext to another.</summary>
            /// <param name = "pIBitmapSource">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b></para>
            /// <para>The bitmap source used to initialize the color transform.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolortransform-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pIContextSource">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>*</b></para>
            /// <para>The color context source.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolortransform-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pIContextDest">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>*</b></para>
            /// <para>The color context destination.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolortransform-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pixelFmtDest">
            /// <para>Type: <b>REFWICPixelFormatGUID</b></para>
            /// <para>The GUID of the desired pixel format.</para>
            /// <para>This parameter is limited to a subset of the native WIC pixel formats, see Remarks for a list.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolortransform-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolortransform-initialize">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Initialize(win32.Graphics.Imaging.IWICBitmapSource*pIBitmapSource, win32.Graphics.Imaging.IWICColorContext*pIContextSource, win32.Graphics.Imaging.IWICColorContext*pIContextDest, global::System.Guid*pixelFmtDest)
            {
                fixed (IWICColorTransform*pThis = &this)
                    return lpVtbl->Initialize_9(pThis, pIBitmapSource, pIContextSource, pIContextDest, pixelFmtDest);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<IWICColorTransform*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<IWICColorTransform*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<IWICColorTransform*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<IWICColorTransform*, uint *, uint *, win32.System.Com.HRESULT>GetSize_4;
                internal delegate *unmanaged[Stdcall]<IWICColorTransform*, global::System.Guid*, win32.System.Com.HRESULT>GetPixelFormat_5;
                internal delegate *unmanaged[Stdcall]<IWICColorTransform*, double *, double *, win32.System.Com.HRESULT>GetResolution_6;
                internal delegate *unmanaged[Stdcall]<IWICColorTransform*, win32.Graphics.Imaging.IWICPalette*, win32.System.Com.HRESULT>CopyPalette_7;
                internal delegate *unmanaged[Stdcall]<IWICColorTransform*, win32.Graphics.Imaging.WICRect*, uint, uint, byte *, win32.System.Com.HRESULT>CopyPixels_8;
                internal delegate *unmanaged[Stdcall]<IWICColorTransform*, win32.Graphics.Imaging.IWICBitmapSource*, win32.Graphics.Imaging.IWICColorContext*, win32.Graphics.Imaging.IWICColorContext*, global::System.Guid*, win32.System.Com.HRESULT>Initialize_9;
            }

            private Vtbl*lpVtbl;
        }
    }
}