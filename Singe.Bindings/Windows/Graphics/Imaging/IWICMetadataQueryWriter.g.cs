// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Imaging
    {
        [Guid("A721791A-0DEF-4D06-BD91-2118BF1DB10B")]
        internal unsafe struct IWICMetadataQueryWriter
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (IWICMetadataQueryWriter*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (IWICMetadataQueryWriter*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (IWICMetadataQueryWriter*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "GetContainerFormat(global::System.Guid*)"/>
            internal unsafe win32.System.Com.HRESULT GetContainerFormat(out global::System.Guid pguidContainerFormat)
            {
                fixed (global::System.Guid*pguidContainerFormatLocal = &pguidContainerFormat)
                {
                    win32.System.Com.HRESULT __result = this.GetContainerFormat(pguidContainerFormatLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetContainerFormat(global::System.Guid*pguidContainerFormat)
            {
                fixed (IWICMetadataQueryWriter*pThis = &this)
                    return lpVtbl->GetContainerFormat_4(pThis, pguidContainerFormat);
            }

            /// <inheritdoc cref = "GetLocation(uint, win32.System.SystemServices.PWSTR, uint *)"/>
            internal unsafe win32.System.Com.HRESULT GetLocation(uint cchMaxLength, win32.System.SystemServices.PWSTR wzNamespace, out uint pcchActualLength)
            {
                fixed (uint *pcchActualLengthLocal = &pcchActualLength)
                {
                    win32.System.Com.HRESULT __result = this.GetLocation(cchMaxLength, wzNamespace, pcchActualLengthLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetLocation(uint cchMaxLength, win32.System.SystemServices.PWSTR wzNamespace, uint *pcchActualLength)
            {
                fixed (IWICMetadataQueryWriter*pThis = &this)
                    return lpVtbl->GetLocation_5(pThis, cchMaxLength, wzNamespace, pcchActualLength);
            }

            /// <inheritdoc cref = "GetMetadataByName(win32.System.SystemServices.PCWSTR, win32.Storage.StructuredStorage.PROPVARIANT*)"/>
            internal unsafe win32.System.Com.HRESULT GetMetadataByName(string wzName, ref win32.Storage.StructuredStorage.PROPVARIANT pvarValue)
            {
                fixed (win32.Storage.StructuredStorage.PROPVARIANT*pvarValueLocal = &pvarValue)
                {
                    fixed (char *wzNameLocal = wzName)
                    {
                        win32.System.Com.HRESULT __result = this.GetMetadataByName(wzNameLocal, pvarValueLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetMetadataByName(win32.System.SystemServices.PCWSTR wzName, win32.Storage.StructuredStorage.PROPVARIANT*pvarValue)
            {
                fixed (IWICMetadataQueryWriter*pThis = &this)
                    return lpVtbl->GetMetadataByName_6(pThis, wzName, pvarValue);
            }

            internal unsafe win32.System.Com.HRESULT GetEnumerator(win32.System.Com.IEnumString**ppIEnumString)
            {
                fixed (IWICMetadataQueryWriter*pThis = &this)
                    return lpVtbl->GetEnumerator_7(pThis, ppIEnumString);
            }

            /// <inheritdoc cref = "SetMetadataByName(win32.System.SystemServices.PCWSTR, win32.Storage.StructuredStorage.PROPVARIANT*)"/>
            internal unsafe win32.System.Com.HRESULT SetMetadataByName(string wzName, in win32.Storage.StructuredStorage.PROPVARIANT pvarValue)
            {
                fixed (win32.Storage.StructuredStorage.PROPVARIANT*pvarValueLocal = &pvarValue)
                {
                    fixed (char *wzNameLocal = wzName)
                    {
                        win32.System.Com.HRESULT __result = this.SetMetadataByName(wzNameLocal, pvarValueLocal);
                        return __result;
                    }
                }
            }

            /// <summary>Sets a metadata item to a specific location.</summary>
            /// <param name = "wzName">
            /// <para>Type: <b>LPCWSTR</b></para>
            /// <para>The name of the metadata item.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataquerywriter-setmetadatabyname#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pvarValue">
            /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/desktop/api/propidl/ns-propidl-propvariant">PROPVARIANT</a>*</b></para>
            /// <para>The metadata to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataquerywriter-setmetadatabyname#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataquerywriter-setmetadatabyname">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetMetadataByName(win32.System.SystemServices.PCWSTR wzName, win32.Storage.StructuredStorage.PROPVARIANT*pvarValue)
            {
                fixed (IWICMetadataQueryWriter*pThis = &this)
                    return lpVtbl->SetMetadataByName_8(pThis, wzName, pvarValue);
            }

            /// <inheritdoc cref = "RemoveMetadataByName(win32.System.SystemServices.PCWSTR)"/>
            internal unsafe win32.System.Com.HRESULT RemoveMetadataByName(string wzName)
            {
                fixed (char *wzNameLocal = wzName)
                {
                    win32.System.Com.HRESULT __result = this.RemoveMetadataByName(wzNameLocal);
                    return __result;
                }
            }

            /// <summary>Removes a metadata item from a specific location using a metadata query expression.</summary>
            /// <param name = "wzName">
            /// <para>Type: <b>LPCWSTR</b></para>
            /// <para>The name of the metadata item to remove.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataquerywriter-removemetadatabyname#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataquerywriter-removemetadatabyname">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT RemoveMetadataByName(win32.System.SystemServices.PCWSTR wzName)
            {
                fixed (IWICMetadataQueryWriter*pThis = &this)
                    return lpVtbl->RemoveMetadataByName_9(pThis, wzName);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<IWICMetadataQueryWriter*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<IWICMetadataQueryWriter*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<IWICMetadataQueryWriter*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<IWICMetadataQueryWriter*, global::System.Guid*, win32.System.Com.HRESULT>GetContainerFormat_4;
                internal delegate *unmanaged[Stdcall]<IWICMetadataQueryWriter*, uint, win32.System.SystemServices.PWSTR, uint *, win32.System.Com.HRESULT>GetLocation_5;
                internal delegate *unmanaged[Stdcall]<IWICMetadataQueryWriter*, win32.System.SystemServices.PCWSTR, win32.Storage.StructuredStorage.PROPVARIANT*, win32.System.Com.HRESULT>GetMetadataByName_6;
                internal delegate *unmanaged[Stdcall]<IWICMetadataQueryWriter*, win32.System.Com.IEnumString**, win32.System.Com.HRESULT>GetEnumerator_7;
                internal delegate *unmanaged[Stdcall]<IWICMetadataQueryWriter*, win32.System.SystemServices.PCWSTR, win32.Storage.StructuredStorage.PROPVARIANT*, win32.System.Com.HRESULT>SetMetadataByName_8;
                internal delegate *unmanaged[Stdcall]<IWICMetadataQueryWriter*, win32.System.SystemServices.PCWSTR, win32.System.Com.HRESULT>RemoveMetadataByName_9;
            }

            private Vtbl*lpVtbl;
        }
    }
}