// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Dxgi
    {
        [Guid("41E7D1F2-A591-4F7B-A2E5-FA9C843E1C12")]
        internal unsafe struct IDXGIFactoryMedia
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (IDXGIFactoryMedia*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (IDXGIFactoryMedia*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (IDXGIFactoryMedia*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "CreateSwapChainForCompositionSurfaceHandle(win32.System.Com.IUnknown*, win32.System.SystemServices.HANDLE, win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*, win32.Graphics.Dxgi.IDXGIOutput*, win32.Graphics.Dxgi.IDXGISwapChain1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateSwapChainForCompositionSurfaceHandle(win32.System.Com.IUnknown*pDevice, SafeHandle hSurface, in win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1 pDesc, win32.Graphics.Dxgi.IDXGIOutput*pRestrictToOutput, win32.Graphics.Dxgi.IDXGISwapChain1**ppSwapChain)
            {
                bool hSurfaceAddRef = false;
                try
                {
                    fixed (win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*pDescLocal = &pDesc)
                    {
                        win32.System.SystemServices.HANDLE hSurfaceLocal;
                        if (hSurface is object)
                        {
                            hSurface.DangerousAddRef(ref hSurfaceAddRef);
                            hSurfaceLocal = (win32.System.SystemServices.HANDLE)hSurface.DangerousGetHandle();
                        }
                        else
                            hSurfaceLocal = default(win32.System.SystemServices.HANDLE);
                        win32.System.Com.HRESULT __result = this.CreateSwapChainForCompositionSurfaceHandle(pDevice, hSurfaceLocal, pDescLocal, pRestrictToOutput, ppSwapChain);
                        return __result;
                    }
                }
                finally
                {
                    if (hSurfaceAddRef)
                        hSurface.DangerousRelease();
                }
            }

            /// <summary>Creates a YUV swap chain for an existing DirectComposition surface handle.</summary>
            /// <param name = "pDevice">A pointer to the Direct3D device for the swap chain. This parameter cannot be <b>NULL</b>. Software drivers, like <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_REFERENCE</a>, are not supported for composition swap chains.</param>
            /// <param name = "hSurface">A handle to an existing <a href = "https://docs.microsoft.com/windows/desktop/directcomp/reference">DirectComposition</a> surface. This parameter cannot be <b>NULL</b>.</param>
            /// <param name = "pDesc">A pointer to a  <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> structure for the swap-chain description. This parameter cannot be <b>NULL</b>.</param>
            /// <param name = "pRestrictToOutput">
            /// <para>A pointer to the <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a> interface for the swap chain to restrict content to. If the swap chain is moved to a different output, the content is black. You can optionally set this parameter to an output target that uses <a href = "https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT_RESTRICT_TO_OUTPUT</a> to restrict the content on this output. If the swap chain is moved to a different output, the content is black.</para>
            /// <para>You must also pass the <a href = "https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT_RESTRICT_TO_OUTPUT</a> flag in a present call to force the content to appear blacked out on any other output. If you want to restrict the content to a different output, you must create a new swap chain. However, you can conditionally restrict content based on the <b>DXGI_PRESENT_RESTRICT_TO_OUTPUT</b> flag.</para>
            /// <para>Set this parameter to <b>NULL</b> if you don't want to restrict content to an output target.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgifactorymedia-createswapchainforcompositionsurfacehandle#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "ppSwapChain">A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgiswapchain1">IDXGISwapChain1</a> interface for the swap chain that this method creates.</param>
            /// <returns>
            /// <para><b>CreateSwapChainForCompositionSurfaceHandle</b> returns: </para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgifactorymedia-createswapchainforcompositionsurfacehandle">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CreateSwapChainForCompositionSurfaceHandle(win32.System.Com.IUnknown*pDevice, win32.System.SystemServices.HANDLE hSurface, win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*pDesc, [Optional] win32.Graphics.Dxgi.IDXGIOutput*pRestrictToOutput, win32.Graphics.Dxgi.IDXGISwapChain1**ppSwapChain)
            {
                fixed (IDXGIFactoryMedia*pThis = &this)
                    return lpVtbl->CreateSwapChainForCompositionSurfaceHandle_4(pThis, pDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
            }

            /// <inheritdoc cref = "CreateDecodeSwapChainForCompositionSurfaceHandle(win32.System.Com.IUnknown*, win32.System.SystemServices.HANDLE, win32.Graphics.Dxgi.DXGI_DECODE_SWAP_CHAIN_DESC*, win32.Graphics.Dxgi.IDXGIResource*, win32.Graphics.Dxgi.IDXGIOutput*, win32.Graphics.Dxgi.IDXGIDecodeSwapChain**)"/>
            internal unsafe win32.System.Com.HRESULT CreateDecodeSwapChainForCompositionSurfaceHandle(win32.System.Com.IUnknown*pDevice, SafeHandle hSurface, in win32.Graphics.Dxgi.DXGI_DECODE_SWAP_CHAIN_DESC pDesc, win32.Graphics.Dxgi.IDXGIResource*pYuvDecodeBuffers, win32.Graphics.Dxgi.IDXGIOutput*pRestrictToOutput, win32.Graphics.Dxgi.IDXGIDecodeSwapChain**ppSwapChain)
            {
                bool hSurfaceAddRef = false;
                try
                {
                    fixed (win32.Graphics.Dxgi.DXGI_DECODE_SWAP_CHAIN_DESC*pDescLocal = &pDesc)
                    {
                        win32.System.SystemServices.HANDLE hSurfaceLocal;
                        if (hSurface is object)
                        {
                            hSurface.DangerousAddRef(ref hSurfaceAddRef);
                            hSurfaceLocal = (win32.System.SystemServices.HANDLE)hSurface.DangerousGetHandle();
                        }
                        else
                            hSurfaceLocal = default(win32.System.SystemServices.HANDLE);
                        win32.System.Com.HRESULT __result = this.CreateDecodeSwapChainForCompositionSurfaceHandle(pDevice, hSurfaceLocal, pDescLocal, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
                        return __result;
                    }
                }
                finally
                {
                    if (hSurfaceAddRef)
                        hSurface.DangerousRelease();
                }
            }

            /// <summary>Creates a YUV swap chain for an existing DirectComposition surface handle.</summary>
            /// <param name = "pDevice">
            /// <para>A pointer to the Direct3D device for the swap chain. This parameter cannot be <b>NULL</b>. Software drivers, like <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_REFERENCE</a>, are not supported for composition swap chains.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgifactorymedia-createdecodeswapchainforcompositionsurfacehandle#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "hSurface">A handle to an existing <a href = "https://docs.microsoft.com/windows/desktop/directcomp/reference">DirectComposition</a> surface. This parameter cannot be <b>NULL</b>.</param>
            /// <param name = "pDesc">
            /// <para>A pointer to a  <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi1_3/ns-dxgi1_3-dxgi_decode_swap_chain_desc">DXGI_DECODE_SWAP_CHAIN_DESC</a> structure for the swap-chain description. This parameter cannot be <b>NULL</b>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgifactorymedia-createdecodeswapchainforcompositionsurfacehandle#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pYuvDecodeBuffers">
            /// <para>A pointer to a <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiresource">IDXGIResource</a> interface that represents the resource that contains the info that <b>CreateDecodeSwapChainForCompositionSurfaceHandle</b> decodes.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgifactorymedia-createdecodeswapchainforcompositionsurfacehandle#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pRestrictToOutput">
            /// <para>A pointer to the <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a> interface for the swap chain to restrict content to. If the swap chain is moved to a different output, the content is black. You can optionally set this parameter to an output target that uses <a href = "https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT_RESTRICT_TO_OUTPUT</a> to restrict the content on this output. If the swap chain is moved to a different output, the content is black.</para>
            /// <para>You must also pass the <a href = "https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT_RESTRICT_TO_OUTPUT</a> flag in a present call to force the content to appear blacked out on any other output. If you want to restrict the content to a different output, you must create a new swap chain. However, you can conditionally restrict content based on the <b>DXGI_PRESENT_RESTRICT_TO_OUTPUT</b> flag.</para>
            /// <para>Set this parameter to <b>NULL</b> if you don't want to restrict content to an output target.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgifactorymedia-createdecodeswapchainforcompositionsurfacehandle#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "ppSwapChain">
            /// <para>A pointer to a variable that receives a pointer to the <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi1_3/nn-dxgi1_3-idxgidecodeswapchain">IDXGIDecodeSwapChain</a> interface for the swap chain that this method creates.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgifactorymedia-createdecodeswapchainforcompositionsurfacehandle#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para><b>CreateDecodeSwapChainForCompositionSurfaceHandle</b> returns: </para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgifactorymedia-createdecodeswapchainforcompositionsurfacehandle">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CreateDecodeSwapChainForCompositionSurfaceHandle(win32.System.Com.IUnknown*pDevice, win32.System.SystemServices.HANDLE hSurface, win32.Graphics.Dxgi.DXGI_DECODE_SWAP_CHAIN_DESC*pDesc, win32.Graphics.Dxgi.IDXGIResource*pYuvDecodeBuffers, [Optional] win32.Graphics.Dxgi.IDXGIOutput*pRestrictToOutput, win32.Graphics.Dxgi.IDXGIDecodeSwapChain**ppSwapChain)
            {
                fixed (IDXGIFactoryMedia*pThis = &this)
                    return lpVtbl->CreateDecodeSwapChainForCompositionSurfaceHandle_5(pThis, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<IDXGIFactoryMedia*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<IDXGIFactoryMedia*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<IDXGIFactoryMedia*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<IDXGIFactoryMedia*, win32.System.Com.IUnknown*, win32.System.SystemServices.HANDLE, win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*, win32.Graphics.Dxgi.IDXGIOutput*, win32.Graphics.Dxgi.IDXGISwapChain1**, win32.System.Com.HRESULT>CreateSwapChainForCompositionSurfaceHandle_4;
                internal delegate *unmanaged[Stdcall]<IDXGIFactoryMedia*, win32.System.Com.IUnknown*, win32.System.SystemServices.HANDLE, win32.Graphics.Dxgi.DXGI_DECODE_SWAP_CHAIN_DESC*, win32.Graphics.Dxgi.IDXGIResource*, win32.Graphics.Dxgi.IDXGIOutput*, win32.Graphics.Dxgi.IDXGIDecodeSwapChain**, win32.System.Com.HRESULT>CreateDecodeSwapChainForCompositionSurfaceHandle_5;
            }

            private Vtbl*lpVtbl;
        }
    }
}