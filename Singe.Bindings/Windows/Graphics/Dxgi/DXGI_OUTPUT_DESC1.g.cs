// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Dxgi
    {
        /// <summary>Describes an output or physical connection between the adapter (video card) and a device, including additional information about color capabilities and connection type.</summary>
        /// <remarks>
        /// <para>The <b>DXGI_OUTPUT_DESC1</b> structure is initialized by the <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi1_6/nf-dxgi1_6-idxgioutput6-getdesc1">IDXGIOutput6::GetDesc1</a> method.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct DXGI_OUTPUT_DESC1
        {
            /// <summary>
            /// <para>Type: <b>WCHAR[32]</b></para>
            /// <para>A string that contains the name of the output device.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal __char_32 DeviceName;
            /// <summary>
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a></b></para>
            /// <para>A <a href = "https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure containing the bounds of the output in desktop coordinates. Desktop coordinates depend on the dots per inch (DPI) of the desktop. For info about writing DPI-aware Win32 apps, see <a href = "https://docs.microsoft.com/windows/desktop/hidpi/high-dpi-desktop-application-development-on-windows">High DPI</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.UI.DisplayDevices.RECT DesktopCoordinates;
            /// <summary>
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
            /// <para>True if the output is attached to the desktop; otherwise, false.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.System.SystemServices.BOOL AttachedToDesktop;
            /// <summary>
            /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173065(v=vs.85)">DXGI_MODE_ROTATION</a></b></para>
            /// <para>A member of the <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173065(v=vs.85)">DXGI_MODE_ROTATION</a> enumerated type describing on how an image is rotated by the output.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.Graphics.Dxgi.DXGI_MODE_ROTATION Rotation;
            /// <summary>
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMONITOR</a></b></para>
            /// <para>An <a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMONITOR</a> handle that represents the display monitor. For more information, see <a href = "https://docs.microsoft.com/windows/desktop/gdi/hmonitor-and-the-device-context">HMONITOR and the Device Context</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.Graphics.Gdi.HMONITOR Monitor;
            /// <summary>
            /// <para>Type: <b>UINT</b></para>
            /// <para>The number of bits per color channel for the active wire format of the display attached to this output.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint BitsPerColor;
            /// <summary>
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a></b></para>
            /// <para>The current advanced color capabilities of the display attached to this output. Specifically, whether its capable of reproducing color and luminance values outside of the sRGB color space. A value of DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P709 indicates that the display is limited to SDR/sRGB; A value of DXGI_COLOR_SPACE_RGB_FULL_G2048_NONE_P2020 indicates that the display supports advanced color capabilities.</para>
            /// <para>For detailed luminance and color capabilities, see additional members of this struct.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE ColorSpace;
            /// <summary>
            /// <para>Type: <b>FLOAT[2]</b></para>
            /// <para>The red color primary, in xy coordinates, of the display attached to this output. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal __float_2 RedPrimary;
            /// <summary>
            /// <para>Type: <b>FLOAT[2]</b></para>
            /// <para>The green color primary, in xy coordinates, of the display attached to this output. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal __float_2 GreenPrimary;
            /// <summary>
            /// <para>Type: <b>FLOAT[2]</b></para>
            /// <para>The blue color primary, in xy coordinates, of the display attached to this output. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal __float_2 BluePrimary;
            /// <summary>
            /// <para>Type: <b>FLOAT[2]</b></para>
            /// <para>The white point, in xy coordinates, of the display attached to this output. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal __float_2 WhitePoint;
            /// <summary>
            /// <para>Type: <b>FLOAT</b></para>
            /// <para>The minimum luminance, in nits, that the display attached to this output is capable of rendering. Content should not exceed this minimum value for optimal rendering. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal float MinLuminance;
            /// <summary>
            /// <para>Type: <b>FLOAT</b></para>
            /// <para>The maximum luminance, in nits, that the display attached to this output is capable of rendering; this value is likely only valid for a small area of the panel. Content should not exceed this minimum value for optimal rendering. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal float MaxLuminance;
            /// <summary>
            /// <para>Type: <b>FLOAT</b></para>
            /// <para>The maximum luminance, in nits, that the display attached to this output is capable of rendering; unlike MaxLuminance, this value is valid for a color that fills the entire area of the panel. Content should not exceed this value across the entire panel for optimal rendering. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal float MaxFullFrameLuminance;
            internal struct __char_32
            {
                internal char _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31;
                /// <summary>Always <c>32</c>.</summary>
                internal int Length => 32;
            }

            internal struct __float_2
            {
                internal float _0, _1;
                /// <summary>Always <c>2</c>.</summary>
                internal int Length => 2;
            }
        }
    }
}