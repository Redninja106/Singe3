// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Dxgi
    {
        [Guid("ABA496DD-B617-4CB8-A866-BC44D7EB1FA2")]
        internal unsafe struct IDXGISurface2
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "SetPrivateData(global::System.Guid*, uint, void *)"/>
            internal unsafe win32.System.Com.HRESULT SetPrivateData(in global::System.Guid Name, uint DataSize, void *pData)
            {
                fixed (global::System.Guid*NameLocal = &Name)
                {
                    win32.System.Com.HRESULT __result = this.SetPrivateData(NameLocal, DataSize, pData);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT SetPrivateData(global::System.Guid*Name, uint DataSize, void *pData)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->SetPrivateData_4(pThis, Name, DataSize, pData);
            }

            /// <inheritdoc cref = "SetPrivateDataInterface(global::System.Guid*, win32.System.Com.IUnknown*)"/>
            internal unsafe win32.System.Com.HRESULT SetPrivateDataInterface(in global::System.Guid Name, win32.System.Com.IUnknown*pUnknown)
            {
                fixed (global::System.Guid*NameLocal = &Name)
                {
                    win32.System.Com.HRESULT __result = this.SetPrivateDataInterface(NameLocal, pUnknown);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT SetPrivateDataInterface(global::System.Guid*Name, [Optional] win32.System.Com.IUnknown*pUnknown)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->SetPrivateDataInterface_5(pThis, Name, pUnknown);
            }

            /// <inheritdoc cref = "GetPrivateData(global::System.Guid*, uint *, void *)"/>
            internal unsafe win32.System.Com.HRESULT GetPrivateData(in global::System.Guid Name, ref uint pDataSize, void *pData)
            {
                fixed (uint *pDataSizeLocal = &pDataSize)
                {
                    fixed (global::System.Guid*NameLocal = &Name)
                    {
                        win32.System.Com.HRESULT __result = this.GetPrivateData(NameLocal, pDataSizeLocal, pData);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetPrivateData(global::System.Guid*Name, uint *pDataSize, void *pData)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->GetPrivateData_6(pThis, Name, pDataSize, pData);
            }

            /// <inheritdoc cref = "GetParent(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT GetParent(in global::System.Guid riid, out void *ppParent)
            {
                fixed (void **ppParentLocal = &ppParent)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.GetParent(riidLocal, ppParentLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetParent(global::System.Guid*riid, void **ppParent)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->GetParent_7(pThis, riid, ppParent);
            }

            /// <inheritdoc cref = "GetDevice(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT GetDevice(in global::System.Guid riid, out void *ppDevice)
            {
                fixed (void **ppDeviceLocal = &ppDevice)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.GetDevice(riidLocal, ppDeviceLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetDevice(global::System.Guid*riid, void **ppDevice)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->GetDevice_8(pThis, riid, ppDevice);
            }

            /// <inheritdoc cref = "GetDesc(win32.Graphics.Dxgi.DXGI_SURFACE_DESC*)"/>
            internal unsafe win32.System.Com.HRESULT GetDesc(out win32.Graphics.Dxgi.DXGI_SURFACE_DESC pDesc)
            {
                fixed (win32.Graphics.Dxgi.DXGI_SURFACE_DESC*pDescLocal = &pDesc)
                {
                    win32.System.Com.HRESULT __result = this.GetDesc(pDescLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetDesc(win32.Graphics.Dxgi.DXGI_SURFACE_DESC*pDesc)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->GetDesc_9(pThis, pDesc);
            }

            /// <inheritdoc cref = "Map(win32.Graphics.Dxgi.DXGI_MAPPED_RECT*, uint)"/>
            internal unsafe win32.System.Com.HRESULT Map(out win32.Graphics.Dxgi.DXGI_MAPPED_RECT pLockedRect, uint MapFlags)
            {
                fixed (win32.Graphics.Dxgi.DXGI_MAPPED_RECT*pLockedRectLocal = &pLockedRect)
                {
                    win32.System.Com.HRESULT __result = this.Map(pLockedRectLocal, MapFlags);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT Map(win32.Graphics.Dxgi.DXGI_MAPPED_RECT*pLockedRect, uint MapFlags)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->Map_10(pThis, pLockedRect, MapFlags);
            }

            internal win32.System.Com.HRESULT Unmap()
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->Unmap_11(pThis);
            }

            internal unsafe win32.System.Com.HRESULT GetDC(win32.System.SystemServices.BOOL Discard, win32.Graphics.Gdi.HDC*phdc)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->GetDC_12(pThis, Discard, phdc);
            }

            /// <inheritdoc cref = "ReleaseDC(win32.UI.DisplayDevices.RECT*)"/>
            internal unsafe win32.System.Com.HRESULT ReleaseDC(win32.UI.DisplayDevices.RECT? pDirtyRect)
            {
                win32.UI.DisplayDevices.RECT pDirtyRectLocal = pDirtyRect.HasValue ? pDirtyRect.Value : default(win32.UI.DisplayDevices.RECT);
                win32.System.Com.HRESULT __result = this.ReleaseDC(pDirtyRect.HasValue ? &pDirtyRectLocal : null);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT ReleaseDC([Optional] win32.UI.DisplayDevices.RECT*pDirtyRect)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->ReleaseDC_13(pThis, pDirtyRect);
            }

            /// <inheritdoc cref = "GetResource(global::System.Guid*, void **, uint *)"/>
            internal unsafe win32.System.Com.HRESULT GetResource(in global::System.Guid riid, out void *ppParentResource, out uint pSubresourceIndex)
            {
                fixed (uint *pSubresourceIndexLocal = &pSubresourceIndex)
                {
                    fixed (void **ppParentResourceLocal = &ppParentResource)
                    {
                        fixed (global::System.Guid*riidLocal = &riid)
                        {
                            win32.System.Com.HRESULT __result = this.GetResource(riidLocal, ppParentResourceLocal, pSubresourceIndexLocal);
                            return __result;
                        }
                    }
                }
            }

            /// <summary>Gets the parent resource and subresource index that support a subresource surface.</summary>
            /// <param name = "riid">The globally unique identifier (GUID)  of the requested interface type.</param>
            /// <param name = "ppParentResource">A pointer to a buffer that receives a pointer to the parent resource object for the subresource surface.</param>
            /// <param name = "pSubresourceIndex">A pointer to a variable that receives the index of the subresource surface.</param>
            /// <returns>
            /// <para>Returns S_OK if successful; otherwise, returns one of the following values:</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgisurface2-getresource">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetResource(global::System.Guid*riid, void **ppParentResource, uint *pSubresourceIndex)
            {
                fixed (IDXGISurface2*pThis = &this)
                    return lpVtbl->GetResource_14(pThis, riid, ppParentResource, pSubresourceIndex);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, global::System.Guid*, uint, void *, win32.System.Com.HRESULT>SetPrivateData_4;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, global::System.Guid*, win32.System.Com.IUnknown*, win32.System.Com.HRESULT>SetPrivateDataInterface_5;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, global::System.Guid*, uint *, void *, win32.System.Com.HRESULT>GetPrivateData_6;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, global::System.Guid*, void **, win32.System.Com.HRESULT>GetParent_7;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, global::System.Guid*, void **, win32.System.Com.HRESULT>GetDevice_8;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, win32.Graphics.Dxgi.DXGI_SURFACE_DESC*, win32.System.Com.HRESULT>GetDesc_9;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, win32.Graphics.Dxgi.DXGI_MAPPED_RECT*, uint, win32.System.Com.HRESULT>Map_10;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, win32.System.Com.HRESULT>Unmap_11;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, win32.System.SystemServices.BOOL, win32.Graphics.Gdi.HDC*, win32.System.Com.HRESULT>GetDC_12;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, win32.UI.DisplayDevices.RECT*, win32.System.Com.HRESULT>ReleaseDC_13;
                internal delegate *unmanaged[Stdcall]<IDXGISurface2*, global::System.Guid*, void **, uint *, win32.System.Com.HRESULT>GetResource_14;
            }

            private Vtbl*lpVtbl;
        }
    }
}