// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.DirectWrite
    {
        [Guid("55F1112B-1DC2-4B3C-9541-F46894ED85B6")]
        internal unsafe struct IDWriteTypography
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (IDWriteTypography*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (IDWriteTypography*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (IDWriteTypography*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <summary>Adds an OpenType font feature.</summary>
            /// <param name = "fontFeature">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_font_feature">DWRITE_FONT_FEATURE</a></b></para>
            /// <para>A structure that contains the OpenType name identifier and the execution parameter for the font feature being added.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetypography-addfontfeature#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetypography-addfontfeature">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT AddFontFeature(win32.Graphics.DirectWrite.DWRITE_FONT_FEATURE fontFeature)
            {
                fixed (IDWriteTypography*pThis = &this)
                    return lpVtbl->AddFontFeature_4(pThis, fontFeature);
            }

            /// <summary>Gets the number of OpenType font features for the current font.</summary>
            /// <returns>
            /// <para>Type: <b>UINT32</b></para>
            /// <para>The number of font features for the current text format.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetypography-getfontfeaturecount">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal uint GetFontFeatureCount()
            {
                fixed (IDWriteTypography*pThis = &this)
                    return lpVtbl->GetFontFeatureCount_5(pThis);
            }

            /// <inheritdoc cref = "GetFontFeature(uint, win32.Graphics.DirectWrite.DWRITE_FONT_FEATURE*)"/>
            internal unsafe win32.System.Com.HRESULT GetFontFeature(uint fontFeatureIndex, out win32.Graphics.DirectWrite.DWRITE_FONT_FEATURE fontFeature)
            {
                fixed (win32.Graphics.DirectWrite.DWRITE_FONT_FEATURE*fontFeatureLocal = &fontFeature)
                {
                    win32.System.Com.HRESULT __result = this.GetFontFeature(fontFeatureIndex, fontFeatureLocal);
                    return __result;
                }
            }

            /// <summary>Gets the font feature at the specified index.</summary>
            /// <param name = "fontFeatureIndex">
            /// <para>Type: <b>UINT32</b></para>
            /// <para>The zero-based index of the font feature to retrieve.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetypography-getfontfeature#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "fontFeature">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_font_feature">DWRITE_FONT_FEATURE</a>*</b></para>
            /// <para>When this method returns, contains the font feature which is at the specified index.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetypography-getfontfeature#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetypography-getfontfeature">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetFontFeature(uint fontFeatureIndex, win32.Graphics.DirectWrite.DWRITE_FONT_FEATURE*fontFeature)
            {
                fixed (IDWriteTypography*pThis = &this)
                    return lpVtbl->GetFontFeature_6(pThis, fontFeatureIndex, fontFeature);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<IDWriteTypography*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<IDWriteTypography*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<IDWriteTypography*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<IDWriteTypography*, win32.Graphics.DirectWrite.DWRITE_FONT_FEATURE, win32.System.Com.HRESULT>AddFontFeature_4;
                internal delegate *unmanaged[Stdcall]<IDWriteTypography*, uint>GetFontFeatureCount_5;
                internal delegate *unmanaged[Stdcall]<IDWriteTypography*, uint, win32.Graphics.DirectWrite.DWRITE_FONT_FEATURE*, win32.System.Com.HRESULT>GetFontFeature_6;
            }

            private Vtbl*lpVtbl;
        }
    }
}