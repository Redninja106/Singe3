// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.DirectWrite
    {
        [Guid("1A0D8438-1D97-4EC1-AEF9-A2FB86ED6ACB")]
        internal unsafe struct IDWriteFontList
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (IDWriteFontList*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (IDWriteFontList*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (IDWriteFontList*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <summary>Gets the font collection that contains the fonts in the font list.</summary>
            /// <param name = "fontCollection">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontcollection">IDWriteFontCollection</a>**</b></para>
            /// <para>When this method returns, contains the address of a pointer to the current <a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontcollection">IDWriteFontCollection</a> object.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontlist-getfontcollection#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontlist-getfontcollection">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetFontCollection(win32.Graphics.DirectWrite.IDWriteFontCollection**fontCollection)
            {
                fixed (IDWriteFontList*pThis = &this)
                    return lpVtbl->GetFontCollection_4(pThis, fontCollection);
            }

            /// <summary>Gets the number of fonts in the font list.</summary>
            /// <returns>
            /// <para>Type: <b>UINT32</b></para>
            /// <para>The number of fonts in the font list.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontlist-getfontcount">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal uint GetFontCount()
            {
                fixed (IDWriteFontList*pThis = &this)
                    return lpVtbl->GetFontCount_5(pThis);
            }

            /// <summary>Gets a font given its zero-based index.</summary>
            /// <param name = "index">
            /// <para>Type: <b>UINT32</b></para>
            /// <para>Zero-based index of the font in the font list.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontlist-getfont#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "font">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefont">IDWriteFont</a>**</b></para>
            /// <para>When this method returns, contains the address of a pointer to the newly created <a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefont">IDWriteFont</a> object.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontlist-getfont#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontlist-getfont">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetFont(uint index, win32.Graphics.DirectWrite.IDWriteFont**font)
            {
                fixed (IDWriteFontList*pThis = &this)
                    return lpVtbl->GetFont_6(pThis, index, font);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<IDWriteFontList*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<IDWriteFontList*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<IDWriteFontList*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<IDWriteFontList*, win32.Graphics.DirectWrite.IDWriteFontCollection**, win32.System.Com.HRESULT>GetFontCollection_4;
                internal delegate *unmanaged[Stdcall]<IDWriteFontList*, uint>GetFontCount_5;
                internal delegate *unmanaged[Stdcall]<IDWriteFontList*, uint, win32.Graphics.DirectWrite.IDWriteFont**, win32.System.Com.HRESULT>GetFont_6;
            }

            private Vtbl*lpVtbl;
        }
    }
}