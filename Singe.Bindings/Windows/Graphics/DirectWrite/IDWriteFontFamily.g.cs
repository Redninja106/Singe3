// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.DirectWrite
    {
        [Guid("DA20D8EF-812A-4C43-9802-62EC4ABD7ADD")]
        internal unsafe struct IDWriteFontFamily
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (IDWriteFontFamily*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (IDWriteFontFamily*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (IDWriteFontFamily*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal unsafe win32.System.Com.HRESULT GetFontCollection(win32.Graphics.DirectWrite.IDWriteFontCollection**fontCollection)
            {
                fixed (IDWriteFontFamily*pThis = &this)
                    return lpVtbl->GetFontCollection_4(pThis, fontCollection);
            }

            internal uint GetFontCount()
            {
                fixed (IDWriteFontFamily*pThis = &this)
                    return lpVtbl->GetFontCount_5(pThis);
            }

            internal unsafe win32.System.Com.HRESULT GetFont(uint index, win32.Graphics.DirectWrite.IDWriteFont**font)
            {
                fixed (IDWriteFontFamily*pThis = &this)
                    return lpVtbl->GetFont_6(pThis, index, font);
            }

            /// <summary>Creates a localized strings object that contains the family names for the font family, indexed by locale name.</summary>
            /// <param name = "names">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritelocalizedstrings">IDWriteLocalizedStrings</a>**</b></para>
            /// <para>The address of a pointer to the newly created <a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritelocalizedstrings">IDWriteLocalizedStrings</a> object.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getfamilynames#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getfamilynames">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetFamilyNames(win32.Graphics.DirectWrite.IDWriteLocalizedStrings**names)
            {
                fixed (IDWriteFontFamily*pThis = &this)
                    return lpVtbl->GetFamilyNames_7(pThis, names);
            }

            /// <summary>Gets the font that best matches the specified properties.</summary>
            /// <param name = "weight">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_font_weight">DWRITE_FONT_WEIGHT</a></b></para>
            /// <para>A value that is used to match a requested font weight.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getfirstmatchingfont#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "stretch">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_font_stretch">DWRITE_FONT_STRETCH</a></b></para>
            /// <para>A value that is used to match a requested font stretch.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getfirstmatchingfont#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "style">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_font_style">DWRITE_FONT_STYLE</a></b></para>
            /// <para>A value that is used to match a requested font style.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getfirstmatchingfont#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "matchingFont">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefont">IDWriteFont</a>**</b></para>
            /// <para>When this method returns, contains the address of a pointer to the newly created <a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefont">IDWriteFont</a> object.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getfirstmatchingfont#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getfirstmatchingfont">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetFirstMatchingFont(win32.Graphics.DirectWrite.DWRITE_FONT_WEIGHT weight, win32.Graphics.DirectWrite.DWRITE_FONT_STRETCH stretch, win32.Graphics.DirectWrite.DWRITE_FONT_STYLE style, win32.Graphics.DirectWrite.IDWriteFont**matchingFont)
            {
                fixed (IDWriteFontFamily*pThis = &this)
                    return lpVtbl->GetFirstMatchingFont_8(pThis, weight, stretch, style, matchingFont);
            }

            /// <summary>Gets a list of fonts in the font family ranked in order of how well they match the specified properties.</summary>
            /// <param name = "weight">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_font_weight">DWRITE_FONT_WEIGHT</a></b></para>
            /// <para>A value that is used to match a requested font weight.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getmatchingfonts#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "stretch">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_font_stretch">DWRITE_FONT_STRETCH</a></b></para>
            /// <para>A value that is used to match a requested font stretch.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getmatchingfonts#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "style">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_font_style">DWRITE_FONT_STYLE</a></b></para>
            /// <para>A value that is used to match a requested font style.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getmatchingfonts#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "matchingFonts">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontlist">IDWriteFontList</a>**</b></para>
            /// <para>An address of a pointer to the newly created <a href = "https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontlist">IDWriteFontList</a> object.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getmatchingfonts#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns: loc = "http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getmatchingfonts">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetMatchingFonts(win32.Graphics.DirectWrite.DWRITE_FONT_WEIGHT weight, win32.Graphics.DirectWrite.DWRITE_FONT_STRETCH stretch, win32.Graphics.DirectWrite.DWRITE_FONT_STYLE style, win32.Graphics.DirectWrite.IDWriteFontList**matchingFonts)
            {
                fixed (IDWriteFontFamily*pThis = &this)
                    return lpVtbl->GetMatchingFonts_9(pThis, weight, stretch, style, matchingFonts);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<IDWriteFontFamily*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<IDWriteFontFamily*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<IDWriteFontFamily*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<IDWriteFontFamily*, win32.Graphics.DirectWrite.IDWriteFontCollection**, win32.System.Com.HRESULT>GetFontCollection_4;
                internal delegate *unmanaged[Stdcall]<IDWriteFontFamily*, uint>GetFontCount_5;
                internal delegate *unmanaged[Stdcall]<IDWriteFontFamily*, uint, win32.Graphics.DirectWrite.IDWriteFont**, win32.System.Com.HRESULT>GetFont_6;
                internal delegate *unmanaged[Stdcall]<IDWriteFontFamily*, win32.Graphics.DirectWrite.IDWriteLocalizedStrings**, win32.System.Com.HRESULT>GetFamilyNames_7;
                internal delegate *unmanaged[Stdcall]<IDWriteFontFamily*, win32.Graphics.DirectWrite.DWRITE_FONT_WEIGHT, win32.Graphics.DirectWrite.DWRITE_FONT_STRETCH, win32.Graphics.DirectWrite.DWRITE_FONT_STYLE, win32.Graphics.DirectWrite.IDWriteFont**, win32.System.Com.HRESULT>GetFirstMatchingFont_8;
                internal delegate *unmanaged[Stdcall]<IDWriteFontFamily*, win32.Graphics.DirectWrite.DWRITE_FONT_WEIGHT, win32.Graphics.DirectWrite.DWRITE_FONT_STRETCH, win32.Graphics.DirectWrite.DWRITE_FONT_STYLE, win32.Graphics.DirectWrite.IDWriteFontList**, win32.System.Com.HRESULT>GetMatchingFonts_9;
            }

            private Vtbl*lpVtbl;
        }
    }
}