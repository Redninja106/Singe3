// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D11
    {
        [Guid("B2DAAD8B-03D4-4DBF-95EB-32AB4B63D0AB")]
        internal unsafe struct ID3DUserDefinedAnnotation
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID3DUserDefinedAnnotation*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID3DUserDefinedAnnotation*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID3DUserDefinedAnnotation*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "BeginEvent(win32.System.SystemServices.PCWSTR)"/>
            internal unsafe int BeginEvent(string Name)
            {
                fixed (char *NameLocal = Name)
                {
                    int __result = this.BeginEvent(NameLocal);
                    return __result;
                }
            }

            /// <summary>Marks the beginning of a section of event code.</summary>
            /// <param name = "Name">
            /// <para>A <b>NULL</b>-terminated <b>UNICODE</b> string that contains the name of the event. The name is not relevant to the operating system. You can choose a name that is meaningful when the calling application is running under the Direct3D profiling tool. A <b>NULL</b> pointer produces undefined results.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3duserdefinedannotation-beginevent#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Returns the number of previous calls to <b>BeginEvent</b> that have not yet been finalized by calls to the <a href = "/windows/desktop/api/d3d11_1/nf-d3d11_1-id3duserdefinedannotation-endevent">ID3DUserDefinedAnnotation::EndEvent</a> method.</para>
            /// <para>The return value is –1 if the calling application is not running under a Direct3D profiling tool.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3duserdefinedannotation-beginevent">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal int BeginEvent(win32.System.SystemServices.PCWSTR Name)
            {
                fixed (ID3DUserDefinedAnnotation*pThis = &this)
                    return lpVtbl->BeginEvent_4(pThis, Name);
            }

            /// <summary>Marks the end of a section of event code.</summary>
            /// <returns>
            /// <para>Returns the number of previous calls to the <a href = "/windows/desktop/api/d3d11_1/nf-d3d11_1-id3duserdefinedannotation-beginevent">ID3DUserDefinedAnnotation::BeginEvent</a> method that have not yet been finalized by calls to <b>EndEvent</b>.</para>
            /// <para>The return value is –1 if the calling application is not running under a Direct3D profiling tool.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3duserdefinedannotation-endevent">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal int EndEvent()
            {
                fixed (ID3DUserDefinedAnnotation*pThis = &this)
                    return lpVtbl->EndEvent_5(pThis);
            }

            /// <inheritdoc cref = "SetMarker(win32.System.SystemServices.PCWSTR)"/>
            internal unsafe void SetMarker(string Name)
            {
                fixed (char *NameLocal = Name)
                {
                    this.SetMarker(NameLocal);
                }
            }

            /// <summary>Marks a single point of execution in code.</summary>
            /// <param name = "Name">
            /// <para>A <b>NULL</b>-terminated <b>UNICODE</b> string that contains the name of the marker. The name is not relevant to the operating system. You can choose a name that is meaningful when the calling application is running under the Direct3D profiling tool. A <b>NULL</b> pointer produces undefined results.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3duserdefinedannotation-setmarker#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para>A user can visualize the marker when the calling application is running under an enabled Direct3D profiling tool such as Microsoft Visual Studio Ultimate 2012.</para>
            /// <para><b>SetMarker</b> has no effect if the calling application is not running under an enabled Direct3D profiling tool.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3duserdefinedannotation-setmarker#">Read more on docs.microsoft.com</see>.</para>
            /// </remarks>
            internal void SetMarker(win32.System.SystemServices.PCWSTR Name)
            {
                fixed (ID3DUserDefinedAnnotation*pThis = &this)
                    lpVtbl->SetMarker_6(pThis, Name);
            }

            /// <summary>Determines whether the calling application is running under a Microsoft Direct3D profiling tool.</summary>
            /// <returns>The return value is nonzero if the calling application is running under a Direct3D profiling tool such as Visual Studio Ultimate 2012, and zero otherwise.</returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_1/nf-d3d11_1-id3duserdefinedannotation-getstatus">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.SystemServices.BOOL GetStatus()
            {
                fixed (ID3DUserDefinedAnnotation*pThis = &this)
                    return lpVtbl->GetStatus_7(pThis);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID3DUserDefinedAnnotation*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID3DUserDefinedAnnotation*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID3DUserDefinedAnnotation*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID3DUserDefinedAnnotation*, win32.System.SystemServices.PCWSTR, int>BeginEvent_4;
                internal delegate *unmanaged[Stdcall]<ID3DUserDefinedAnnotation*, int>EndEvent_5;
                internal delegate *unmanaged[Stdcall]<ID3DUserDefinedAnnotation*, win32.System.SystemServices.PCWSTR, void>SetMarker_6;
                internal delegate *unmanaged[Stdcall]<ID3DUserDefinedAnnotation*, win32.System.SystemServices.BOOL>GetStatus_7;
            }

            private Vtbl*lpVtbl;
        }
    }
}