// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D11
    {
        /// <summary>Identifies a type of trace register.</summary>
        /// <remarks>
        /// <para><b>D3D11_TRACE_REGISTER_TYPE</b> identifies the type of trace register in a <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shadertracing/ns-d3d11shadertracing-d3d11_trace_register">D3D11_TRACE_REGISTER</a> structure.</para>
        /// <para><div class = "alert"><b>Note</b>  This API requires the Windows Software Development Kit (SDK) for Windows 8.</div> <div> </div></para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11shadertracing/ne-d3d11shadertracing-d3d11_trace_register_type#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal enum D3D11_TRACE_REGISTER_TYPE
        {
            /// <summary>Output <b>NULL</b> register.</summary>
            D3D11_TRACE_OUTPUT_NULL_REGISTER = 0,
            /// <summary>Input register.</summary>
            D3D11_TRACE_INPUT_REGISTER = 1,
            /// <summary>Input primitive ID register.</summary>
            D3D11_TRACE_INPUT_PRIMITIVE_ID_REGISTER = 2,
            /// <summary>Immediate constant buffer.</summary>
            D3D11_TRACE_IMMEDIATE_CONSTANT_BUFFER = 3,
            /// <summary>Temporary register.</summary>
            D3D11_TRACE_TEMP_REGISTER = 4,
            /// <summary>Temporary register that can be indexed.</summary>
            D3D11_TRACE_INDEXABLE_TEMP_REGISTER = 5,
            /// <summary>Output register.</summary>
            D3D11_TRACE_OUTPUT_REGISTER = 6,
            /// <summary>Output oDepth register.</summary>
            D3D11_TRACE_OUTPUT_DEPTH_REGISTER = 7,
            /// <summary>Constant buffer.</summary>
            D3D11_TRACE_CONSTANT_BUFFER = 8,
            /// <summary>Immediate32 register.</summary>
            D3D11_TRACE_IMMEDIATE32 = 9,
            /// <summary>Sampler.</summary>
            D3D11_TRACE_SAMPLER = 10,
            /// <summary>Resource.</summary>
            D3D11_TRACE_RESOURCE = 11,
            /// <summary>Rasterizer.</summary>
            D3D11_TRACE_RASTERIZER = 12,
            /// <summary>Output coverage mask.</summary>
            D3D11_TRACE_OUTPUT_COVERAGE_MASK = 13,
            /// <summary>Stream.</summary>
            D3D11_TRACE_STREAM = 14,
            /// <summary>This pointer.</summary>
            D3D11_TRACE_THIS_POINTER = 15,
            /// <summary>Output control point ID register (this is actually an input; it defines the output that the thread controls).</summary>
            D3D11_TRACE_OUTPUT_CONTROL_POINT_ID_REGISTER = 16,
            /// <summary>Input fork instance ID register.</summary>
            D3D11_TRACE_INPUT_FORK_INSTANCE_ID_REGISTER = 17,
            /// <summary>Input join instance ID register.</summary>
            D3D11_TRACE_INPUT_JOIN_INSTANCE_ID_REGISTER = 18,
            /// <summary>Input control point register.</summary>
            D3D11_TRACE_INPUT_CONTROL_POINT_REGISTER = 19,
            /// <summary>Output control point register.</summary>
            D3D11_TRACE_OUTPUT_CONTROL_POINT_REGISTER = 20,
            /// <summary>Input patch constant register.</summary>
            D3D11_TRACE_INPUT_PATCH_CONSTANT_REGISTER = 21,
            /// <summary>Input domain point register.</summary>
            D3D11_TRACE_INPUT_DOMAIN_POINT_REGISTER = 22,
            /// <summary>Unordered-access view.</summary>
            D3D11_TRACE_UNORDERED_ACCESS_VIEW = 23,
            /// <summary>Thread group shared memory.</summary>
            D3D11_TRACE_THREAD_GROUP_SHARED_MEMORY = 24,
            /// <summary>Input thread ID register.</summary>
            D3D11_TRACE_INPUT_THREAD_ID_REGISTER = 25,
            /// <summary>Thread group ID register.</summary>
            D3D11_TRACE_INPUT_THREAD_GROUP_ID_REGISTER = 26,
            /// <summary>Input thread ID in-group register.</summary>
            D3D11_TRACE_INPUT_THREAD_ID_IN_GROUP_REGISTER = 27,
            /// <summary>Input coverage mask register.</summary>
            D3D11_TRACE_INPUT_COVERAGE_MASK_REGISTER = 28,
            /// <summary>Input thread ID in-group flattened register.</summary>
            D3D11_TRACE_INPUT_THREAD_ID_IN_GROUP_FLATTENED_REGISTER = 29,
            /// <summary>Input geometry shader (GS) instance ID register.</summary>
            D3D11_TRACE_INPUT_GS_INSTANCE_ID_REGISTER = 30,
            /// <summary>Output oDepth greater than or equal register.</summary>
            D3D11_TRACE_OUTPUT_DEPTH_GREATER_EQUAL_REGISTER = 31,
            /// <summary>Output oDepth less than or equal register.</summary>
            D3D11_TRACE_OUTPUT_DEPTH_LESS_EQUAL_REGISTER = 32,
            /// <summary>Immediate64 register.</summary>
            D3D11_TRACE_IMMEDIATE64 = 33,
            /// <summary>Cycle counter register.</summary>
            D3D11_TRACE_INPUT_CYCLE_COUNTER_REGISTER = 34,
            /// <summary>Interface pointer.</summary>
            D3D11_TRACE_INTERFACE_POINTER = 35,
        }
    }
}