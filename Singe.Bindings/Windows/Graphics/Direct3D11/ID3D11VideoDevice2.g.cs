// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D11
    {
        [Guid("59C0CB01-35F0-4A70-8F67-87905C906A53")]
        internal unsafe struct ID3D11VideoDevice2
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "CreateVideoDecoder(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*, win32.Media.MediaFoundation.ID3D11VideoDecoder**)"/>
            internal unsafe win32.System.Com.HRESULT CreateVideoDecoder(in win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC pVideoDesc, in win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG pConfig, win32.Media.MediaFoundation.ID3D11VideoDecoder**ppDecoder)
            {
                fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*pConfigLocal = &pConfig)
                {
                    fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pVideoDescLocal = &pVideoDesc)
                    {
                        win32.System.Com.HRESULT __result = this.CreateVideoDecoder(pVideoDescLocal, pConfigLocal, ppDecoder);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateVideoDecoder(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pVideoDesc, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*pConfig, win32.Media.MediaFoundation.ID3D11VideoDecoder**ppDecoder)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CreateVideoDecoder_4(pThis, pVideoDesc, pConfig, ppDecoder);
            }

            internal unsafe win32.System.Com.HRESULT CreateVideoProcessor(win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*pEnum, uint RateConversionIndex, win32.Media.MediaFoundation.ID3D11VideoProcessor**ppVideoProcessor)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CreateVideoProcessor_5(pThis, pEnum, RateConversionIndex, ppVideoProcessor);
            }

            internal unsafe win32.System.Com.HRESULT CreateAuthenticatedChannel(win32.Media.MediaFoundation.D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType, win32.Media.MediaFoundation.ID3D11AuthenticatedChannel**ppAuthenticatedChannel)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CreateAuthenticatedChannel_6(pThis, ChannelType, ppAuthenticatedChannel);
            }

            /// <inheritdoc cref = "CreateCryptoSession(global::System.Guid*, global::System.Guid*, global::System.Guid*, win32.Media.MediaFoundation.ID3D11CryptoSession**)"/>
            internal unsafe win32.System.Com.HRESULT CreateCryptoSession(in global::System.Guid pCryptoType, global::System.Guid? pDecoderProfile, in global::System.Guid pKeyExchangeType, win32.Media.MediaFoundation.ID3D11CryptoSession**ppCryptoSession)
            {
                fixed (global::System.Guid*pKeyExchangeTypeLocal = &pKeyExchangeType)
                {
                    fixed (global::System.Guid*pCryptoTypeLocal = &pCryptoType)
                    {
                        global::System.Guid pDecoderProfileLocal = pDecoderProfile.HasValue ? pDecoderProfile.Value : default(global::System.Guid);
                        win32.System.Com.HRESULT __result = this.CreateCryptoSession(pCryptoTypeLocal, pDecoderProfile.HasValue ? &pDecoderProfileLocal : null, pKeyExchangeTypeLocal, ppCryptoSession);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateCryptoSession(global::System.Guid*pCryptoType, [Optional] global::System.Guid*pDecoderProfile, global::System.Guid*pKeyExchangeType, win32.Media.MediaFoundation.ID3D11CryptoSession**ppCryptoSession)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CreateCryptoSession_7(pThis, pCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession);
            }

            /// <inheritdoc cref = "CreateVideoDecoderOutputView(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*, win32.Media.MediaFoundation.ID3D11VideoDecoderOutputView**)"/>
            internal unsafe win32.System.Com.HRESULT CreateVideoDecoderOutputView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, in win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC pDesc, win32.Media.MediaFoundation.ID3D11VideoDecoderOutputView**ppVDOVView)
            {
                fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*pDescLocal = &pDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateVideoDecoderOutputView(pResource, pDescLocal, ppVDOVView);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateVideoDecoderOutputView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*pDesc, [Optional] win32.Media.MediaFoundation.ID3D11VideoDecoderOutputView**ppVDOVView)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CreateVideoDecoderOutputView_8(pThis, pResource, pDesc, ppVDOVView);
            }

            /// <inheritdoc cref = "CreateVideoProcessorInputView(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*, win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*, win32.Media.MediaFoundation.ID3D11VideoProcessorInputView**)"/>
            internal unsafe win32.System.Com.HRESULT CreateVideoProcessorInputView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*pEnum, in win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC pDesc, win32.Media.MediaFoundation.ID3D11VideoProcessorInputView**ppVPIView)
            {
                fixed (win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*pDescLocal = &pDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateVideoProcessorInputView(pResource, pEnum, pDescLocal, ppVPIView);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateVideoProcessorInputView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*pEnum, win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*pDesc, [Optional] win32.Media.MediaFoundation.ID3D11VideoProcessorInputView**ppVPIView)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CreateVideoProcessorInputView_9(pThis, pResource, pEnum, pDesc, ppVPIView);
            }

            /// <inheritdoc cref = "CreateVideoProcessorOutputView(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*, win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*, win32.Media.MediaFoundation.ID3D11VideoProcessorOutputView**)"/>
            internal unsafe win32.System.Com.HRESULT CreateVideoProcessorOutputView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*pEnum, in win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC pDesc, win32.Media.MediaFoundation.ID3D11VideoProcessorOutputView**ppVPOView)
            {
                fixed (win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*pDescLocal = &pDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateVideoProcessorOutputView(pResource, pEnum, pDescLocal, ppVPOView);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateVideoProcessorOutputView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*pEnum, win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*pDesc, [Optional] win32.Media.MediaFoundation.ID3D11VideoProcessorOutputView**ppVPOView)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CreateVideoProcessorOutputView_10(pThis, pResource, pEnum, pDesc, ppVPOView);
            }

            /// <inheritdoc cref = "CreateVideoProcessorEnumerator(win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator**)"/>
            internal unsafe win32.System.Com.HRESULT CreateVideoProcessorEnumerator(in win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_CONTENT_DESC pDesc, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator**ppEnum)
            {
                fixed (win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_CONTENT_DESC*pDescLocal = &pDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateVideoProcessorEnumerator(pDescLocal, ppEnum);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateVideoProcessorEnumerator(win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_CONTENT_DESC*pDesc, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator**ppEnum)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CreateVideoProcessorEnumerator_11(pThis, pDesc, ppEnum);
            }

            internal uint GetVideoDecoderProfileCount()
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->GetVideoDecoderProfileCount_12(pThis);
            }

            /// <inheritdoc cref = "GetVideoDecoderProfile(uint, global::System.Guid*)"/>
            internal unsafe win32.System.Com.HRESULT GetVideoDecoderProfile(uint Index, out global::System.Guid pDecoderProfile)
            {
                fixed (global::System.Guid*pDecoderProfileLocal = &pDecoderProfile)
                {
                    win32.System.Com.HRESULT __result = this.GetVideoDecoderProfile(Index, pDecoderProfileLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetVideoDecoderProfile(uint Index, global::System.Guid*pDecoderProfile)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->GetVideoDecoderProfile_13(pThis, Index, pDecoderProfile);
            }

            /// <inheritdoc cref = "CheckVideoDecoderFormat(global::System.Guid*, win32.Graphics.Dxgi.DXGI_FORMAT, win32.System.SystemServices.BOOL*)"/>
            internal unsafe win32.System.Com.HRESULT CheckVideoDecoderFormat(in global::System.Guid pDecoderProfile, win32.Graphics.Dxgi.DXGI_FORMAT Format, out win32.System.SystemServices.BOOL pSupported)
            {
                fixed (win32.System.SystemServices.BOOL*pSupportedLocal = &pSupported)
                {
                    fixed (global::System.Guid*pDecoderProfileLocal = &pDecoderProfile)
                    {
                        win32.System.Com.HRESULT __result = this.CheckVideoDecoderFormat(pDecoderProfileLocal, Format, pSupportedLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CheckVideoDecoderFormat(global::System.Guid*pDecoderProfile, win32.Graphics.Dxgi.DXGI_FORMAT Format, win32.System.SystemServices.BOOL*pSupported)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CheckVideoDecoderFormat_14(pThis, pDecoderProfile, Format, pSupported);
            }

            /// <inheritdoc cref = "GetVideoDecoderConfigCount(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, uint *)"/>
            internal unsafe win32.System.Com.HRESULT GetVideoDecoderConfigCount(in win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC pDesc, out uint pCount)
            {
                fixed (uint *pCountLocal = &pCount)
                {
                    fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pDescLocal = &pDesc)
                    {
                        win32.System.Com.HRESULT __result = this.GetVideoDecoderConfigCount(pDescLocal, pCountLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetVideoDecoderConfigCount(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pDesc, uint *pCount)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->GetVideoDecoderConfigCount_15(pThis, pDesc, pCount);
            }

            /// <inheritdoc cref = "GetVideoDecoderConfig(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, uint, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*)"/>
            internal unsafe win32.System.Com.HRESULT GetVideoDecoderConfig(in win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC pDesc, uint Index, out win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG pConfig)
            {
                fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*pConfigLocal = &pConfig)
                {
                    fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pDescLocal = &pDesc)
                    {
                        win32.System.Com.HRESULT __result = this.GetVideoDecoderConfig(pDescLocal, Index, pConfigLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetVideoDecoderConfig(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pDesc, uint Index, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*pConfig)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->GetVideoDecoderConfig_16(pThis, pDesc, Index, pConfig);
            }

            /// <inheritdoc cref = "GetContentProtectionCaps(global::System.Guid*, global::System.Guid*, win32.Media.MediaFoundation.D3D11_VIDEO_CONTENT_PROTECTION_CAPS*)"/>
            internal unsafe win32.System.Com.HRESULT GetContentProtectionCaps(global::System.Guid? pCryptoType, global::System.Guid? pDecoderProfile, out win32.Media.MediaFoundation.D3D11_VIDEO_CONTENT_PROTECTION_CAPS pCaps)
            {
                fixed (win32.Media.MediaFoundation.D3D11_VIDEO_CONTENT_PROTECTION_CAPS*pCapsLocal = &pCaps)
                {
                    global::System.Guid pCryptoTypeLocal = pCryptoType.HasValue ? pCryptoType.Value : default(global::System.Guid);
                    global::System.Guid pDecoderProfileLocal = pDecoderProfile.HasValue ? pDecoderProfile.Value : default(global::System.Guid);
                    win32.System.Com.HRESULT __result = this.GetContentProtectionCaps(pCryptoType.HasValue ? &pCryptoTypeLocal : null, pDecoderProfile.HasValue ? &pDecoderProfileLocal : null, pCapsLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetContentProtectionCaps([Optional] global::System.Guid*pCryptoType, [Optional] global::System.Guid*pDecoderProfile, win32.Media.MediaFoundation.D3D11_VIDEO_CONTENT_PROTECTION_CAPS*pCaps)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->GetContentProtectionCaps_17(pThis, pCryptoType, pDecoderProfile, pCaps);
            }

            /// <inheritdoc cref = "CheckCryptoKeyExchange(global::System.Guid*, global::System.Guid*, uint, global::System.Guid*)"/>
            internal unsafe win32.System.Com.HRESULT CheckCryptoKeyExchange(in global::System.Guid pCryptoType, global::System.Guid? pDecoderProfile, uint Index, out global::System.Guid pKeyExchangeType)
            {
                fixed (global::System.Guid*pKeyExchangeTypeLocal = &pKeyExchangeType)
                {
                    fixed (global::System.Guid*pCryptoTypeLocal = &pCryptoType)
                    {
                        global::System.Guid pDecoderProfileLocal = pDecoderProfile.HasValue ? pDecoderProfile.Value : default(global::System.Guid);
                        win32.System.Com.HRESULT __result = this.CheckCryptoKeyExchange(pCryptoTypeLocal, pDecoderProfile.HasValue ? &pDecoderProfileLocal : null, Index, pKeyExchangeTypeLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CheckCryptoKeyExchange(global::System.Guid*pCryptoType, [Optional] global::System.Guid*pDecoderProfile, uint Index, global::System.Guid*pKeyExchangeType)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CheckCryptoKeyExchange_18(pThis, pCryptoType, pDecoderProfile, Index, pKeyExchangeType);
            }

            /// <inheritdoc cref = "SetPrivateData(global::System.Guid*, uint, void *)"/>
            internal unsafe win32.System.Com.HRESULT SetPrivateData(in global::System.Guid guid, uint DataSize, void *pData)
            {
                fixed (global::System.Guid*guidLocal = &guid)
                {
                    win32.System.Com.HRESULT __result = this.SetPrivateData(guidLocal, DataSize, pData);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT SetPrivateData(global::System.Guid*guid, uint DataSize, [Optional] void *pData)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->SetPrivateData_19(pThis, guid, DataSize, pData);
            }

            /// <inheritdoc cref = "SetPrivateDataInterface(global::System.Guid*, win32.System.Com.IUnknown*)"/>
            internal unsafe win32.System.Com.HRESULT SetPrivateDataInterface(in global::System.Guid guid, win32.System.Com.IUnknown*pData)
            {
                fixed (global::System.Guid*guidLocal = &guid)
                {
                    win32.System.Com.HRESULT __result = this.SetPrivateDataInterface(guidLocal, pData);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT SetPrivateDataInterface(global::System.Guid*guid, [Optional] win32.System.Com.IUnknown*pData)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->SetPrivateDataInterface_20(pThis, guid, pData);
            }

            /// <inheritdoc cref = "GetCryptoSessionPrivateDataSize(global::System.Guid*, global::System.Guid*, global::System.Guid*, uint *, uint *)"/>
            internal unsafe win32.System.Com.HRESULT GetCryptoSessionPrivateDataSize(in global::System.Guid pCryptoType, global::System.Guid? pDecoderProfile, in global::System.Guid pKeyExchangeType, out uint pPrivateInputSize, out uint pPrivateOutputSize)
            {
                fixed (uint *pPrivateOutputSizeLocal = &pPrivateOutputSize)
                {
                    fixed (uint *pPrivateInputSizeLocal = &pPrivateInputSize)
                    {
                        fixed (global::System.Guid*pKeyExchangeTypeLocal = &pKeyExchangeType)
                        {
                            fixed (global::System.Guid*pCryptoTypeLocal = &pCryptoType)
                            {
                                global::System.Guid pDecoderProfileLocal = pDecoderProfile.HasValue ? pDecoderProfile.Value : default(global::System.Guid);
                                win32.System.Com.HRESULT __result = this.GetCryptoSessionPrivateDataSize(pCryptoTypeLocal, pDecoderProfile.HasValue ? &pDecoderProfileLocal : null, pKeyExchangeTypeLocal, pPrivateInputSizeLocal, pPrivateOutputSizeLocal);
                                return __result;
                            }
                        }
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetCryptoSessionPrivateDataSize(global::System.Guid*pCryptoType, [Optional] global::System.Guid*pDecoderProfile, global::System.Guid*pKeyExchangeType, uint *pPrivateInputSize, uint *pPrivateOutputSize)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->GetCryptoSessionPrivateDataSize_21(pThis, pCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
            }

            /// <inheritdoc cref = "GetVideoDecoderCaps(global::System.Guid*, uint, uint, win32.Graphics.Dxgi.DXGI_RATIONAL*, uint, global::System.Guid*, uint *)"/>
            internal unsafe win32.System.Com.HRESULT GetVideoDecoderCaps(in global::System.Guid pDecoderProfile, uint SampleWidth, uint SampleHeight, in win32.Graphics.Dxgi.DXGI_RATIONAL pFrameRate, uint BitRate, global::System.Guid? pCryptoType, out uint pDecoderCaps)
            {
                fixed (uint *pDecoderCapsLocal = &pDecoderCaps)
                {
                    fixed (win32.Graphics.Dxgi.DXGI_RATIONAL*pFrameRateLocal = &pFrameRate)
                    {
                        fixed (global::System.Guid*pDecoderProfileLocal = &pDecoderProfile)
                        {
                            global::System.Guid pCryptoTypeLocal = pCryptoType.HasValue ? pCryptoType.Value : default(global::System.Guid);
                            win32.System.Com.HRESULT __result = this.GetVideoDecoderCaps(pDecoderProfileLocal, SampleWidth, SampleHeight, pFrameRateLocal, BitRate, pCryptoType.HasValue ? &pCryptoTypeLocal : null, pDecoderCapsLocal);
                            return __result;
                        }
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetVideoDecoderCaps(global::System.Guid*pDecoderProfile, uint SampleWidth, uint SampleHeight, win32.Graphics.Dxgi.DXGI_RATIONAL*pFrameRate, uint BitRate, [Optional] global::System.Guid*pCryptoType, uint *pDecoderCaps)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->GetVideoDecoderCaps_22(pThis, pDecoderProfile, SampleWidth, SampleHeight, pFrameRate, BitRate, pCryptoType, pDecoderCaps);
            }

            /// <inheritdoc cref = "CheckVideoDecoderDownsampling(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*, win32.Graphics.Dxgi.DXGI_RATIONAL*, win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC*, win32.System.SystemServices.BOOL*, win32.System.SystemServices.BOOL*)"/>
            internal unsafe win32.System.Com.HRESULT CheckVideoDecoderDownsampling(in win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC pInputDesc, win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE InputColorSpace, in win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG pInputConfig, in win32.Graphics.Dxgi.DXGI_RATIONAL pFrameRate, in win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC pOutputDesc, out win32.System.SystemServices.BOOL pSupported, out win32.System.SystemServices.BOOL pRealTimeHint)
            {
                fixed (win32.System.SystemServices.BOOL*pRealTimeHintLocal = &pRealTimeHint)
                {
                    fixed (win32.System.SystemServices.BOOL*pSupportedLocal = &pSupported)
                    {
                        fixed (win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC*pOutputDescLocal = &pOutputDesc)
                        {
                            fixed (win32.Graphics.Dxgi.DXGI_RATIONAL*pFrameRateLocal = &pFrameRate)
                            {
                                fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*pInputConfigLocal = &pInputConfig)
                                {
                                    fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pInputDescLocal = &pInputDesc)
                                    {
                                        win32.System.Com.HRESULT __result = this.CheckVideoDecoderDownsampling(pInputDescLocal, InputColorSpace, pInputConfigLocal, pFrameRateLocal, pOutputDescLocal, pSupportedLocal, pRealTimeHintLocal);
                                        return __result;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CheckVideoDecoderDownsampling(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pInputDesc, win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE InputColorSpace, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*pInputConfig, win32.Graphics.Dxgi.DXGI_RATIONAL*pFrameRate, win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC*pOutputDesc, win32.System.SystemServices.BOOL*pSupported, win32.System.SystemServices.BOOL*pRealTimeHint)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CheckVideoDecoderDownsampling_23(pThis, pInputDesc, InputColorSpace, pInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint);
            }

            /// <inheritdoc cref = "RecommendVideoDecoderDownsampleParameters(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*, win32.Graphics.Dxgi.DXGI_RATIONAL*, win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC*)"/>
            internal unsafe win32.System.Com.HRESULT RecommendVideoDecoderDownsampleParameters(in win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC pInputDesc, win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE InputColorSpace, in win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG pInputConfig, in win32.Graphics.Dxgi.DXGI_RATIONAL pFrameRate, out win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC pRecommendedOutputDesc)
            {
                fixed (win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC*pRecommendedOutputDescLocal = &pRecommendedOutputDesc)
                {
                    fixed (win32.Graphics.Dxgi.DXGI_RATIONAL*pFrameRateLocal = &pFrameRate)
                    {
                        fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*pInputConfigLocal = &pInputConfig)
                        {
                            fixed (win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pInputDescLocal = &pInputDesc)
                            {
                                win32.System.Com.HRESULT __result = this.RecommendVideoDecoderDownsampleParameters(pInputDescLocal, InputColorSpace, pInputConfigLocal, pFrameRateLocal, pRecommendedOutputDescLocal);
                                return __result;
                            }
                        }
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT RecommendVideoDecoderDownsampleParameters(win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*pInputDesc, win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE InputColorSpace, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*pInputConfig, win32.Graphics.Dxgi.DXGI_RATIONAL*pFrameRate, win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC*pRecommendedOutputDesc)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->RecommendVideoDecoderDownsampleParameters_24(pThis, pInputDesc, InputColorSpace, pInputConfig, pFrameRate, pRecommendedOutputDesc);
            }

            internal unsafe win32.System.Com.HRESULT CheckFeatureSupport(win32.Media.MediaFoundation.D3D11_FEATURE_VIDEO Feature, void *pFeatureSupportData, uint FeatureSupportDataSize)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->CheckFeatureSupport_25(pThis, Feature, pFeatureSupportData, FeatureSupportDataSize);
            }

            internal unsafe win32.System.Com.HRESULT NegotiateCryptoSessionKeyExchangeMT(win32.Media.MediaFoundation.ID3D11CryptoSession*pCryptoSession, win32.Graphics.Direct3D11.D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS flags, uint DataSize, void *pData)
            {
                fixed (ID3D11VideoDevice2*pThis = &this)
                    return lpVtbl->NegotiateCryptoSessionKeyExchangeMT_26(pThis, pCryptoSession, flags, DataSize, pData);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*, win32.Media.MediaFoundation.ID3D11VideoDecoder**, win32.System.Com.HRESULT>CreateVideoDecoder_4;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*, uint, win32.Media.MediaFoundation.ID3D11VideoProcessor**, win32.System.Com.HRESULT>CreateVideoProcessor_5;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.D3D11_AUTHENTICATED_CHANNEL_TYPE, win32.Media.MediaFoundation.ID3D11AuthenticatedChannel**, win32.System.Com.HRESULT>CreateAuthenticatedChannel_6;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, global::System.Guid*, global::System.Guid*, global::System.Guid*, win32.Media.MediaFoundation.ID3D11CryptoSession**, win32.System.Com.HRESULT>CreateCryptoSession_7;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC*, win32.Media.MediaFoundation.ID3D11VideoDecoderOutputView**, win32.System.Com.HRESULT>CreateVideoDecoderOutputView_8;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*, win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC*, win32.Media.MediaFoundation.ID3D11VideoProcessorInputView**, win32.System.Com.HRESULT>CreateVideoProcessorInputView_9;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator*, win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC*, win32.Media.MediaFoundation.ID3D11VideoProcessorOutputView**, win32.System.Com.HRESULT>CreateVideoProcessorOutputView_10;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.D3D11_VIDEO_PROCESSOR_CONTENT_DESC*, win32.Media.MediaFoundation.ID3D11VideoProcessorEnumerator**, win32.System.Com.HRESULT>CreateVideoProcessorEnumerator_11;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, uint>GetVideoDecoderProfileCount_12;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, uint, global::System.Guid*, win32.System.Com.HRESULT>GetVideoDecoderProfile_13;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, global::System.Guid*, win32.Graphics.Dxgi.DXGI_FORMAT, win32.System.SystemServices.BOOL*, win32.System.Com.HRESULT>CheckVideoDecoderFormat_14;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, uint *, win32.System.Com.HRESULT>GetVideoDecoderConfigCount_15;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, uint, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*, win32.System.Com.HRESULT>GetVideoDecoderConfig_16;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, global::System.Guid*, global::System.Guid*, win32.Media.MediaFoundation.D3D11_VIDEO_CONTENT_PROTECTION_CAPS*, win32.System.Com.HRESULT>GetContentProtectionCaps_17;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, global::System.Guid*, global::System.Guid*, uint, global::System.Guid*, win32.System.Com.HRESULT>CheckCryptoKeyExchange_18;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, global::System.Guid*, uint, void *, win32.System.Com.HRESULT>SetPrivateData_19;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, global::System.Guid*, win32.System.Com.IUnknown*, win32.System.Com.HRESULT>SetPrivateDataInterface_20;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, global::System.Guid*, global::System.Guid*, global::System.Guid*, uint *, uint *, win32.System.Com.HRESULT>GetCryptoSessionPrivateDataSize_21;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, global::System.Guid*, uint, uint, win32.Graphics.Dxgi.DXGI_RATIONAL*, uint, global::System.Guid*, uint *, win32.System.Com.HRESULT>GetVideoDecoderCaps_22;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*, win32.Graphics.Dxgi.DXGI_RATIONAL*, win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC*, win32.System.SystemServices.BOOL*, win32.System.SystemServices.BOOL*, win32.System.Com.HRESULT>CheckVideoDecoderDownsampling_23;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_DESC*, win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE, win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_CONFIG*, win32.Graphics.Dxgi.DXGI_RATIONAL*, win32.Media.MediaFoundation.D3D11_VIDEO_SAMPLE_DESC*, win32.System.Com.HRESULT>RecommendVideoDecoderDownsampleParameters_24;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.D3D11_FEATURE_VIDEO, void *, uint, win32.System.Com.HRESULT>CheckFeatureSupport_25;
                internal delegate *unmanaged[Stdcall]<ID3D11VideoDevice2*, win32.Media.MediaFoundation.ID3D11CryptoSession*, win32.Graphics.Direct3D11.D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS, uint, void *, win32.System.Com.HRESULT>NegotiateCryptoSessionKeyExchangeMT_26;
            }

            private Vtbl*lpVtbl;
        }
    }
}