// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D11
    {
        [Guid("8992AB71-02E6-4B8D-BA48-B056DCDA42C4")]
        internal unsafe struct ID3D11Device4
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "CreateBuffer(win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Buffer**)"/>
            internal unsafe win32.System.Com.HRESULT CreateBuffer(in win32.Graphics.Direct3D11.D3D11_BUFFER_DESC pDesc, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA? pInitialData, win32.Graphics.Direct3D11.ID3D11Buffer**ppBuffer)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*pDescLocal = &pDesc)
                {
                    win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA pInitialDataLocal = pInitialData.HasValue ? pInitialData.Value : default(win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA);
                    win32.System.Com.HRESULT __result = this.CreateBuffer(pDescLocal, pInitialData.HasValue ? &pInitialDataLocal : null, ppBuffer);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateBuffer(win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*pDesc, [Optional] win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*pInitialData, [Optional] win32.Graphics.Direct3D11.ID3D11Buffer**ppBuffer)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateBuffer_4(pThis, pDesc, pInitialData, ppBuffer);
            }

            /// <inheritdoc cref = "CreateTexture1D(win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture1D**)"/>
            internal unsafe win32.System.Com.HRESULT CreateTexture1D(in win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC pDesc, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA? pInitialData, win32.Graphics.Direct3D11.ID3D11Texture1D**ppTexture1D)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*pDescLocal = &pDesc)
                {
                    win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA pInitialDataLocal = pInitialData.HasValue ? pInitialData.Value : default(win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA);
                    win32.System.Com.HRESULT __result = this.CreateTexture1D(pDescLocal, pInitialData.HasValue ? &pInitialDataLocal : null, ppTexture1D);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateTexture1D(win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*pDesc, [Optional] win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*pInitialData, [Optional] win32.Graphics.Direct3D11.ID3D11Texture1D**ppTexture1D)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateTexture1D_5(pThis, pDesc, pInitialData, ppTexture1D);
            }

            /// <inheritdoc cref = "CreateTexture2D(win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture2D**)"/>
            internal unsafe win32.System.Com.HRESULT CreateTexture2D(in win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC pDesc, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA? pInitialData, win32.Graphics.Direct3D11.ID3D11Texture2D**ppTexture2D)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*pDescLocal = &pDesc)
                {
                    win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA pInitialDataLocal = pInitialData.HasValue ? pInitialData.Value : default(win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA);
                    win32.System.Com.HRESULT __result = this.CreateTexture2D(pDescLocal, pInitialData.HasValue ? &pInitialDataLocal : null, ppTexture2D);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateTexture2D(win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*pDesc, [Optional] win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*pInitialData, [Optional] win32.Graphics.Direct3D11.ID3D11Texture2D**ppTexture2D)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateTexture2D_6(pThis, pDesc, pInitialData, ppTexture2D);
            }

            /// <inheritdoc cref = "CreateTexture3D(win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture3D**)"/>
            internal unsafe win32.System.Com.HRESULT CreateTexture3D(in win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC pDesc, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA? pInitialData, win32.Graphics.Direct3D11.ID3D11Texture3D**ppTexture3D)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*pDescLocal = &pDesc)
                {
                    win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA pInitialDataLocal = pInitialData.HasValue ? pInitialData.Value : default(win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA);
                    win32.System.Com.HRESULT __result = this.CreateTexture3D(pDescLocal, pInitialData.HasValue ? &pInitialDataLocal : null, ppTexture3D);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateTexture3D(win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*pDesc, [Optional] win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*pInitialData, [Optional] win32.Graphics.Direct3D11.ID3D11Texture3D**ppTexture3D)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateTexture3D_7(pThis, pDesc, pInitialData, ppTexture3D);
            }

            /// <inheritdoc cref = "CreateShaderResourceView(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*, win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)"/>
            internal unsafe win32.System.Com.HRESULT CreateShaderResourceView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC? pDesc, win32.Graphics.Direct3D11.ID3D11ShaderResourceView**ppSRView)
            {
                win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC pDescLocal = pDesc.HasValue ? pDesc.Value : default(win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC);
                win32.System.Com.HRESULT __result = this.CreateShaderResourceView(pResource, pDesc.HasValue ? &pDescLocal : null, ppSRView);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT CreateShaderResourceView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, [Optional] win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*pDesc, [Optional] win32.Graphics.Direct3D11.ID3D11ShaderResourceView**ppSRView)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateShaderResourceView_8(pThis, pResource, pDesc, ppSRView);
            }

            /// <inheritdoc cref = "CreateUnorderedAccessView(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**)"/>
            internal unsafe win32.System.Com.HRESULT CreateUnorderedAccessView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC? pDesc, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**ppUAView)
            {
                win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC pDescLocal = pDesc.HasValue ? pDesc.Value : default(win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC);
                win32.System.Com.HRESULT __result = this.CreateUnorderedAccessView(pResource, pDesc.HasValue ? &pDescLocal : null, ppUAView);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT CreateUnorderedAccessView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, [Optional] win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*pDesc, [Optional] win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**ppUAView)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateUnorderedAccessView_9(pThis, pResource, pDesc, ppUAView);
            }

            /// <inheritdoc cref = "CreateRenderTargetView(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*, win32.Graphics.Direct3D11.ID3D11RenderTargetView**)"/>
            internal unsafe win32.System.Com.HRESULT CreateRenderTargetView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC? pDesc, win32.Graphics.Direct3D11.ID3D11RenderTargetView**ppRTView)
            {
                win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC pDescLocal = pDesc.HasValue ? pDesc.Value : default(win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC);
                win32.System.Com.HRESULT __result = this.CreateRenderTargetView(pResource, pDesc.HasValue ? &pDescLocal : null, ppRTView);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT CreateRenderTargetView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, [Optional] win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*pDesc, [Optional] win32.Graphics.Direct3D11.ID3D11RenderTargetView**ppRTView)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateRenderTargetView_10(pThis, pResource, pDesc, ppRTView);
            }

            /// <inheritdoc cref = "CreateDepthStencilView(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*, win32.Graphics.Direct3D11.ID3D11DepthStencilView**)"/>
            internal unsafe win32.System.Com.HRESULT CreateDepthStencilView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC? pDesc, win32.Graphics.Direct3D11.ID3D11DepthStencilView**ppDepthStencilView)
            {
                win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC pDescLocal = pDesc.HasValue ? pDesc.Value : default(win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC);
                win32.System.Com.HRESULT __result = this.CreateDepthStencilView(pResource, pDesc.HasValue ? &pDescLocal : null, ppDepthStencilView);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT CreateDepthStencilView(win32.Graphics.Direct3D11.ID3D11Resource*pResource, [Optional] win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*pDesc, [Optional] win32.Graphics.Direct3D11.ID3D11DepthStencilView**ppDepthStencilView)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateDepthStencilView_11(pThis, pResource, pDesc, ppDepthStencilView);
            }

            /// <inheritdoc cref = "CreateInputLayout(win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC*, uint, void *, nuint, win32.Graphics.Direct3D11.ID3D11InputLayout**)"/>
            internal unsafe win32.System.Com.HRESULT CreateInputLayout(ReadOnlySpan<win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC> pInputElementDescs, void *pShaderBytecodeWithInputSignature, nuint BytecodeLength, win32.Graphics.Direct3D11.ID3D11InputLayout**ppInputLayout)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC*pInputElementDescsLocal = pInputElementDescs)
                {
                    win32.System.Com.HRESULT __result = this.CreateInputLayout(pInputElementDescsLocal, (uint)pInputElementDescs.Length, pShaderBytecodeWithInputSignature, BytecodeLength, ppInputLayout);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateInputLayout(win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC*pInputElementDescs, uint NumElements, void *pShaderBytecodeWithInputSignature, nuint BytecodeLength, [Optional] win32.Graphics.Direct3D11.ID3D11InputLayout**ppInputLayout)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateInputLayout_12(pThis, pInputElementDescs, NumElements, pShaderBytecodeWithInputSignature, BytecodeLength, ppInputLayout);
            }

            internal unsafe win32.System.Com.HRESULT CreateVertexShader(void *pShaderBytecode, nuint BytecodeLength, [Optional] win32.Graphics.Direct3D11.ID3D11ClassLinkage*pClassLinkage, [Optional] win32.Graphics.Direct3D11.ID3D11VertexShader**ppVertexShader)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateVertexShader_13(pThis, pShaderBytecode, BytecodeLength, pClassLinkage, ppVertexShader);
            }

            internal unsafe win32.System.Com.HRESULT CreateGeometryShader(void *pShaderBytecode, nuint BytecodeLength, [Optional] win32.Graphics.Direct3D11.ID3D11ClassLinkage*pClassLinkage, [Optional] win32.Graphics.Direct3D11.ID3D11GeometryShader**ppGeometryShader)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateGeometryShader_14(pThis, pShaderBytecode, BytecodeLength, pClassLinkage, ppGeometryShader);
            }

            /// <inheritdoc cref = "CreateGeometryShaderWithStreamOutput(void *, nuint, win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY*, uint, uint *, uint, uint, win32.Graphics.Direct3D11.ID3D11ClassLinkage*, win32.Graphics.Direct3D11.ID3D11GeometryShader**)"/>
            internal unsafe win32.System.Com.HRESULT CreateGeometryShaderWithStreamOutput(void *pShaderBytecode, nuint BytecodeLength, ReadOnlySpan<win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY> pSODeclaration, ReadOnlySpan<uint> pBufferStrides, uint RasterizedStream, win32.Graphics.Direct3D11.ID3D11ClassLinkage*pClassLinkage, win32.Graphics.Direct3D11.ID3D11GeometryShader**ppGeometryShader)
            {
                fixed (uint *pBufferStridesLocal = pBufferStrides)
                {
                    fixed (win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY*pSODeclarationLocal = pSODeclaration)
                    {
                        win32.System.Com.HRESULT __result = this.CreateGeometryShaderWithStreamOutput(pShaderBytecode, BytecodeLength, pSODeclarationLocal, (uint)pSODeclaration.Length, pBufferStridesLocal, (uint)pBufferStrides.Length, RasterizedStream, pClassLinkage, ppGeometryShader);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateGeometryShaderWithStreamOutput(void *pShaderBytecode, nuint BytecodeLength, [Optional] win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY*pSODeclaration, uint NumEntries, [Optional] uint *pBufferStrides, uint NumStrides, uint RasterizedStream, [Optional] win32.Graphics.Direct3D11.ID3D11ClassLinkage*pClassLinkage, [Optional] win32.Graphics.Direct3D11.ID3D11GeometryShader**ppGeometryShader)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateGeometryShaderWithStreamOutput_15(pThis, pShaderBytecode, BytecodeLength, pSODeclaration, NumEntries, pBufferStrides, NumStrides, RasterizedStream, pClassLinkage, ppGeometryShader);
            }

            internal unsafe win32.System.Com.HRESULT CreatePixelShader(void *pShaderBytecode, nuint BytecodeLength, [Optional] win32.Graphics.Direct3D11.ID3D11ClassLinkage*pClassLinkage, [Optional] win32.Graphics.Direct3D11.ID3D11PixelShader**ppPixelShader)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreatePixelShader_16(pThis, pShaderBytecode, BytecodeLength, pClassLinkage, ppPixelShader);
            }

            internal unsafe win32.System.Com.HRESULT CreateHullShader(void *pShaderBytecode, nuint BytecodeLength, [Optional] win32.Graphics.Direct3D11.ID3D11ClassLinkage*pClassLinkage, [Optional] win32.Graphics.Direct3D11.ID3D11HullShader**ppHullShader)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateHullShader_17(pThis, pShaderBytecode, BytecodeLength, pClassLinkage, ppHullShader);
            }

            internal unsafe win32.System.Com.HRESULT CreateDomainShader(void *pShaderBytecode, nuint BytecodeLength, [Optional] win32.Graphics.Direct3D11.ID3D11ClassLinkage*pClassLinkage, [Optional] win32.Graphics.Direct3D11.ID3D11DomainShader**ppDomainShader)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateDomainShader_18(pThis, pShaderBytecode, BytecodeLength, pClassLinkage, ppDomainShader);
            }

            internal unsafe win32.System.Com.HRESULT CreateComputeShader(void *pShaderBytecode, nuint BytecodeLength, [Optional] win32.Graphics.Direct3D11.ID3D11ClassLinkage*pClassLinkage, [Optional] win32.Graphics.Direct3D11.ID3D11ComputeShader**ppComputeShader)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateComputeShader_19(pThis, pShaderBytecode, BytecodeLength, pClassLinkage, ppComputeShader);
            }

            internal unsafe win32.System.Com.HRESULT CreateClassLinkage(win32.Graphics.Direct3D11.ID3D11ClassLinkage**ppLinkage)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateClassLinkage_20(pThis, ppLinkage);
            }

            /// <inheritdoc cref = "CreateBlendState(win32.Graphics.Direct3D11.D3D11_BLEND_DESC*, win32.Graphics.Direct3D11.ID3D11BlendState**)"/>
            internal unsafe win32.System.Com.HRESULT CreateBlendState(in win32.Graphics.Direct3D11.D3D11_BLEND_DESC pBlendStateDesc, win32.Graphics.Direct3D11.ID3D11BlendState**ppBlendState)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_BLEND_DESC*pBlendStateDescLocal = &pBlendStateDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateBlendState(pBlendStateDescLocal, ppBlendState);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateBlendState(win32.Graphics.Direct3D11.D3D11_BLEND_DESC*pBlendStateDesc, [Optional] win32.Graphics.Direct3D11.ID3D11BlendState**ppBlendState)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateBlendState_21(pThis, pBlendStateDesc, ppBlendState);
            }

            /// <inheritdoc cref = "CreateDepthStencilState(win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*, win32.Graphics.Direct3D11.ID3D11DepthStencilState**)"/>
            internal unsafe win32.System.Com.HRESULT CreateDepthStencilState(in win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC pDepthStencilDesc, win32.Graphics.Direct3D11.ID3D11DepthStencilState**ppDepthStencilState)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*pDepthStencilDescLocal = &pDepthStencilDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateDepthStencilState(pDepthStencilDescLocal, ppDepthStencilState);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateDepthStencilState(win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*pDepthStencilDesc, [Optional] win32.Graphics.Direct3D11.ID3D11DepthStencilState**ppDepthStencilState)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateDepthStencilState_22(pThis, pDepthStencilDesc, ppDepthStencilState);
            }

            /// <inheritdoc cref = "CreateRasterizerState(win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*, win32.Graphics.Direct3D11.ID3D11RasterizerState**)"/>
            internal unsafe win32.System.Com.HRESULT CreateRasterizerState(in win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC pRasterizerDesc, win32.Graphics.Direct3D11.ID3D11RasterizerState**ppRasterizerState)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*pRasterizerDescLocal = &pRasterizerDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateRasterizerState(pRasterizerDescLocal, ppRasterizerState);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateRasterizerState(win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*pRasterizerDesc, [Optional] win32.Graphics.Direct3D11.ID3D11RasterizerState**ppRasterizerState)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateRasterizerState_23(pThis, pRasterizerDesc, ppRasterizerState);
            }

            /// <inheritdoc cref = "CreateSamplerState(win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*, win32.Graphics.Direct3D11.ID3D11SamplerState**)"/>
            internal unsafe win32.System.Com.HRESULT CreateSamplerState(in win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC pSamplerDesc, win32.Graphics.Direct3D11.ID3D11SamplerState**ppSamplerState)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*pSamplerDescLocal = &pSamplerDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateSamplerState(pSamplerDescLocal, ppSamplerState);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateSamplerState(win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*pSamplerDesc, [Optional] win32.Graphics.Direct3D11.ID3D11SamplerState**ppSamplerState)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateSamplerState_24(pThis, pSamplerDesc, ppSamplerState);
            }

            /// <inheritdoc cref = "CreateQuery(win32.Graphics.Direct3D11.D3D11_QUERY_DESC*, win32.Graphics.Direct3D11.ID3D11Query**)"/>
            internal unsafe win32.System.Com.HRESULT CreateQuery(in win32.Graphics.Direct3D11.D3D11_QUERY_DESC pQueryDesc, win32.Graphics.Direct3D11.ID3D11Query**ppQuery)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_QUERY_DESC*pQueryDescLocal = &pQueryDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateQuery(pQueryDescLocal, ppQuery);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateQuery(win32.Graphics.Direct3D11.D3D11_QUERY_DESC*pQueryDesc, [Optional] win32.Graphics.Direct3D11.ID3D11Query**ppQuery)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateQuery_25(pThis, pQueryDesc, ppQuery);
            }

            /// <inheritdoc cref = "CreatePredicate(win32.Graphics.Direct3D11.D3D11_QUERY_DESC*, win32.Graphics.Direct3D11.ID3D11Predicate**)"/>
            internal unsafe win32.System.Com.HRESULT CreatePredicate(in win32.Graphics.Direct3D11.D3D11_QUERY_DESC pPredicateDesc, win32.Graphics.Direct3D11.ID3D11Predicate**ppPredicate)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_QUERY_DESC*pPredicateDescLocal = &pPredicateDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreatePredicate(pPredicateDescLocal, ppPredicate);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreatePredicate(win32.Graphics.Direct3D11.D3D11_QUERY_DESC*pPredicateDesc, [Optional] win32.Graphics.Direct3D11.ID3D11Predicate**ppPredicate)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreatePredicate_26(pThis, pPredicateDesc, ppPredicate);
            }

            /// <inheritdoc cref = "CreateCounter(win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*, win32.Graphics.Direct3D11.ID3D11Counter**)"/>
            internal unsafe win32.System.Com.HRESULT CreateCounter(in win32.Graphics.Direct3D11.D3D11_COUNTER_DESC pCounterDesc, win32.Graphics.Direct3D11.ID3D11Counter**ppCounter)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*pCounterDescLocal = &pCounterDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateCounter(pCounterDescLocal, ppCounter);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateCounter(win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*pCounterDesc, [Optional] win32.Graphics.Direct3D11.ID3D11Counter**ppCounter)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateCounter_27(pThis, pCounterDesc, ppCounter);
            }

            internal unsafe win32.System.Com.HRESULT CreateDeferredContext(uint ContextFlags, [Optional] win32.Graphics.Direct3D11.ID3D11DeviceContext**ppDeferredContext)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateDeferredContext_28(pThis, ContextFlags, ppDeferredContext);
            }

            /// <inheritdoc cref = "OpenSharedResource(win32.System.SystemServices.HANDLE, global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT OpenSharedResource(SafeHandle hResource, in global::System.Guid ReturnedInterface, void **ppResource)
            {
                bool hResourceAddRef = false;
                try
                {
                    fixed (global::System.Guid*ReturnedInterfaceLocal = &ReturnedInterface)
                    {
                        win32.System.SystemServices.HANDLE hResourceLocal;
                        if (hResource is object)
                        {
                            hResource.DangerousAddRef(ref hResourceAddRef);
                            hResourceLocal = (win32.System.SystemServices.HANDLE)hResource.DangerousGetHandle();
                        }
                        else
                            hResourceLocal = default(win32.System.SystemServices.HANDLE);
                        win32.System.Com.HRESULT __result = this.OpenSharedResource(hResourceLocal, ReturnedInterfaceLocal, ppResource);
                        return __result;
                    }
                }
                finally
                {
                    if (hResourceAddRef)
                        hResource.DangerousRelease();
                }
            }

            internal unsafe win32.System.Com.HRESULT OpenSharedResource(win32.System.SystemServices.HANDLE hResource, global::System.Guid*ReturnedInterface, [Optional] void **ppResource)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->OpenSharedResource_29(pThis, hResource, ReturnedInterface, ppResource);
            }

            /// <inheritdoc cref = "CheckFormatSupport(win32.Graphics.Dxgi.DXGI_FORMAT, uint *)"/>
            internal unsafe win32.System.Com.HRESULT CheckFormatSupport(win32.Graphics.Dxgi.DXGI_FORMAT Format, out uint pFormatSupport)
            {
                fixed (uint *pFormatSupportLocal = &pFormatSupport)
                {
                    win32.System.Com.HRESULT __result = this.CheckFormatSupport(Format, pFormatSupportLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CheckFormatSupport(win32.Graphics.Dxgi.DXGI_FORMAT Format, uint *pFormatSupport)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CheckFormatSupport_30(pThis, Format, pFormatSupport);
            }

            /// <inheritdoc cref = "CheckMultisampleQualityLevels(win32.Graphics.Dxgi.DXGI_FORMAT, uint, uint *)"/>
            internal unsafe win32.System.Com.HRESULT CheckMultisampleQualityLevels(win32.Graphics.Dxgi.DXGI_FORMAT Format, uint SampleCount, out uint pNumQualityLevels)
            {
                fixed (uint *pNumQualityLevelsLocal = &pNumQualityLevels)
                {
                    win32.System.Com.HRESULT __result = this.CheckMultisampleQualityLevels(Format, SampleCount, pNumQualityLevelsLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CheckMultisampleQualityLevels(win32.Graphics.Dxgi.DXGI_FORMAT Format, uint SampleCount, uint *pNumQualityLevels)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CheckMultisampleQualityLevels_31(pThis, Format, SampleCount, pNumQualityLevels);
            }

            /// <inheritdoc cref = "CheckCounterInfo(win32.Graphics.Direct3D11.D3D11_COUNTER_INFO*)"/>
            internal unsafe void CheckCounterInfo(out win32.Graphics.Direct3D11.D3D11_COUNTER_INFO pCounterInfo)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_COUNTER_INFO*pCounterInfoLocal = &pCounterInfo)
                {
                    this.CheckCounterInfo(pCounterInfoLocal);
                }
            }

            internal unsafe void CheckCounterInfo(win32.Graphics.Direct3D11.D3D11_COUNTER_INFO*pCounterInfo)
            {
                fixed (ID3D11Device4*pThis = &this)
                    lpVtbl->CheckCounterInfo_32(pThis, pCounterInfo);
            }

            /// <inheritdoc cref = "CheckCounter(win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*, win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE*, uint *, win32.System.SystemServices.PSTR, uint *, win32.System.SystemServices.PSTR, uint *, win32.System.SystemServices.PSTR, uint *)"/>
            internal unsafe win32.System.Com.HRESULT CheckCounter(in win32.Graphics.Direct3D11.D3D11_COUNTER_DESC pDesc, out win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE pType, out uint pActiveCounters, win32.System.SystemServices.PSTR szName, uint *pNameLength, win32.System.SystemServices.PSTR szUnits, uint *pUnitsLength, win32.System.SystemServices.PSTR szDescription, uint *pDescriptionLength)
            {
                fixed (uint *pActiveCountersLocal = &pActiveCounters)
                {
                    fixed (win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE*pTypeLocal = &pType)
                    {
                        fixed (win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*pDescLocal = &pDesc)
                        {
                            win32.System.Com.HRESULT __result = this.CheckCounter(pDescLocal, pTypeLocal, pActiveCountersLocal, szName, pNameLength, szUnits, pUnitsLength, szDescription, pDescriptionLength);
                            return __result;
                        }
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CheckCounter(win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*pDesc, win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE*pType, uint *pActiveCounters, win32.System.SystemServices.PSTR szName, [Optional] uint *pNameLength, win32.System.SystemServices.PSTR szUnits, [Optional] uint *pUnitsLength, win32.System.SystemServices.PSTR szDescription, [Optional] uint *pDescriptionLength)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CheckCounter_33(pThis, pDesc, pType, pActiveCounters, szName, pNameLength, szUnits, pUnitsLength, szDescription, pDescriptionLength);
            }

            internal unsafe win32.System.Com.HRESULT CheckFeatureSupport(win32.Graphics.Direct3D11.D3D11_FEATURE Feature, void *pFeatureSupportData, uint FeatureSupportDataSize)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CheckFeatureSupport_34(pThis, Feature, pFeatureSupportData, FeatureSupportDataSize);
            }

            /// <inheritdoc cref = "GetPrivateData(global::System.Guid*, uint *, void *)"/>
            internal unsafe win32.System.Com.HRESULT GetPrivateData(in global::System.Guid guid, ref uint pDataSize, void *pData)
            {
                fixed (uint *pDataSizeLocal = &pDataSize)
                {
                    fixed (global::System.Guid*guidLocal = &guid)
                    {
                        win32.System.Com.HRESULT __result = this.GetPrivateData(guidLocal, pDataSizeLocal, pData);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetPrivateData(global::System.Guid*guid, uint *pDataSize, [Optional] void *pData)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->GetPrivateData_35(pThis, guid, pDataSize, pData);
            }

            /// <inheritdoc cref = "SetPrivateData(global::System.Guid*, uint, void *)"/>
            internal unsafe win32.System.Com.HRESULT SetPrivateData(in global::System.Guid guid, uint DataSize, void *pData)
            {
                fixed (global::System.Guid*guidLocal = &guid)
                {
                    win32.System.Com.HRESULT __result = this.SetPrivateData(guidLocal, DataSize, pData);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT SetPrivateData(global::System.Guid*guid, uint DataSize, [Optional] void *pData)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->SetPrivateData_36(pThis, guid, DataSize, pData);
            }

            /// <inheritdoc cref = "SetPrivateDataInterface(global::System.Guid*, win32.System.Com.IUnknown*)"/>
            internal unsafe win32.System.Com.HRESULT SetPrivateDataInterface(in global::System.Guid guid, win32.System.Com.IUnknown*pData)
            {
                fixed (global::System.Guid*guidLocal = &guid)
                {
                    win32.System.Com.HRESULT __result = this.SetPrivateDataInterface(guidLocal, pData);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT SetPrivateDataInterface(global::System.Guid*guid, [Optional] win32.System.Com.IUnknown*pData)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->SetPrivateDataInterface_37(pThis, guid, pData);
            }

            internal win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL GetFeatureLevel()
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->GetFeatureLevel_38(pThis);
            }

            internal uint GetCreationFlags()
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->GetCreationFlags_39(pThis);
            }

            internal win32.System.Com.HRESULT GetDeviceRemovedReason()
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->GetDeviceRemovedReason_40(pThis);
            }

            internal unsafe void GetImmediateContext(win32.Graphics.Direct3D11.ID3D11DeviceContext**ppImmediateContext)
            {
                fixed (ID3D11Device4*pThis = &this)
                    lpVtbl->GetImmediateContext_41(pThis, ppImmediateContext);
            }

            internal win32.System.Com.HRESULT SetExceptionMode(uint RaiseFlags)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->SetExceptionMode_42(pThis, RaiseFlags);
            }

            internal uint GetExceptionMode()
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->GetExceptionMode_43(pThis);
            }

            internal unsafe void GetImmediateContext1(win32.Graphics.Direct3D11.ID3D11DeviceContext1**ppImmediateContext)
            {
                fixed (ID3D11Device4*pThis = &this)
                    lpVtbl->GetImmediateContext1_44(pThis, ppImmediateContext);
            }

            internal unsafe win32.System.Com.HRESULT CreateDeferredContext1(uint ContextFlags, [Optional] win32.Graphics.Direct3D11.ID3D11DeviceContext1**ppDeferredContext)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateDeferredContext1_45(pThis, ContextFlags, ppDeferredContext);
            }

            /// <inheritdoc cref = "CreateBlendState1(win32.Graphics.Direct3D11.D3D11_BLEND_DESC1*, win32.Graphics.Direct3D11.ID3D11BlendState1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateBlendState1(in win32.Graphics.Direct3D11.D3D11_BLEND_DESC1 pBlendStateDesc, win32.Graphics.Direct3D11.ID3D11BlendState1**ppBlendState)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_BLEND_DESC1*pBlendStateDescLocal = &pBlendStateDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateBlendState1(pBlendStateDescLocal, ppBlendState);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateBlendState1(win32.Graphics.Direct3D11.D3D11_BLEND_DESC1*pBlendStateDesc, [Optional] win32.Graphics.Direct3D11.ID3D11BlendState1**ppBlendState)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateBlendState1_46(pThis, pBlendStateDesc, ppBlendState);
            }

            /// <inheritdoc cref = "CreateRasterizerState1(win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC1*, win32.Graphics.Direct3D11.ID3D11RasterizerState1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateRasterizerState1(in win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC1 pRasterizerDesc, win32.Graphics.Direct3D11.ID3D11RasterizerState1**ppRasterizerState)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC1*pRasterizerDescLocal = &pRasterizerDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateRasterizerState1(pRasterizerDescLocal, ppRasterizerState);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateRasterizerState1(win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC1*pRasterizerDesc, [Optional] win32.Graphics.Direct3D11.ID3D11RasterizerState1**ppRasterizerState)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateRasterizerState1_47(pThis, pRasterizerDesc, ppRasterizerState);
            }

            /// <inheritdoc cref = "CreateDeviceContextState(uint, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*, uint, uint, global::System.Guid*, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*, win32.Graphics.Direct3D11.ID3DDeviceContextState**)"/>
            internal unsafe win32.System.Com.HRESULT CreateDeviceContextState(uint Flags, ReadOnlySpan<win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL> pFeatureLevels, uint SDKVersion, in global::System.Guid EmulatedInterface, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*pChosenFeatureLevel, win32.Graphics.Direct3D11.ID3DDeviceContextState**ppContextState)
            {
                fixed (global::System.Guid*EmulatedInterfaceLocal = &EmulatedInterface)
                {
                    fixed (win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*pFeatureLevelsLocal = pFeatureLevels)
                    {
                        win32.System.Com.HRESULT __result = this.CreateDeviceContextState(Flags, pFeatureLevelsLocal, (uint)pFeatureLevels.Length, SDKVersion, EmulatedInterfaceLocal, pChosenFeatureLevel, ppContextState);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateDeviceContextState(uint Flags, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*pFeatureLevels, uint FeatureLevels, uint SDKVersion, global::System.Guid*EmulatedInterface, [Optional] win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*pChosenFeatureLevel, [Optional] win32.Graphics.Direct3D11.ID3DDeviceContextState**ppContextState)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateDeviceContextState_48(pThis, Flags, pFeatureLevels, FeatureLevels, SDKVersion, EmulatedInterface, pChosenFeatureLevel, ppContextState);
            }

            /// <inheritdoc cref = "OpenSharedResource1(win32.System.SystemServices.HANDLE, global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT OpenSharedResource1(SafeHandle hResource, in global::System.Guid returnedInterface, out void *ppResource)
            {
                bool hResourceAddRef = false;
                try
                {
                    fixed (void **ppResourceLocal = &ppResource)
                    {
                        fixed (global::System.Guid*returnedInterfaceLocal = &returnedInterface)
                        {
                            win32.System.SystemServices.HANDLE hResourceLocal;
                            if (hResource is object)
                            {
                                hResource.DangerousAddRef(ref hResourceAddRef);
                                hResourceLocal = (win32.System.SystemServices.HANDLE)hResource.DangerousGetHandle();
                            }
                            else
                                hResourceLocal = default(win32.System.SystemServices.HANDLE);
                            win32.System.Com.HRESULT __result = this.OpenSharedResource1(hResourceLocal, returnedInterfaceLocal, ppResourceLocal);
                            return __result;
                        }
                    }
                }
                finally
                {
                    if (hResourceAddRef)
                        hResource.DangerousRelease();
                }
            }

            internal unsafe win32.System.Com.HRESULT OpenSharedResource1(win32.System.SystemServices.HANDLE hResource, global::System.Guid*returnedInterface, void **ppResource)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->OpenSharedResource1_49(pThis, hResource, returnedInterface, ppResource);
            }

            /// <inheritdoc cref = "OpenSharedResourceByName(win32.System.SystemServices.PCWSTR, uint, global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT OpenSharedResourceByName(string lpName, uint dwDesiredAccess, in global::System.Guid returnedInterface, out void *ppResource)
            {
                fixed (void **ppResourceLocal = &ppResource)
                {
                    fixed (global::System.Guid*returnedInterfaceLocal = &returnedInterface)
                    {
                        fixed (char *lpNameLocal = lpName)
                        {
                            win32.System.Com.HRESULT __result = this.OpenSharedResourceByName(lpNameLocal, dwDesiredAccess, returnedInterfaceLocal, ppResourceLocal);
                            return __result;
                        }
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT OpenSharedResourceByName(win32.System.SystemServices.PCWSTR lpName, uint dwDesiredAccess, global::System.Guid*returnedInterface, void **ppResource)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->OpenSharedResourceByName_50(pThis, lpName, dwDesiredAccess, returnedInterface, ppResource);
            }

            internal unsafe void GetImmediateContext2(win32.Graphics.Direct3D11.ID3D11DeviceContext2**ppImmediateContext)
            {
                fixed (ID3D11Device4*pThis = &this)
                    lpVtbl->GetImmediateContext2_51(pThis, ppImmediateContext);
            }

            internal unsafe win32.System.Com.HRESULT CreateDeferredContext2(uint ContextFlags, [Optional] win32.Graphics.Direct3D11.ID3D11DeviceContext2**ppDeferredContext)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateDeferredContext2_52(pThis, ContextFlags, ppDeferredContext);
            }

            internal unsafe void GetResourceTiling(win32.Graphics.Direct3D11.ID3D11Resource*pTiledResource, [Optional] uint *pNumTilesForEntireResource, [Optional] win32.Graphics.Direct3D11.D3D11_PACKED_MIP_DESC*pPackedMipDesc, [Optional] win32.Graphics.Direct3D11.D3D11_TILE_SHAPE*pStandardTileShapeForNonPackedMips, [Optional] uint *pNumSubresourceTilings, uint FirstSubresourceTilingToGet, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_TILING*pSubresourceTilingsForNonPackedMips)
            {
                fixed (ID3D11Device4*pThis = &this)
                    lpVtbl->GetResourceTiling_53(pThis, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, FirstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
            }

            /// <inheritdoc cref = "CheckMultisampleQualityLevels1(win32.Graphics.Dxgi.DXGI_FORMAT, uint, uint, uint *)"/>
            internal unsafe win32.System.Com.HRESULT CheckMultisampleQualityLevels1(win32.Graphics.Dxgi.DXGI_FORMAT Format, uint SampleCount, uint Flags, out uint pNumQualityLevels)
            {
                fixed (uint *pNumQualityLevelsLocal = &pNumQualityLevels)
                {
                    win32.System.Com.HRESULT __result = this.CheckMultisampleQualityLevels1(Format, SampleCount, Flags, pNumQualityLevelsLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CheckMultisampleQualityLevels1(win32.Graphics.Dxgi.DXGI_FORMAT Format, uint SampleCount, uint Flags, uint *pNumQualityLevels)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CheckMultisampleQualityLevels1_54(pThis, Format, SampleCount, Flags, pNumQualityLevels);
            }

            /// <inheritdoc cref = "CreateTexture2D1(win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC1*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture2D1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateTexture2D1(in win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC1 pDesc1, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA? pInitialData, win32.Graphics.Direct3D11.ID3D11Texture2D1**ppTexture2D)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC1*pDesc1Local = &pDesc1)
                {
                    win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA pInitialDataLocal = pInitialData.HasValue ? pInitialData.Value : default(win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA);
                    win32.System.Com.HRESULT __result = this.CreateTexture2D1(pDesc1Local, pInitialData.HasValue ? &pInitialDataLocal : null, ppTexture2D);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateTexture2D1(win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC1*pDesc1, [Optional] win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*pInitialData, [Optional] win32.Graphics.Direct3D11.ID3D11Texture2D1**ppTexture2D)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateTexture2D1_55(pThis, pDesc1, pInitialData, ppTexture2D);
            }

            /// <inheritdoc cref = "CreateTexture3D1(win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC1*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture3D1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateTexture3D1(in win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC1 pDesc1, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA? pInitialData, win32.Graphics.Direct3D11.ID3D11Texture3D1**ppTexture3D)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC1*pDesc1Local = &pDesc1)
                {
                    win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA pInitialDataLocal = pInitialData.HasValue ? pInitialData.Value : default(win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA);
                    win32.System.Com.HRESULT __result = this.CreateTexture3D1(pDesc1Local, pInitialData.HasValue ? &pInitialDataLocal : null, ppTexture3D);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateTexture3D1(win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC1*pDesc1, [Optional] win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*pInitialData, [Optional] win32.Graphics.Direct3D11.ID3D11Texture3D1**ppTexture3D)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateTexture3D1_56(pThis, pDesc1, pInitialData, ppTexture3D);
            }

            /// <inheritdoc cref = "CreateRasterizerState2(win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC2*, win32.Graphics.Direct3D11.ID3D11RasterizerState2**)"/>
            internal unsafe win32.System.Com.HRESULT CreateRasterizerState2(in win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC2 pRasterizerDesc, win32.Graphics.Direct3D11.ID3D11RasterizerState2**ppRasterizerState)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC2*pRasterizerDescLocal = &pRasterizerDesc)
                {
                    win32.System.Com.HRESULT __result = this.CreateRasterizerState2(pRasterizerDescLocal, ppRasterizerState);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateRasterizerState2(win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC2*pRasterizerDesc, [Optional] win32.Graphics.Direct3D11.ID3D11RasterizerState2**ppRasterizerState)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateRasterizerState2_57(pThis, pRasterizerDesc, ppRasterizerState);
            }

            /// <inheritdoc cref = "CreateShaderResourceView1(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC1*, win32.Graphics.Direct3D11.ID3D11ShaderResourceView1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateShaderResourceView1(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC1? pDesc1, win32.Graphics.Direct3D11.ID3D11ShaderResourceView1**ppSRView1)
            {
                win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC1 pDesc1Local = pDesc1.HasValue ? pDesc1.Value : default(win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC1);
                win32.System.Com.HRESULT __result = this.CreateShaderResourceView1(pResource, pDesc1.HasValue ? &pDesc1Local : null, ppSRView1);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT CreateShaderResourceView1(win32.Graphics.Direct3D11.ID3D11Resource*pResource, [Optional] win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC1*pDesc1, [Optional] win32.Graphics.Direct3D11.ID3D11ShaderResourceView1**ppSRView1)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateShaderResourceView1_58(pThis, pResource, pDesc1, ppSRView1);
            }

            /// <inheritdoc cref = "CreateUnorderedAccessView1(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC1*, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateUnorderedAccessView1(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC1? pDesc1, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView1**ppUAView1)
            {
                win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC1 pDesc1Local = pDesc1.HasValue ? pDesc1.Value : default(win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC1);
                win32.System.Com.HRESULT __result = this.CreateUnorderedAccessView1(pResource, pDesc1.HasValue ? &pDesc1Local : null, ppUAView1);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT CreateUnorderedAccessView1(win32.Graphics.Direct3D11.ID3D11Resource*pResource, [Optional] win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC1*pDesc1, [Optional] win32.Graphics.Direct3D11.ID3D11UnorderedAccessView1**ppUAView1)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateUnorderedAccessView1_59(pThis, pResource, pDesc1, ppUAView1);
            }

            /// <inheritdoc cref = "CreateRenderTargetView1(win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC1*, win32.Graphics.Direct3D11.ID3D11RenderTargetView1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateRenderTargetView1(win32.Graphics.Direct3D11.ID3D11Resource*pResource, win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC1? pDesc1, win32.Graphics.Direct3D11.ID3D11RenderTargetView1**ppRTView1)
            {
                win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC1 pDesc1Local = pDesc1.HasValue ? pDesc1.Value : default(win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC1);
                win32.System.Com.HRESULT __result = this.CreateRenderTargetView1(pResource, pDesc1.HasValue ? &pDesc1Local : null, ppRTView1);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT CreateRenderTargetView1(win32.Graphics.Direct3D11.ID3D11Resource*pResource, [Optional] win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC1*pDesc1, [Optional] win32.Graphics.Direct3D11.ID3D11RenderTargetView1**ppRTView1)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateRenderTargetView1_60(pThis, pResource, pDesc1, ppRTView1);
            }

            /// <inheritdoc cref = "CreateQuery1(win32.Graphics.Direct3D11.D3D11_QUERY_DESC1*, win32.Graphics.Direct3D11.ID3D11Query1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateQuery1(in win32.Graphics.Direct3D11.D3D11_QUERY_DESC1 pQueryDesc1, win32.Graphics.Direct3D11.ID3D11Query1**ppQuery1)
            {
                fixed (win32.Graphics.Direct3D11.D3D11_QUERY_DESC1*pQueryDesc1Local = &pQueryDesc1)
                {
                    win32.System.Com.HRESULT __result = this.CreateQuery1(pQueryDesc1Local, ppQuery1);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateQuery1(win32.Graphics.Direct3D11.D3D11_QUERY_DESC1*pQueryDesc1, [Optional] win32.Graphics.Direct3D11.ID3D11Query1**ppQuery1)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateQuery1_61(pThis, pQueryDesc1, ppQuery1);
            }

            internal unsafe void GetImmediateContext3(win32.Graphics.Direct3D11.ID3D11DeviceContext3**ppImmediateContext)
            {
                fixed (ID3D11Device4*pThis = &this)
                    lpVtbl->GetImmediateContext3_62(pThis, ppImmediateContext);
            }

            internal unsafe win32.System.Com.HRESULT CreateDeferredContext3(uint ContextFlags, [Optional] win32.Graphics.Direct3D11.ID3D11DeviceContext3**ppDeferredContext)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->CreateDeferredContext3_63(pThis, ContextFlags, ppDeferredContext);
            }

            /// <inheritdoc cref = "WriteToSubresource(win32.Graphics.Direct3D11.ID3D11Resource*, uint, win32.Graphics.Direct3D11.D3D11_BOX*, void *, uint, uint)"/>
            internal unsafe void WriteToSubresource(win32.Graphics.Direct3D11.ID3D11Resource*pDstResource, uint DstSubresource, win32.Graphics.Direct3D11.D3D11_BOX? pDstBox, void *pSrcData, uint SrcRowPitch, uint SrcDepthPitch)
            {
                win32.Graphics.Direct3D11.D3D11_BOX pDstBoxLocal = pDstBox.HasValue ? pDstBox.Value : default(win32.Graphics.Direct3D11.D3D11_BOX);
                this.WriteToSubresource(pDstResource, DstSubresource, pDstBox.HasValue ? &pDstBoxLocal : null, pSrcData, SrcRowPitch, SrcDepthPitch);
            }

            internal unsafe void WriteToSubresource(win32.Graphics.Direct3D11.ID3D11Resource*pDstResource, uint DstSubresource, [Optional] win32.Graphics.Direct3D11.D3D11_BOX*pDstBox, void *pSrcData, uint SrcRowPitch, uint SrcDepthPitch)
            {
                fixed (ID3D11Device4*pThis = &this)
                    lpVtbl->WriteToSubresource_64(pThis, pDstResource, DstSubresource, pDstBox, pSrcData, SrcRowPitch, SrcDepthPitch);
            }

            /// <inheritdoc cref = "ReadFromSubresource(void *, uint, uint, win32.Graphics.Direct3D11.ID3D11Resource*, uint, win32.Graphics.Direct3D11.D3D11_BOX*)"/>
            internal unsafe void ReadFromSubresource(void *pDstData, uint DstRowPitch, uint DstDepthPitch, win32.Graphics.Direct3D11.ID3D11Resource*pSrcResource, uint SrcSubresource, win32.Graphics.Direct3D11.D3D11_BOX? pSrcBox)
            {
                win32.Graphics.Direct3D11.D3D11_BOX pSrcBoxLocal = pSrcBox.HasValue ? pSrcBox.Value : default(win32.Graphics.Direct3D11.D3D11_BOX);
                this.ReadFromSubresource(pDstData, DstRowPitch, DstDepthPitch, pSrcResource, SrcSubresource, pSrcBox.HasValue ? &pSrcBoxLocal : null);
            }

            internal unsafe void ReadFromSubresource(void *pDstData, uint DstRowPitch, uint DstDepthPitch, win32.Graphics.Direct3D11.ID3D11Resource*pSrcResource, uint SrcSubresource, [Optional] win32.Graphics.Direct3D11.D3D11_BOX*pSrcBox)
            {
                fixed (ID3D11Device4*pThis = &this)
                    lpVtbl->ReadFromSubresource_65(pThis, pDstData, DstRowPitch, DstDepthPitch, pSrcResource, SrcSubresource, pSrcBox);
            }

            /// <inheritdoc cref = "RegisterDeviceRemovedEvent(win32.System.SystemServices.HANDLE, uint *)"/>
            internal unsafe win32.System.Com.HRESULT RegisterDeviceRemovedEvent(SafeHandle hEvent, out uint pdwCookie)
            {
                bool hEventAddRef = false;
                try
                {
                    fixed (uint *pdwCookieLocal = &pdwCookie)
                    {
                        win32.System.SystemServices.HANDLE hEventLocal;
                        if (hEvent is object)
                        {
                            hEvent.DangerousAddRef(ref hEventAddRef);
                            hEventLocal = (win32.System.SystemServices.HANDLE)hEvent.DangerousGetHandle();
                        }
                        else
                            hEventLocal = default(win32.System.SystemServices.HANDLE);
                        win32.System.Com.HRESULT __result = this.RegisterDeviceRemovedEvent(hEventLocal, pdwCookieLocal);
                        return __result;
                    }
                }
                finally
                {
                    if (hEventAddRef)
                        hEvent.DangerousRelease();
                }
            }

            /// <summary>Registers the &quot;device removed&quot; event and indicates when a Direct3D device has become removed for any reason, using an asynchronous notification mechanism.</summary>
            /// <param name = "hEvent">
            /// <para>Type: <b>HANDLE</b></para>
            /// <para>The handle to the "device removed" event.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11device4-registerdeviceremovedevent#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pdwCookie">
            /// <para>Type: <b>DWORD*</b></para>
            /// <para>A pointer to information about the "device removed" event, which can be used in <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11_4/nf-d3d11_4-id3d11device4-unregisterdeviceremoved">UnregisterDeviceRemoved</a> to unregister the event.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11device4-registerdeviceremovedevent#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>See <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11device4-registerdeviceremovedevent">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT RegisterDeviceRemovedEvent(win32.System.SystemServices.HANDLE hEvent, uint *pdwCookie)
            {
                fixed (ID3D11Device4*pThis = &this)
                    return lpVtbl->RegisterDeviceRemovedEvent_66(pThis, hEvent, pdwCookie);
            }

            /// <summary>Unregisters the &quot;device removed&quot; event.</summary>
            /// <param name = "dwCookie">
            /// <para>Type: <b>DWORD</b></para>
            /// <para>Information about the "device removed" event, retrieved during a successful <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11_4/nf-d3d11_4-id3d11device4-registerdeviceremovedevent">RegisterDeviceRemovedEvent</a> call.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11device4-unregisterdeviceremoved#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para>See <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11_4/nf-d3d11_4-id3d11device4-registerdeviceremovedevent">RegisterDeviceRemovedEvent</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11_4/nf-d3d11_4-id3d11device4-unregisterdeviceremoved#">Read more on docs.microsoft.com</see>.</para>
            /// </remarks>
            internal void UnregisterDeviceRemoved(uint dwCookie)
            {
                fixed (ID3D11Device4*pThis = &this)
                    lpVtbl->UnregisterDeviceRemoved_67(pThis, dwCookie);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Buffer**, win32.System.Com.HRESULT>CreateBuffer_4;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture1D**, win32.System.Com.HRESULT>CreateTexture1D_5;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture2D**, win32.System.Com.HRESULT>CreateTexture2D_6;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture3D**, win32.System.Com.HRESULT>CreateTexture3D_7;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*, win32.Graphics.Direct3D11.ID3D11ShaderResourceView**, win32.System.Com.HRESULT>CreateShaderResourceView_8;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**, win32.System.Com.HRESULT>CreateUnorderedAccessView_9;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*, win32.Graphics.Direct3D11.ID3D11RenderTargetView**, win32.System.Com.HRESULT>CreateRenderTargetView_10;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*, win32.Graphics.Direct3D11.ID3D11DepthStencilView**, win32.System.Com.HRESULT>CreateDepthStencilView_11;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC*, uint, void *, nuint, win32.Graphics.Direct3D11.ID3D11InputLayout**, win32.System.Com.HRESULT>CreateInputLayout_12;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, void *, nuint, win32.Graphics.Direct3D11.ID3D11ClassLinkage*, win32.Graphics.Direct3D11.ID3D11VertexShader**, win32.System.Com.HRESULT>CreateVertexShader_13;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, void *, nuint, win32.Graphics.Direct3D11.ID3D11ClassLinkage*, win32.Graphics.Direct3D11.ID3D11GeometryShader**, win32.System.Com.HRESULT>CreateGeometryShader_14;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, void *, nuint, win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY*, uint, uint *, uint, uint, win32.Graphics.Direct3D11.ID3D11ClassLinkage*, win32.Graphics.Direct3D11.ID3D11GeometryShader**, win32.System.Com.HRESULT>CreateGeometryShaderWithStreamOutput_15;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, void *, nuint, win32.Graphics.Direct3D11.ID3D11ClassLinkage*, win32.Graphics.Direct3D11.ID3D11PixelShader**, win32.System.Com.HRESULT>CreatePixelShader_16;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, void *, nuint, win32.Graphics.Direct3D11.ID3D11ClassLinkage*, win32.Graphics.Direct3D11.ID3D11HullShader**, win32.System.Com.HRESULT>CreateHullShader_17;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, void *, nuint, win32.Graphics.Direct3D11.ID3D11ClassLinkage*, win32.Graphics.Direct3D11.ID3D11DomainShader**, win32.System.Com.HRESULT>CreateDomainShader_18;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, void *, nuint, win32.Graphics.Direct3D11.ID3D11ClassLinkage*, win32.Graphics.Direct3D11.ID3D11ComputeShader**, win32.System.Com.HRESULT>CreateComputeShader_19;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11ClassLinkage**, win32.System.Com.HRESULT>CreateClassLinkage_20;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_BLEND_DESC*, win32.Graphics.Direct3D11.ID3D11BlendState**, win32.System.Com.HRESULT>CreateBlendState_21;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*, win32.Graphics.Direct3D11.ID3D11DepthStencilState**, win32.System.Com.HRESULT>CreateDepthStencilState_22;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*, win32.Graphics.Direct3D11.ID3D11RasterizerState**, win32.System.Com.HRESULT>CreateRasterizerState_23;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*, win32.Graphics.Direct3D11.ID3D11SamplerState**, win32.System.Com.HRESULT>CreateSamplerState_24;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_QUERY_DESC*, win32.Graphics.Direct3D11.ID3D11Query**, win32.System.Com.HRESULT>CreateQuery_25;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_QUERY_DESC*, win32.Graphics.Direct3D11.ID3D11Predicate**, win32.System.Com.HRESULT>CreatePredicate_26;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*, win32.Graphics.Direct3D11.ID3D11Counter**, win32.System.Com.HRESULT>CreateCounter_27;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint, win32.Graphics.Direct3D11.ID3D11DeviceContext**, win32.System.Com.HRESULT>CreateDeferredContext_28;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.System.SystemServices.HANDLE, global::System.Guid*, void **, win32.System.Com.HRESULT>OpenSharedResource_29;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Dxgi.DXGI_FORMAT, uint *, win32.System.Com.HRESULT>CheckFormatSupport_30;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Dxgi.DXGI_FORMAT, uint, uint *, win32.System.Com.HRESULT>CheckMultisampleQualityLevels_31;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_COUNTER_INFO*, void>CheckCounterInfo_32;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*, win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE*, uint *, win32.System.SystemServices.PSTR, uint *, win32.System.SystemServices.PSTR, uint *, win32.System.SystemServices.PSTR, uint *, win32.System.Com.HRESULT>CheckCounter_33;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_FEATURE, void *, uint, win32.System.Com.HRESULT>CheckFeatureSupport_34;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, global::System.Guid*, uint *, void *, win32.System.Com.HRESULT>GetPrivateData_35;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, global::System.Guid*, uint, void *, win32.System.Com.HRESULT>SetPrivateData_36;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, global::System.Guid*, win32.System.Com.IUnknown*, win32.System.Com.HRESULT>SetPrivateDataInterface_37;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL>GetFeatureLevel_38;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint>GetCreationFlags_39;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.System.Com.HRESULT>GetDeviceRemovedReason_40;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11DeviceContext**, void>GetImmediateContext_41;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint, win32.System.Com.HRESULT>SetExceptionMode_42;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint>GetExceptionMode_43;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11DeviceContext1**, void>GetImmediateContext1_44;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint, win32.Graphics.Direct3D11.ID3D11DeviceContext1**, win32.System.Com.HRESULT>CreateDeferredContext1_45;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_BLEND_DESC1*, win32.Graphics.Direct3D11.ID3D11BlendState1**, win32.System.Com.HRESULT>CreateBlendState1_46;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC1*, win32.Graphics.Direct3D11.ID3D11RasterizerState1**, win32.System.Com.HRESULT>CreateRasterizerState1_47;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*, uint, uint, global::System.Guid*, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*, win32.Graphics.Direct3D11.ID3DDeviceContextState**, win32.System.Com.HRESULT>CreateDeviceContextState_48;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.System.SystemServices.HANDLE, global::System.Guid*, void **, win32.System.Com.HRESULT>OpenSharedResource1_49;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.System.SystemServices.PCWSTR, uint, global::System.Guid*, void **, win32.System.Com.HRESULT>OpenSharedResourceByName_50;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11DeviceContext2**, void>GetImmediateContext2_51;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint, win32.Graphics.Direct3D11.ID3D11DeviceContext2**, win32.System.Com.HRESULT>CreateDeferredContext2_52;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11Resource*, uint *, win32.Graphics.Direct3D11.D3D11_PACKED_MIP_DESC*, win32.Graphics.Direct3D11.D3D11_TILE_SHAPE*, uint *, uint, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_TILING*, void>GetResourceTiling_53;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Dxgi.DXGI_FORMAT, uint, uint, uint *, win32.System.Com.HRESULT>CheckMultisampleQualityLevels1_54;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC1*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture2D1**, win32.System.Com.HRESULT>CreateTexture2D1_55;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC1*, win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*, win32.Graphics.Direct3D11.ID3D11Texture3D1**, win32.System.Com.HRESULT>CreateTexture3D1_56;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC2*, win32.Graphics.Direct3D11.ID3D11RasterizerState2**, win32.System.Com.HRESULT>CreateRasterizerState2_57;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC1*, win32.Graphics.Direct3D11.ID3D11ShaderResourceView1**, win32.System.Com.HRESULT>CreateShaderResourceView1_58;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC1*, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView1**, win32.System.Com.HRESULT>CreateUnorderedAccessView1_59;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11Resource*, win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC1*, win32.Graphics.Direct3D11.ID3D11RenderTargetView1**, win32.System.Com.HRESULT>CreateRenderTargetView1_60;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.D3D11_QUERY_DESC1*, win32.Graphics.Direct3D11.ID3D11Query1**, win32.System.Com.HRESULT>CreateQuery1_61;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11DeviceContext3**, void>GetImmediateContext3_62;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint, win32.Graphics.Direct3D11.ID3D11DeviceContext3**, win32.System.Com.HRESULT>CreateDeferredContext3_63;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.Graphics.Direct3D11.ID3D11Resource*, uint, win32.Graphics.Direct3D11.D3D11_BOX*, void *, uint, uint, void>WriteToSubresource_64;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, void *, uint, uint, win32.Graphics.Direct3D11.ID3D11Resource*, uint, win32.Graphics.Direct3D11.D3D11_BOX*, void>ReadFromSubresource_65;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, win32.System.SystemServices.HANDLE, uint *, win32.System.Com.HRESULT>RegisterDeviceRemovedEvent_66;
                internal delegate *unmanaged[Stdcall]<ID3D11Device4*, uint, void>UnregisterDeviceRemoved_67;
            }

            private Vtbl*lpVtbl;
        }
    }
}