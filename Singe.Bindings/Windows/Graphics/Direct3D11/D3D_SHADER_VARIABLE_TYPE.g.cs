// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D11
    {
        /// <summary>Values that identify various data, texture, and buffer types that can be assigned to a shader variable.</summary>
        /// <remarks>
        /// <para>A call to the <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shader/nf-d3d11shader-id3d11shaderreflectiontype-getdesc">ID3D11ShaderReflectionType::GetDesc</a>method returns a <b>D3D_SHADER_VARIABLE_TYPE</b>value in the <b>Type</b> member of a <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_shader_type_desc">D3D11_SHADER_TYPE_DESC</a> structure.</para>
        /// <para>The types in a structured buffer describe the structure of the elements in the buffer. The layout of these types generally match their C++ struct counterparts. The following examples show structured buffers:</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcommon/ne-d3dcommon-d3d_shader_variable_type#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal enum D3D_SHADER_VARIABLE_TYPE
        {
            /// <summary>The variable is a void pointer.</summary>
            D3D_SVT_VOID = 0,
            /// <summary>The variable is a boolean.</summary>
            D3D_SVT_BOOL = 1,
            /// <summary>The variable is an integer.</summary>
            D3D_SVT_INT = 2,
            /// <summary>The variable is a floating-point number.</summary>
            D3D_SVT_FLOAT = 3,
            /// <summary>The variable is a string.</summary>
            D3D_SVT_STRING = 4,
            /// <summary>The variable is a texture.</summary>
            D3D_SVT_TEXTURE = 5,
            /// <summary>The variable is a 1D texture.</summary>
            D3D_SVT_TEXTURE1D = 6,
            /// <summary>The variable is a 2D texture.</summary>
            D3D_SVT_TEXTURE2D = 7,
            /// <summary>The variable is a 3D texture.</summary>
            D3D_SVT_TEXTURE3D = 8,
            /// <summary>The variable is a texture cube.</summary>
            D3D_SVT_TEXTURECUBE = 9,
            /// <summary>The variable is a sampler.</summary>
            D3D_SVT_SAMPLER = 10,
            /// <summary>The variable is a 1D sampler.</summary>
            D3D_SVT_SAMPLER1D = 11,
            /// <summary>The variable is a 2D sampler.</summary>
            D3D_SVT_SAMPLER2D = 12,
            /// <summary>The variable is a 3D sampler.</summary>
            D3D_SVT_SAMPLER3D = 13,
            /// <summary>The variable is a cube sampler.</summary>
            D3D_SVT_SAMPLERCUBE = 14,
            /// <summary>The variable is a pixel shader.</summary>
            D3D_SVT_PIXELSHADER = 15,
            /// <summary>The variable is a vertex shader.</summary>
            D3D_SVT_VERTEXSHADER = 16,
            /// <summary>The variable is a pixel fragment.</summary>
            D3D_SVT_PIXELFRAGMENT = 17,
            /// <summary>The variable is a vertex fragment.</summary>
            D3D_SVT_VERTEXFRAGMENT = 18,
            /// <summary>The variable is an unsigned integer.</summary>
            D3D_SVT_UINT = 19,
            /// <summary>The variable is an 8-bit unsigned integer.</summary>
            D3D_SVT_UINT8 = 20,
            /// <summary>The variable is a geometry shader.</summary>
            D3D_SVT_GEOMETRYSHADER = 21,
            /// <summary>The variable is a rasterizer-state object.</summary>
            D3D_SVT_RASTERIZER = 22,
            /// <summary>The variable is a depth-stencil-state object.</summary>
            D3D_SVT_DEPTHSTENCIL = 23,
            /// <summary>The variable is a blend-state object.</summary>
            D3D_SVT_BLEND = 24,
            /// <summary>The variable is a buffer.</summary>
            D3D_SVT_BUFFER = 25,
            /// <summary>The variable is a constant buffer.</summary>
            D3D_SVT_CBUFFER = 26,
            /// <summary>The variable is a texture buffer.</summary>
            D3D_SVT_TBUFFER = 27,
            /// <summary>The variable is a 1D-texture array.</summary>
            D3D_SVT_TEXTURE1DARRAY = 28,
            /// <summary>The variable is a 2D-texture array.</summary>
            D3D_SVT_TEXTURE2DARRAY = 29,
            /// <summary>The variable is a render-target view.</summary>
            D3D_SVT_RENDERTARGETVIEW = 30,
            /// <summary>The variable is a depth-stencil view.</summary>
            D3D_SVT_DEPTHSTENCILVIEW = 31,
            /// <summary>The variable is a 2D-multisampled texture.</summary>
            D3D_SVT_TEXTURE2DMS = 32,
            /// <summary>The variable is a 2D-multisampled-texture array.</summary>
            D3D_SVT_TEXTURE2DMSARRAY = 33,
            /// <summary>The variable is a texture-cube array.</summary>
            D3D_SVT_TEXTURECUBEARRAY = 34,
            /// <summary>The variable holds a compiled hull-shader binary.</summary>
            D3D_SVT_HULLSHADER = 35,
            /// <summary>The variable holds a compiled domain-shader binary.</summary>
            D3D_SVT_DOMAINSHADER = 36,
            /// <summary>The variable is an interface.</summary>
            D3D_SVT_INTERFACE_POINTER = 37,
            /// <summary>The variable holds a compiled compute-shader binary.</summary>
            D3D_SVT_COMPUTESHADER = 38,
            /// <summary>The variable is a double precision (64-bit) floating-point number.</summary>
            D3D_SVT_DOUBLE = 39,
            /// <summary>The variable is a 1D read-and-write texture.</summary>
            D3D_SVT_RWTEXTURE1D = 40,
            /// <summary>The variable is an array of 1D read-and-write textures.</summary>
            D3D_SVT_RWTEXTURE1DARRAY = 41,
            /// <summary>The variable is a 2D read-and-write texture.</summary>
            D3D_SVT_RWTEXTURE2D = 42,
            /// <summary>The variable is an array of 2D read-and-write textures.</summary>
            D3D_SVT_RWTEXTURE2DARRAY = 43,
            /// <summary>The variable is a 3D read-and-write texture.</summary>
            D3D_SVT_RWTEXTURE3D = 44,
            /// <summary>The variable is a read-and-write buffer.</summary>
            D3D_SVT_RWBUFFER = 45,
            /// <summary>The variable is a byte-address buffer.</summary>
            D3D_SVT_BYTEADDRESS_BUFFER = 46,
            /// <summary>The variable is a read-and-write byte-address buffer.</summary>
            D3D_SVT_RWBYTEADDRESS_BUFFER = 47,
            /// <summary>
            /// <para>The variable is a structured buffer.</para>
            /// <para>For more information about structured buffer, see the <b>Remarks</b> section.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcommon/ne-d3dcommon-d3d_shader_variable_type#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            D3D_SVT_STRUCTURED_BUFFER = 48,
            /// <summary>The variable is a read-and-write structured buffer.</summary>
            D3D_SVT_RWSTRUCTURED_BUFFER = 49,
            /// <summary>The variable is an append structured buffer.</summary>
            D3D_SVT_APPEND_STRUCTURED_BUFFER = 50,
            /// <summary>The variable is a consume structured buffer.</summary>
            D3D_SVT_CONSUME_STRUCTURED_BUFFER = 51,
            /// <summary>The variable is an 8-byte FLOAT.</summary>
            D3D_SVT_MIN8FLOAT = 52,
            /// <summary>The variable is a 10-byte FLOAT.</summary>
            D3D_SVT_MIN10FLOAT = 53,
            /// <summary>The variable is a 16-byte FLOAT.</summary>
            D3D_SVT_MIN16FLOAT = 54,
            /// <summary>The variable is a 12-byte INT.</summary>
            D3D_SVT_MIN12INT = 55,
            /// <summary>The variable is a 16-byte INT.</summary>
            D3D_SVT_MIN16INT = 56,
            /// <summary>The variable is a 16-byte INT.</summary>
            D3D_SVT_MIN16UINT = 57,
            /// <summary>The variable is a void pointer.</summary>
            D3D10_SVT_VOID = 0,
            /// <summary>The variable is a boolean.</summary>
            D3D10_SVT_BOOL = 1,
            /// <summary>The variable is an integer.</summary>
            D3D10_SVT_INT = 2,
            /// <summary>The variable is a floating-point number.</summary>
            D3D10_SVT_FLOAT = 3,
            /// <summary>The variable is a string.</summary>
            D3D10_SVT_STRING = 4,
            /// <summary>The variable is a texture.</summary>
            D3D10_SVT_TEXTURE = 5,
            /// <summary>The variable is a 1D texture.</summary>
            D3D10_SVT_TEXTURE1D = 6,
            /// <summary>The variable is a 2D texture.</summary>
            D3D10_SVT_TEXTURE2D = 7,
            /// <summary>The variable is a 3D texture.</summary>
            D3D10_SVT_TEXTURE3D = 8,
            /// <summary>The variable is a texture cube.</summary>
            D3D10_SVT_TEXTURECUBE = 9,
            /// <summary>The variable is a sampler.</summary>
            D3D10_SVT_SAMPLER = 10,
            /// <summary>The variable is a 1D sampler.</summary>
            D3D10_SVT_SAMPLER1D = 11,
            /// <summary>The variable is a 2D sampler.</summary>
            D3D10_SVT_SAMPLER2D = 12,
            /// <summary>The variable is a 3D sampler.</summary>
            D3D10_SVT_SAMPLER3D = 13,
            /// <summary>The variable is a cube sampler.</summary>
            D3D10_SVT_SAMPLERCUBE = 14,
            /// <summary>The variable is a pixel shader.</summary>
            D3D10_SVT_PIXELSHADER = 15,
            /// <summary>The variable is a vertex shader.</summary>
            D3D10_SVT_VERTEXSHADER = 16,
            /// <summary>The variable is a pixel fragment.</summary>
            D3D10_SVT_PIXELFRAGMENT = 17,
            /// <summary>The variable is a vertex fragment.</summary>
            D3D10_SVT_VERTEXFRAGMENT = 18,
            /// <summary>The variable is an unsigned integer.</summary>
            D3D10_SVT_UINT = 19,
            /// <summary>The variable is an 8-bit unsigned integer.</summary>
            D3D10_SVT_UINT8 = 20,
            /// <summary>The variable is a geometry shader.</summary>
            D3D10_SVT_GEOMETRYSHADER = 21,
            /// <summary>The variable is a rasterizer-state object.</summary>
            D3D10_SVT_RASTERIZER = 22,
            /// <summary>The variable is a depth-stencil-state object.</summary>
            D3D10_SVT_DEPTHSTENCIL = 23,
            /// <summary>The variable is a blend-state object.</summary>
            D3D10_SVT_BLEND = 24,
            /// <summary>The variable is a buffer.</summary>
            D3D10_SVT_BUFFER = 25,
            /// <summary>The variable is a constant buffer.</summary>
            D3D10_SVT_CBUFFER = 26,
            /// <summary>The variable is a texture buffer.</summary>
            D3D10_SVT_TBUFFER = 27,
            /// <summary>The variable is a 1D-texture array.</summary>
            D3D10_SVT_TEXTURE1DARRAY = 28,
            /// <summary>The variable is a 2D-texture array.</summary>
            D3D10_SVT_TEXTURE2DARRAY = 29,
            /// <summary>The variable is a render-target view.</summary>
            D3D10_SVT_RENDERTARGETVIEW = 30,
            /// <summary>The variable is a depth-stencil view.</summary>
            D3D10_SVT_DEPTHSTENCILVIEW = 31,
            /// <summary>The variable is a 2D-multisampled texture.</summary>
            D3D10_SVT_TEXTURE2DMS = 32,
            /// <summary>The variable is a 2D-multisampled-texture array.</summary>
            D3D10_SVT_TEXTURE2DMSARRAY = 33,
            /// <summary>The variable is a texture-cube array.</summary>
            D3D10_SVT_TEXTURECUBEARRAY = 34,
            /// <summary>The variable holds a compiled hull-shader binary.</summary>
            D3D11_SVT_HULLSHADER = 35,
            /// <summary>The variable holds a compiled domain-shader binary.</summary>
            D3D11_SVT_DOMAINSHADER = 36,
            /// <summary>The variable is an interface.</summary>
            D3D11_SVT_INTERFACE_POINTER = 37,
            /// <summary>The variable holds a compiled compute-shader binary.</summary>
            D3D11_SVT_COMPUTESHADER = 38,
            /// <summary>The variable is a double precision (64-bit) floating-point number.</summary>
            D3D11_SVT_DOUBLE = 39,
            /// <summary>The variable is a 1D read-and-write texture.</summary>
            D3D11_SVT_RWTEXTURE1D = 40,
            /// <summary>The variable is an array of 1D read-and-write textures.</summary>
            D3D11_SVT_RWTEXTURE1DARRAY = 41,
            /// <summary>The variable is a 2D read-and-write texture.</summary>
            D3D11_SVT_RWTEXTURE2D = 42,
            /// <summary>The variable is an array of 2D read-and-write textures.</summary>
            D3D11_SVT_RWTEXTURE2DARRAY = 43,
            /// <summary>The variable is a 3D read-and-write texture.</summary>
            D3D11_SVT_RWTEXTURE3D = 44,
            /// <summary>The variable is a read-and-write buffer.</summary>
            D3D11_SVT_RWBUFFER = 45,
            /// <summary>The variable is a byte-address buffer.</summary>
            D3D11_SVT_BYTEADDRESS_BUFFER = 46,
            /// <summary>The variable is a read and write byte-address buffer.</summary>
            D3D11_SVT_RWBYTEADDRESS_BUFFER = 47,
            /// <summary>The variable is a structured buffer.</summary>
            D3D11_SVT_STRUCTURED_BUFFER = 48,
            /// <summary>The variable is a read-and-write structured buffer.</summary>
            D3D11_SVT_RWSTRUCTURED_BUFFER = 49,
            /// <summary>The variable is an append structured buffer.</summary>
            D3D11_SVT_APPEND_STRUCTURED_BUFFER = 50,
            /// <summary>The variable is a consume structured buffer.</summary>
            D3D11_SVT_CONSUME_STRUCTURED_BUFFER = 51,
            /// <summary>This value is not used by a programmer; it exists to force the enumeration to compile to 32 bits.</summary>
            D3D_SVT_FORCE_DWORD = 2147483647,
        }
    }
}