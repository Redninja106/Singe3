// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D11
    {
        [Guid("5089B68F-E71D-4D38-BE8E-F363B95A9405")]
        internal unsafe struct ID3DX11Scan
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID3DX11Scan*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID3DX11Scan*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID3DX11Scan*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <summary>Sets which direction to perform scans in.</summary>
            /// <param name = "Direction">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_direction">D3DX11_SCAN_DIRECTION</a></b></para>
            /// <para>Direction to perform scans in.  See <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_direction">D3DX11_SCAN_DIRECTION</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-setscandirection#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the return codes described in the topic <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-setscandirection">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT SetScanDirection(win32.Graphics.Direct3D11.D3DX11_SCAN_DIRECTION Direction)
            {
                fixed (ID3DX11Scan*pThis = &this)
                    return lpVtbl->SetScanDirection_4(pThis, Direction);
            }

            /// <summary>Performs an unsegmented scan of a sequence.</summary>
            /// <param name = "ElementType">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_data_type">D3DX11_SCAN_DATA_TYPE</a></b></para>
            /// <para>The type of element in the sequence.  See <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_data_type">D3DX11_SCAN_DATA_TYPE</a> for more information.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-scan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "OpCode">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_opcode">D3DX11_SCAN_OPCODE</a></b></para>
            /// <para>The binary operation to perform.  See <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_opcode">D3DX11_SCAN_OPCODE</a> for more information.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-scan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "ElementScanSize">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Size of scan in elements.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-scan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pSrc">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b></para>
            /// <para>Input sequence on the device.  Set <i>pSrc</i> and <i>pDst</i> to the same value for in-place scans.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-scan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pDst">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b></para>
            /// <para>Output sequence on the device.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-scan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the return codes described in the topic <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-scan">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Scan(win32.Graphics.Direct3D11.D3DX11_SCAN_DATA_TYPE ElementType, win32.Graphics.Direct3D11.D3DX11_SCAN_OPCODE OpCode, uint ElementScanSize, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*pSrc, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*pDst)
            {
                fixed (ID3DX11Scan*pThis = &this)
                    return lpVtbl->Scan_5(pThis, ElementType, OpCode, ElementScanSize, pSrc, pDst);
            }

            /// <summary>Performs a multiscan of a sequence.</summary>
            /// <param name = "ElementType">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_data_type">D3DX11_SCAN_DATA_TYPE</a></b></para>
            /// <para>The type of element in the sequence.  See <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_data_type">D3DX11_SCAN_DATA_TYPE</a> for more information.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-multiscan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "OpCode">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_opcode">D3DX11_SCAN_OPCODE</a></b></para>
            /// <para>The binary operation to perform.  See <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcsx/ne-d3dcsx-d3dx11_scan_opcode">D3DX11_SCAN_OPCODE</a> for more information.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-multiscan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "ElementScanSize">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Size of scan in elements.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-multiscan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "ElementScanPitch">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Pitch of the next scan in elements.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-multiscan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "ScanCount">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Number of scans in the multiscan.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-multiscan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pSrc">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b></para>
            /// <para>Input sequence on the device.  Set <i>pSrc</i> and <i>pDst</i> to the same value for in-place scans.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-multiscan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pDst">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b></para>
            /// <para>Output sequence on the device.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-multiscan#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the return codes described in the topic <a href = "/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3dcsx/nf-d3dcsx-id3dx11scan-multiscan">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Multiscan(win32.Graphics.Direct3D11.D3DX11_SCAN_DATA_TYPE ElementType, win32.Graphics.Direct3D11.D3DX11_SCAN_OPCODE OpCode, uint ElementScanSize, uint ElementScanPitch, uint ScanCount, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*pSrc, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*pDst)
            {
                fixed (ID3DX11Scan*pThis = &this)
                    return lpVtbl->Multiscan_6(pThis, ElementType, OpCode, ElementScanSize, ElementScanPitch, ScanCount, pSrc, pDst);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID3DX11Scan*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID3DX11Scan*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID3DX11Scan*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID3DX11Scan*, win32.Graphics.Direct3D11.D3DX11_SCAN_DIRECTION, win32.System.Com.HRESULT>SetScanDirection_4;
                internal delegate *unmanaged[Stdcall]<ID3DX11Scan*, win32.Graphics.Direct3D11.D3DX11_SCAN_DATA_TYPE, win32.Graphics.Direct3D11.D3DX11_SCAN_OPCODE, uint, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*, win32.System.Com.HRESULT>Scan_5;
                internal delegate *unmanaged[Stdcall]<ID3DX11Scan*, win32.Graphics.Direct3D11.D3DX11_SCAN_DATA_TYPE, win32.Graphics.Direct3D11.D3DX11_SCAN_OPCODE, uint, uint, uint, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*, win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*, win32.System.Com.HRESULT>Multiscan_6;
            }

            private Vtbl*lpVtbl;
        }
    }
}