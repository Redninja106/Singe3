// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Specifies multiple wait flags for multiple fences.</summary>
        /// <remarks>
        /// <para>This enum is used by the <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device1-seteventonmultiplefencecompletion">SetEventOnMultipleFenceCompletion</a> method.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_multiple_fence_wait_flags#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        [Flags]
        internal enum D3D12_MULTIPLE_FENCE_WAIT_FLAGS : uint
        {
            /// <summary>No flags are being passed. This means to use the default behavior, which is to wait for all fences before signaling the event.</summary>
            D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE = 0x00000000,
            /// <summary>Modifies behavior to indicate that the event should be signaled after any one of the fence values has been reached by its corresponding fence.</summary>
            D3D12_MULTIPLE_FENCE_WAIT_FLAG_ANY = 0x00000001,
            /// <summary>An alias for **D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE**, meaning to use the default behavior and wait for all fences.</summary>
            D3D12_MULTIPLE_FENCE_WAIT_FLAG_ALL = 0x00000000,
        }
    }
}