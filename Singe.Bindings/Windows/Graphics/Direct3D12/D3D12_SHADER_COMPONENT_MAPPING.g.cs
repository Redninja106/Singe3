// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Specifies how memory gets routed by a shader resource view (SRV).</summary>
        /// <remarks>
        /// <para>This enum allows the SRV to select how memory gets routed to the four return components in a shader after a memory fetch. The options for each shader component [0..3] (corresponding to RGBA) are: component 0..3 from the SRV fetch result or force 0 or force 1.</para>
        /// <para>The default 1:1 mapping can be indicated by specifying **D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING**, otherwise an arbitrary mapping can be specified using the macro **D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING**.</para>
        /// <para>See below.</para>
        /// <para>Note the following defines.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_shader_component_mapping#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal enum D3D12_SHADER_COMPONENT_MAPPING
        {
            /// <summary>Indicates return component 0 (red).</summary>
            D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0 = 0,
            /// <summary>Indicates return component 1 (green).</summary>
            D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1 = 1,
            /// <summary>Indicates return component 2 (blue).</summary>
            D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2 = 2,
            /// <summary>Indicates return component 3 (alpha).</summary>
            D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3 = 3,
            /// <summary>Indicates forcing the resulting value to 0.</summary>
            D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0 = 4,
            /// <summary>Indicates forcing the resulting value 1. The value of forcing 1 is either 0x1 or 1.0f depending on the format type for that component in the source format.</summary>
            D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1 = 5,
        }
    }
}