// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Describes a shader.</summary>
        /// <remarks>
        /// <para>A shader is written in HLSL and compiled into an intermediate language by the HLSL compiler. The shader description returns information about the compiled shader. To get a shader description, call <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12shader/nf-d3d12shader-id3d12shaderreflection-getdesc">ID3D12ShaderReflection::GetDesc</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12shader/ns-d3d12shader-d3d12_shader_desc#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct D3D12_SHADER_DESC
        {
            /// <summary>
            /// <para>The Shader version, as an encoded UINT that corresponds to a shader model, such as "ps_5_0". <b>Version</b> describes the program type, a major version number, and a minor version number. The program type is a <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12shader/ne-d3d12shader-d3d12_shader_version_type">D3D12_SHADER_VERSION_TYPE</a> enumeration constant. <b>Version</b> is decoded in the following way:</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12shader/ns-d3d12shader-d3d12_shader_desc#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint Version;
            /// <summary>The name of the originator of the shader.</summary>
            internal win32.System.SystemServices.PCSTR Creator;
            /// <summary>Shader compilation/parse flags.</summary>
            internal uint Flags;
            /// <summary>The number of shader-constant buffers.</summary>
            internal uint ConstantBuffers;
            /// <summary>The number of resource (textures and buffers) bound to a shader.</summary>
            internal uint BoundResources;
            /// <summary>The number of parameters in the input signature.</summary>
            internal uint InputParameters;
            /// <summary>The number of parameters in the output signature.</summary>
            internal uint OutputParameters;
            /// <summary>The number of intermediate-language instructions in the compiled shader.</summary>
            internal uint InstructionCount;
            /// <summary>The number of temporary registers in the compiled shader.</summary>
            internal uint TempRegisterCount;
            /// <summary>Number of temporary arrays used.</summary>
            internal uint TempArrayCount;
            /// <summary>Number of constant defines.</summary>
            internal uint DefCount;
            /// <summary>Number of declarations (input + output).</summary>
            internal uint DclCount;
            /// <summary>Number of non-categorized texture instructions.</summary>
            internal uint TextureNormalInstructions;
            /// <summary>Number of texture load instructions</summary>
            internal uint TextureLoadInstructions;
            /// <summary>Number of texture comparison instructions</summary>
            internal uint TextureCompInstructions;
            /// <summary>Number of texture bias instructions</summary>
            internal uint TextureBiasInstructions;
            /// <summary>Number of texture gradient instructions.</summary>
            internal uint TextureGradientInstructions;
            /// <summary>Number of floating point arithmetic instructions used.</summary>
            internal uint FloatInstructionCount;
            /// <summary>Number of signed integer arithmetic instructions used.</summary>
            internal uint IntInstructionCount;
            /// <summary>Number of unsigned integer arithmetic instructions used.</summary>
            internal uint UintInstructionCount;
            /// <summary>Number of static flow control instructions used.</summary>
            internal uint StaticFlowControlCount;
            /// <summary>Number of dynamic flow control instructions used.</summary>
            internal uint DynamicFlowControlCount;
            /// <summary>Number of macro instructions used.</summary>
            internal uint MacroInstructionCount;
            /// <summary>Number of array instructions used.</summary>
            internal uint ArrayInstructionCount;
            /// <summary>Number of cut instructions used.</summary>
            internal uint CutInstructionCount;
            /// <summary>Number of emit instructions used.</summary>
            internal uint EmitInstructionCount;
            /// <summary>The <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_primitive_topology">D3D_PRIMITIVE_TOPOLOGY</a>-typed value that represents the geometry shader output topology.</summary>
            internal win32.Graphics.Direct3D11.D3D_PRIMITIVE_TOPOLOGY GSOutputTopology;
            /// <summary>Geometry shader maximum output vertex count.</summary>
            internal uint GSMaxOutputVertexCount;
            /// <summary>The <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_primitive">D3D_PRIMITIVE</a>-typed value that represents the input primitive for a  geometry shader or hull shader.</summary>
            internal win32.Graphics.Direct3D11.D3D_PRIMITIVE InputPrimitive;
            /// <summary>Number of parameters in the patch-constant signature.</summary>
            internal uint PatchConstantParameters;
            /// <summary>Number of geometry shader instances.</summary>
            internal uint cGSInstanceCount;
            /// <summary>Number of control points in the hull shader and domain shader.</summary>
            internal uint cControlPoints;
            /// <summary>The <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_tessellator_output_primitive">D3D_TESSELLATOR_OUTPUT_PRIMITIVE</a>-typed value that represents the tessellator output-primitive type.</summary>
            internal win32.Graphics.Direct3D11.D3D_TESSELLATOR_OUTPUT_PRIMITIVE HSOutputPrimitive;
            /// <summary>The <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_tessellator_partitioning">D3D_TESSELLATOR_PARTITIONING</a>-typed value that represents the tessellator partitioning mode.</summary>
            internal win32.Graphics.Direct3D11.D3D_TESSELLATOR_PARTITIONING HSPartitioning;
            /// <summary>The <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_tessellator_domain">D3D_TESSELLATOR_DOMAIN</a>-typed value that represents the tessellator domain.</summary>
            internal win32.Graphics.Direct3D11.D3D_TESSELLATOR_DOMAIN TessellatorDomain;
            /// <summary>Number of barrier instructions in a compute shader.</summary>
            internal uint cBarrierInstructions;
            /// <summary>Number of interlocked instructions in a compute shader.</summary>
            internal uint cInterlockedInstructions;
            /// <summary>Number of texture writes in a compute shader.</summary>
            internal uint cTextureStoreInstructions;
        }
    }
}