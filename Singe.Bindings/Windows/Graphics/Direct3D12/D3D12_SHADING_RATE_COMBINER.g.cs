// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Defines constants that specify a shading rate combiner (for variable-rate shading, or VRS).</summary>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_shading_rate_combiner#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal enum D3D12_SHADING_RATE_COMBINER
        {
            /// <summary>Specifies the combiner `C.xy = A.xy`, for combiner (C) and inputs (A and B).</summary>
            D3D12_SHADING_RATE_COMBINER_PASSTHROUGH = 0,
            /// <summary>Specifies the combiner `C.xy = B.xy`, for combiner (C) and inputs (A and B).</summary>
            D3D12_SHADING_RATE_COMBINER_OVERRIDE = 1,
            /// <summary>Specifies the combiner `C.xy = max(A.xy, B.xy)`, for combiner (C) and inputs (A and B).</summary>
            D3D12_SHADING_RATE_COMBINER_MIN = 2,
            /// <summary>Specifies the combiner `C.xy = min(A.xy, B.xy)`, for combiner (C) and inputs (A and B).</summary>
            D3D12_SHADING_RATE_COMBINER_MAX = 3,
            /// <summary>Specifies the combiner C.xy = min(maxRate, A.xy + B.xy)`, for combiner (C) and inputs (A and B).</summary>
            D3D12_SHADING_RATE_COMBINER_SUM = 4,
        }
    }
}