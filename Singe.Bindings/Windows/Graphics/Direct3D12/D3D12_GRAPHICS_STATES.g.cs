// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Defines flags that specify states related to a graphics command list. Values can be bitwise OR'd together.</summary>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_graphics_states">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [Flags]
        internal enum D3D12_GRAPHICS_STATES : uint
        {
            /// <summary>Specifies no state.</summary>
            D3D12_GRAPHICS_STATE_NONE = 0x00000000,
            /// <summary>Specifies the state of the vertex buffer bindings on the input assembler stage.</summary>
            D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS = 0x00000001,
            /// <summary>Specifies the state of the index buffer binding on the input assembler stage.</summary>
            D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER = 0x00000002,
            /// <summary>Specifies the state of the primitive topology value set on the input assembler stage.</summary>
            D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY = 0x00000004,
            /// <summary>Specifies the state of the currently bound descriptor heaps.</summary>
            D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP = 0x00000008,
            /// <summary>Specifies the state of the currently set graphics root signature.</summary>
            D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE = 0x00000010,
            /// <summary>Specifies the state of the currently set compute root signature.</summary>
            D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE = 0x00000020,
            /// <summary>Specifies the state of the viewports bound to the rasterizer stage.</summary>
            D3D12_GRAPHICS_STATE_RS_VIEWPORTS = 0x00000040,
            /// <summary>Specifies the state of the scissor rectangles bound to the rasterizer stage.</summary>
            D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS = 0x00000080,
            /// <summary>Specifies the predicate state.</summary>
            D3D12_GRAPHICS_STATE_PREDICATION = 0x00000100,
            /// <summary>Specifies the state of the render targets bound to the output merger stage.</summary>
            D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS = 0x00000200,
            /// <summary>Specifies the state of the reference value for depth stencil tests set on the output merger stage.</summary>
            D3D12_GRAPHICS_STATE_OM_STENCIL_REF = 0x00000400,
            /// <summary>Specifies the state of the blend factor set on the output merger stage.</summary>
            D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR = 0x00000800,
            /// <summary>Specifies the state of the pipeline state object.</summary>
            D3D12_GRAPHICS_STATE_PIPELINE_STATE = 0x00001000,
            /// <summary>Specifies the state of the buffer views bound to the stream output stage.</summary>
            D3D12_GRAPHICS_STATE_SO_TARGETS = 0x00002000,
            /// <summary>Specifies the state of the depth bounds set on the output merger stage.</summary>
            D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS = 0x00004000,
            /// <summary>Specifies the state of the sample positions.</summary>
            D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS = 0x00008000,
            /// <summary>Specifies the state of the view instances mask.</summary>
            D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK = 0x00010000,
        }
    }
}