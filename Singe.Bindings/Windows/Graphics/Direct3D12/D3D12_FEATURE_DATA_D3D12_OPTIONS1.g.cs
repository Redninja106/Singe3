// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Describes the level of support for HLSL 6.0 wave operations.</summary>
        /// <remarks>
        /// <para>A "lane" is  single thread of execution. The shader models before version 6.0 expose only one of these at the language level, leaving expansion to parallel SIMD processing entirely up to the implementation.</para>
        /// <para>A "wave" is  set of lanes (threads) executed simultaneously in the processor. No explicit barriers are required to guarantee that they execute in parallel. Similar concepts include "warp" and "wavefront".</para>
        /// <para>This structure is used with the D3D12_FEATURE_D3D12_OPTIONS1 member of  <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_feature">D3D12_FEATURE</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_feature_data_d3d12_options1#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct D3D12_FEATURE_DATA_D3D12_OPTIONS1
        {
            /// <summary>True if the driver supports HLSL 6.0 wave operations.</summary>
            internal win32.System.SystemServices.BOOL WaveOps;
            /// <summary>Specifies the baseline number of lanes in the SIMD wave that this implementation can support. This term is sometimes known as "wavefront size" or "warp width". Currently apps should rely only on this minimum value for sizing workloads.</summary>
            internal uint WaveLaneCountMin;
            /// <summary>Specifies the maximum number of lanes in the SIMD wave that this implementation can support. This capability is reserved for future expansion, and is not expected to be used by current applications.</summary>
            internal uint WaveLaneCountMax;
            /// <summary>Specifies the total number of SIMD lanes on the hardware.</summary>
            internal uint TotalLaneCount;
            /// <summary>Indicates transitions are possible  in and out of the CBV, and indirect argument states, on compute command lists. If <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-checkfeaturesupport">CheckFeatureSupport</a> succeeds this value will always be true.</summary>
            internal win32.System.SystemServices.BOOL ExpandedComputeResourceStates;
            /// <summary>Indicates that 64bit integer operations are supported.</summary>
            internal win32.System.SystemServices.BOOL Int64ShaderOps;
        }
    }
}