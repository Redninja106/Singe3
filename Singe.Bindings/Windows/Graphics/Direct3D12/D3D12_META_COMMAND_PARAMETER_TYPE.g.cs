// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Defines constants that specify the data type of a parameter to a meta command.</summary>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_meta_command_parameter_type">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        internal enum D3D12_META_COMMAND_PARAMETER_TYPE
        {
            /// <summary>Specifies that the parameter is of type <a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>.</summary>
            D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT = 0,
            /// <summary>Specifies that the parameter is of type <a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT64</a>.</summary>
            D3D12_META_COMMAND_PARAMETER_TYPE_UINT64 = 1,
            /// <summary>Specifies that the parameter is a GPU virtual address.</summary>
            D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS = 2,
            /// <summary>Specifies that the parameter is a CPU descriptor handle to a heap containing either constant buffer views, shader resource views, or unordered access views.</summary>
            D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV = 3,
            /// <summary>Specifies that the parameter is a GPU descriptor handle to a heap containing either constant buffer views, shader resource views, or unordered access views.</summary>
            D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV = 4,
        }
    }
}