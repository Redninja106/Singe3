// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Specifies the nature of the render pass; for example, whether it is a suspending or a resuming render pass.</summary>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_render_pass_flags">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [Flags]
        internal enum D3D12_RENDER_PASS_FLAGS : uint
        {
            /// <summary>Indicates that the render pass has no special requirements.</summary>
            D3D12_RENDER_PASS_FLAG_NONE = 0x00000000,
            /// <summary>Indicates that writes to unordered access view(s) should be allowed during the render pass.</summary>
            D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES = 0x00000001,
            /// <summary>Indicates that this is a suspending render pass.</summary>
            D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS = 0x00000002,
            /// <summary>Indicates that this is a resuming render pass.</summary>
            D3D12_RENDER_PASS_FLAG_RESUMING_PASS = 0x00000004,
        }
    }
}