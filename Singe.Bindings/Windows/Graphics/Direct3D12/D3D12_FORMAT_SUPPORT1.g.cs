// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Specifies resources that are supported for a provided format.</summary>
        /// <remarks>
        /// <para>This enum is used by the <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_feature_data_format_support">D3D12_FEATURE_DATA_FORMAT_SUPPORT</a> structure.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_format_support1#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        [Flags]
        internal enum D3D12_FORMAT_SUPPORT1 : uint
        {
            /// <summary>No resources are supported.</summary>
            D3D12_FORMAT_SUPPORT1_NONE = 0x00000000,
            /// <summary>Buffer resources supported.</summary>
            D3D12_FORMAT_SUPPORT1_BUFFER = 0x00000001,
            /// <summary>Vertex buffers supported.</summary>
            D3D12_FORMAT_SUPPORT1_IA_VERTEX_BUFFER = 0x00000002,
            /// <summary>Index buffers supported.</summary>
            D3D12_FORMAT_SUPPORT1_IA_INDEX_BUFFER = 0x00000004,
            /// <summary>Streaming output buffers supported.</summary>
            D3D12_FORMAT_SUPPORT1_SO_BUFFER = 0x00000008,
            /// <summary>1D texture resources supported.</summary>
            D3D12_FORMAT_SUPPORT1_TEXTURE1D = 0x00000010,
            /// <summary>2D texture resources supported.</summary>
            D3D12_FORMAT_SUPPORT1_TEXTURE2D = 0x00000020,
            /// <summary>3D texture resources supported.</summary>
            D3D12_FORMAT_SUPPORT1_TEXTURE3D = 0x00000040,
            /// <summary>Cube texture resources supported.</summary>
            D3D12_FORMAT_SUPPORT1_TEXTURECUBE = 0x00000080,
            /// <summary>The HLSL <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-load">Load</a> function for texture objects is supported.</summary>
            D3D12_FORMAT_SUPPORT1_SHADER_LOAD = 0x00000100,
            /// <summary>
            /// <para>The HLSL <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-sample">Sample</a> function for texture objects is supported.</para>
            /// <para><div class = "alert"><b>Note</b>  If the device supports the format as a resource (1D, 2D, 3D, or cube map) but doesn't support this option, the resource can still use the <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-sample">Sample</a> method but must use only the point filtering sampler state to perform the sample.</div> <div> </div></para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_format_support1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE = 0x00000200,
            /// <summary>
            /// <para>The HLSL <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-samplecmp">SampleCmp</a> and <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-samplecmplevelzero">SampleCmpLevelZero</a> functions for texture objects are supported.</para>
            /// <para><div class = "alert"><b>Note</b>  Windows 8 and later might provide limited support for these functions on Direct3D <a href = "https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9_1, 9_2, and 9_3. For more info, see <a href = "https://docs.microsoft.com/previous-versions/windows/apps/jj262110(v=win.10)">Implementing shadow buffers for Direct3D feature level 9</a>. </div> <div> </div></para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_format_support1#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_COMPARISON = 0x00000400,
            /// <summary>Reserved.</summary>
            D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_MONO_TEXT = 0x00000800,
            /// <summary>Mipmaps are supported.</summary>
            D3D12_FORMAT_SUPPORT1_MIP = 0x00001000,
            /// <summary>Render targets are supported.</summary>
            D3D12_FORMAT_SUPPORT1_RENDER_TARGET = 0x00004000,
            /// <summary>Blend operations supported.</summary>
            D3D12_FORMAT_SUPPORT1_BLENDABLE = 0x00008000,
            /// <summary>Depth stencils supported.</summary>
            D3D12_FORMAT_SUPPORT1_DEPTH_STENCIL = 0x00010000,
            /// <summary>Multisample antialiasing (MSAA) resolve operations are supported. For more info, see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-resolvesubresource">ID3D12GraphicsCommandList::ResolveSubresource</a>.</summary>
            D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RESOLVE = 0x00040000,
            /// <summary>Format can be displayed on screen.</summary>
            D3D12_FORMAT_SUPPORT1_DISPLAY = 0x00080000,
            /// <summary>Format can't be cast to another format.</summary>
            D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT = 0x00100000,
            /// <summary>Format can be used as a multi-sampled render target.</summary>
            D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET = 0x00200000,
            /// <summary>Format can be used as a multi-sampled texture and read into a shader with the HLSL <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-load">Load</a> function.</summary>
            D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD = 0x00400000,
            /// <summary>Format can be used with the HLSL gather function. This value is available in DirectX 10.1 or higher.</summary>
            D3D12_FORMAT_SUPPORT1_SHADER_GATHER = 0x00800000,
            /// <summary>Format supports casting when the resource is a back buffer.</summary>
            D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST = 0x01000000,
            /// <summary>Format can be used for an unordered access view.</summary>
            D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW = 0x02000000,
            /// <summary>Format can be used with the HLSL gather with comparison function.</summary>
            D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON = 0x04000000,
            /// <summary>Format can be used with the decoder output.</summary>
            D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT = 0x08000000,
            /// <summary>Format can be used with the video processor output.</summary>
            D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT = 0x10000000,
            /// <summary>Format can be used with the video processor input.</summary>
            D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT = 0x20000000,
            /// <summary>Format can be used with the video encoder.</summary>
            D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER = 0x40000000,
        }
    }
}