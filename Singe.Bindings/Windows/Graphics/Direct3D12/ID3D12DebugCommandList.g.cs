// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        [Guid("09E0BF36-54AC-484F-8847-4BAEEAB6053F")]
        internal unsafe struct ID3D12DebugCommandList
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID3D12DebugCommandList*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID3D12DebugCommandList*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID3D12DebugCommandList*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <summary>Checks whether a resource, or subresource, is in a specified state, or not.</summary>
            /// <param name = "pResource">
            /// <para>Type: <b>ID3D12Resource*</b></para>
            /// <para>Specifies the  <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> to check.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debugcommandlist-assertresourcestate#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Subresource">
            /// <para>Type: <b>UINT</b></para>
            /// <para>The index of the subresource to check. This can be set to an index, or D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debugcommandlist-assertresourcestate#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "State">
            /// <para>Type: <b>UINT</b></para>
            /// <para>Specifies the state to check for. This can be one or more D3D12_RESOURCE_STATES flags Or'ed together.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debugcommandlist-assertresourcestate#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>BOOL</b></para>
            /// <para>This method returns true if the resource or subresource is in the specified state, false otherwise.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debugcommandlist-assertresourcestate">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.SystemServices.BOOL AssertResourceState(win32.Graphics.Direct3D12.ID3D12Resource*pResource, uint Subresource, uint State)
            {
                fixed (ID3D12DebugCommandList*pThis = &this)
                    return lpVtbl->AssertResourceState_4(pThis, pResource, Subresource, State);
            }

            /// <summary>Turns the debug features for a command list on or off.</summary>
            /// <param name = "Mask">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d12sdklayers/ne-d3d12sdklayers-d3d12_debug_feature">D3D12_DEBUG_FEATURE</a></b></para>
            /// <para>A combination of feature-mask flags that are combined by using a bitwise OR operation. If a flag is present, that feature will be set to on, otherwise the feature will be set to off.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debugcommandlist-setfeaturemask#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns one of the <a href = "/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debugcommandlist-setfeaturemask">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT SetFeatureMask(win32.Graphics.Direct3D12.D3D12_DEBUG_FEATURE Mask)
            {
                fixed (ID3D12DebugCommandList*pThis = &this)
                    return lpVtbl->SetFeatureMask_5(pThis, Mask);
            }

            /// <summary>Returns the debug feature flags that have been set on a command list.</summary>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/desktop/api/d3d12sdklayers/ne-d3d12sdklayers-d3d12_debug_feature">D3D12_DEBUG_FEATURE</a></b></para>
            /// <para>A bit mask containing the set debug features.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debugcommandlist-getfeaturemask">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.Graphics.Direct3D12.D3D12_DEBUG_FEATURE GetFeatureMask()
            {
                fixed (ID3D12DebugCommandList*pThis = &this)
                    return lpVtbl->GetFeatureMask_6(pThis);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID3D12DebugCommandList*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID3D12DebugCommandList*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID3D12DebugCommandList*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID3D12DebugCommandList*, win32.Graphics.Direct3D12.ID3D12Resource*, uint, uint, win32.System.SystemServices.BOOL>AssertResourceState_4;
                internal delegate *unmanaged[Stdcall]<ID3D12DebugCommandList*, win32.Graphics.Direct3D12.D3D12_DEBUG_FEATURE, win32.System.Com.HRESULT>SetFeatureMask_5;
                internal delegate *unmanaged[Stdcall]<ID3D12DebugCommandList*, win32.Graphics.Direct3D12.D3D12_DEBUG_FEATURE>GetFeatureMask_6;
            }

            private Vtbl*lpVtbl;
        }
    }
}