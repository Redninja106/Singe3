// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D12
    {
        /// <summary>Flags for a raytracing acceleration structure instance. These flags can be used to override D3D12_RAYTRACING_GEOMETRY_FLAGS for individual instances.</summary>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_instance_flags">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [Flags]
        internal enum D3D12_RAYTRACING_INSTANCE_FLAGS : uint
        {
            /// <summary>No options specified.</summary>
            D3D12_RAYTRACING_INSTANCE_FLAG_NONE = 0x00000000,
            /// <summary>Disables front/back face culling for this instance.  The Ray flags <b>RAY_FLAG_CULL_BACK_FACING_TRIANGLES</b> and <b>RAY_FLAG_CULL_FRONT_FACING_TRIANGLES</b> will have no effect on this instance.</summary>
            D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_CULL_DISABLE = 0x00000001,
            /// <summary>
            /// <para>This flag reverses front and back facings, which is useful if the application’s natural winding order differs from the default. By default, a triangle is front facing if its vertices appear clockwise from the ray origin and back facing if its vertices appear counter-clockwise from the ray origin, in object space in a left-handed coordinate system.</para>
            /// <para>Since these winding direction rules are defined in object space, they are unaffected by instance transforms.  For example, an instance transform matrix with negative determinant (e.g. mirroring some geometry) does not change the facing of the triangles within the instance.  Per-geometry transforms defined in <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_geometry_triangles_desc">D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC</a> ,  by contrast,  get combined with the associated vertex data in object space, so a negative determinant matrix there does flip triangle winding.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_instance_flags#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_FRONT_COUNTERCLOCKWISE = 0x00000002,
            /// <summary>
            /// <para>The instance will act as if   <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_raytracing_geometry_flags">D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE</a> had been specified for all the geometries in the bottom-level acceleration structure referenced by the instance.  Note that this behavior can be overridden by the ray flag <b>RAY_FLAG_FORCE_NON_OPAQUE</b>.</para>
            /// <para>This flag is mutually exclusive to the <b>D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE</b> flag.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_instance_flags#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE = 0x00000004,
            /// <summary>
            /// <para>The instance will act as if <a href = "https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_raytracing_geometry_flags">D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE</a> had not been specified for any of the geometries in the bottom-level acceleration structure referenced by the instance. Note that this behavior can be overridden by the ray flag <b>RAY_FLAG_FORCE_OPAQUE</b>.</para>
            /// <para>This flag is mutually exclusive to the <b>D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE</b> flag.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_instance_flags#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE = 0x00000008,
        }
    }
}