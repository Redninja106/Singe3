// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D10
    {
        [Guid("62B98C44-1F82-4C67-BCD0-72CF8F217E81")]
        internal unsafe struct ID3D10EffectVectorVariable
        {
            internal win32.System.SystemServices.BOOL IsValid()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->IsValid_1(pThis);
            }

            internal new unsafe win32.Graphics.Direct3D10.ID3D10EffectType*GetType()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetType_2(pThis);
            }

            /// <inheritdoc cref = "GetDesc(win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC*)"/>
            internal unsafe win32.System.Com.HRESULT GetDesc(out win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC pDesc)
            {
                fixed (win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC*pDescLocal = &pDesc)
                {
                    win32.System.Com.HRESULT __result = this.GetDesc(pDescLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetDesc(win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC*pDesc)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetDesc_3(pThis, pDesc);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetAnnotationByIndex(uint Index)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetAnnotationByIndex_4(pThis, Index);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetAnnotationByName(win32.System.SystemServices.PCSTR Name)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetAnnotationByName_5(pThis, Name);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetMemberByIndex(uint Index)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetMemberByIndex_6(pThis, Index);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetMemberByName(win32.System.SystemServices.PCSTR Name)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetMemberByName_7(pThis, Name);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetMemberBySemantic(win32.System.SystemServices.PCSTR Semantic)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetMemberBySemantic_8(pThis, Semantic);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetElement(uint Index)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetElement_9(pThis, Index);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectConstantBuffer*GetParentConstantBuffer()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetParentConstantBuffer_10(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectScalarVariable*AsScalar()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsScalar_11(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVectorVariable*AsVector()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsVector_12(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectMatrixVariable*AsMatrix()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsMatrix_13(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectStringVariable*AsString()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsString_14(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectShaderResourceVariable*AsShaderResource()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsShaderResource_15(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectRenderTargetViewVariable*AsRenderTargetView()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsRenderTargetView_16(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectDepthStencilViewVariable*AsDepthStencilView()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsDepthStencilView_17(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectConstantBuffer*AsConstantBuffer()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsConstantBuffer_18(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectShaderVariable*AsShader()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsShader_19(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectBlendVariable*AsBlend()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsBlend_20(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectDepthStencilVariable*AsDepthStencil()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsDepthStencil_21(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectRasterizerVariable*AsRasterizer()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsRasterizer_22(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectSamplerVariable*AsSampler()
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->AsSampler_23(pThis);
            }

            internal unsafe win32.System.Com.HRESULT SetRawValue(void *pData, uint Offset, uint ByteCount)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->SetRawValue_24(pThis, pData, Offset, ByteCount);
            }

            internal unsafe win32.System.Com.HRESULT GetRawValue(void *pData, uint Offset, uint ByteCount)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetRawValue_25(pThis, pData, Offset, ByteCount);
            }

            /// <inheritdoc cref = "SetBoolVector(win32.System.SystemServices.BOOL*)"/>
            internal unsafe win32.System.Com.HRESULT SetBoolVector(ref win32.System.SystemServices.BOOL pData)
            {
                fixed (win32.System.SystemServices.BOOL*pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetBoolVector(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Set a four-component vector that contains boolean data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a>*</b></para>
            /// <para>A pointer to the first component.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setboolvector#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setboolvector">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetBoolVector(win32.System.SystemServices.BOOL*pData)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->SetBoolVector_26(pThis, pData);
            }

            /// <inheritdoc cref = "SetIntVector(int *)"/>
            internal unsafe win32.System.Com.HRESULT SetIntVector(ref int pData)
            {
                fixed (int *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetIntVector(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Set a four-component vector that contains integer data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">int</a>*</b></para>
            /// <para>A pointer to the first component.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setintvector#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setintvector">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetIntVector(int *pData)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->SetIntVector_27(pThis, pData);
            }

            /// <inheritdoc cref = "SetFloatVector(float *)"/>
            internal unsafe win32.System.Com.HRESULT SetFloatVector(ref float pData)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetFloatVector(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Set a four-component vector that contains floating-point data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the first component.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setfloatvector#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setfloatvector">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetFloatVector(float *pData)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->SetFloatVector_28(pThis, pData);
            }

            /// <inheritdoc cref = "GetBoolVector(win32.System.SystemServices.BOOL*)"/>
            internal unsafe win32.System.Com.HRESULT GetBoolVector(ref win32.System.SystemServices.BOOL pData)
            {
                fixed (win32.System.SystemServices.BOOL*pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetBoolVector(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Get a four-component vector that contains boolean data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a>*</b></para>
            /// <para>A pointer to the first component.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getboolvector#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getboolvector">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetBoolVector(win32.System.SystemServices.BOOL*pData)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetBoolVector_29(pThis, pData);
            }

            /// <inheritdoc cref = "GetIntVector(int *)"/>
            internal unsafe win32.System.Com.HRESULT GetIntVector(ref int pData)
            {
                fixed (int *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetIntVector(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Get a four-component vector that contains integer data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">int</a>*</b></para>
            /// <para>A pointer to the first component.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getintvector#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getintvector">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetIntVector(int *pData)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetIntVector_30(pThis, pData);
            }

            /// <inheritdoc cref = "GetFloatVector(float *)"/>
            internal unsafe win32.System.Com.HRESULT GetFloatVector(ref float pData)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetFloatVector(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Get a four-component vector that contains floating-point data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the first component.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getfloatvector#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getfloatvector">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetFloatVector(float *pData)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetFloatVector_31(pThis, pData);
            }

            /// <inheritdoc cref = "SetBoolVectorArray(win32.System.SystemServices.BOOL*, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT SetBoolVectorArray(ref win32.System.SystemServices.BOOL pData, uint Offset, uint Count)
            {
                fixed (win32.System.SystemServices.BOOL*pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetBoolVectorArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Set an array of four-component vectors that contain boolean data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a>*</b></para>
            /// <para>A pointer to the start of the data to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setboolvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Must be set to 0; this is reserved for future use.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setboolvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of array elements to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setboolvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setboolvectorarray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetBoolVectorArray(win32.System.SystemServices.BOOL*pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->SetBoolVectorArray_32(pThis, pData, Offset, Count);
            }

            /// <inheritdoc cref = "SetIntVectorArray(int *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT SetIntVectorArray(ref int pData, uint Offset, uint Count)
            {
                fixed (int *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetIntVectorArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Set an array of four-component vectors that contain integer data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">int</a>*</b></para>
            /// <para>A pointer to the start of the data to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setintvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Must be set to 0; this is reserved for future use.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setintvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of array elements to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setintvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setintvectorarray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetIntVectorArray(int *pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->SetIntVectorArray_33(pThis, pData, Offset, Count);
            }

            /// <inheritdoc cref = "SetFloatVectorArray(float *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT SetFloatVectorArray(ref float pData, uint Offset, uint Count)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetFloatVectorArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Set an array of four-component vectors that contain floating-point data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the start of the data to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setfloatvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Must be set to 0; this is reserved for future use.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setfloatvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of array elements to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setfloatvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-setfloatvectorarray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetFloatVectorArray(float *pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->SetFloatVectorArray_34(pThis, pData, Offset, Count);
            }

            /// <inheritdoc cref = "GetBoolVectorArray(win32.System.SystemServices.BOOL*, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetBoolVectorArray(ref win32.System.SystemServices.BOOL pData, uint Offset, uint Count)
            {
                fixed (win32.System.SystemServices.BOOL*pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetBoolVectorArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Get an array of four-component vectors that contain boolean data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a>*</b></para>
            /// <para>A pointer to the start of the data to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getboolvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Must be set to 0; this is reserved for future use.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getboolvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of array elements to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getboolvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getboolvectorarray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetBoolVectorArray(win32.System.SystemServices.BOOL*pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetBoolVectorArray_35(pThis, pData, Offset, Count);
            }

            /// <inheritdoc cref = "GetIntVectorArray(int *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetIntVectorArray(ref int pData, uint Offset, uint Count)
            {
                fixed (int *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetIntVectorArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Get an array of four-component vectors that contain integer data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">int</a>*</b></para>
            /// <para>A pointer to the start of the data to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getintvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Must be set to 0; this is reserved for future use.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getintvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of array elements to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getintvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getintvectorarray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetIntVectorArray(int *pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetIntVectorArray_36(pThis, pData, Offset, Count);
            }

            /// <inheritdoc cref = "GetFloatVectorArray(float *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetFloatVectorArray(ref float pData, uint Offset, uint Count)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetFloatVectorArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Get an array of four-component vectors that contain floating-point data.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the start of the data to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getfloatvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>Must be set to 0; this is reserved for future use.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getfloatvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of array elements to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getfloatvectorarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectvectorvariable-getfloatvectorarray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetFloatVectorArray(float *pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectVectorVariable*pThis = &this)
                    return lpVtbl->GetFloatVectorArray_37(pThis, pData, Offset, Count);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.System.SystemServices.BOOL>IsValid_1;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectType*>GetType_2;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC*, win32.System.Com.HRESULT>GetDesc_3;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, uint, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetAnnotationByIndex_4;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetAnnotationByName_5;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, uint, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetMemberByIndex_6;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetMemberByName_7;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetMemberBySemantic_8;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, uint, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetElement_9;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectConstantBuffer*>GetParentConstantBuffer_10;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectScalarVariable*>AsScalar_11;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectVectorVariable*>AsVector_12;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectMatrixVariable*>AsMatrix_13;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectStringVariable*>AsString_14;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectShaderResourceVariable*>AsShaderResource_15;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectRenderTargetViewVariable*>AsRenderTargetView_16;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectDepthStencilViewVariable*>AsDepthStencilView_17;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectConstantBuffer*>AsConstantBuffer_18;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectShaderVariable*>AsShader_19;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectBlendVariable*>AsBlend_20;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectDepthStencilVariable*>AsDepthStencil_21;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectRasterizerVariable*>AsRasterizer_22;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.Graphics.Direct3D10.ID3D10EffectSamplerVariable*>AsSampler_23;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, void *, uint, uint, win32.System.Com.HRESULT>SetRawValue_24;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, void *, uint, uint, win32.System.Com.HRESULT>GetRawValue_25;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.System.SystemServices.BOOL*, win32.System.Com.HRESULT>SetBoolVector_26;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, int *, win32.System.Com.HRESULT>SetIntVector_27;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, float *, win32.System.Com.HRESULT>SetFloatVector_28;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.System.SystemServices.BOOL*, win32.System.Com.HRESULT>GetBoolVector_29;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, int *, win32.System.Com.HRESULT>GetIntVector_30;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, float *, win32.System.Com.HRESULT>GetFloatVector_31;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.System.SystemServices.BOOL*, uint, uint, win32.System.Com.HRESULT>SetBoolVectorArray_32;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, int *, uint, uint, win32.System.Com.HRESULT>SetIntVectorArray_33;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, float *, uint, uint, win32.System.Com.HRESULT>SetFloatVectorArray_34;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, win32.System.SystemServices.BOOL*, uint, uint, win32.System.Com.HRESULT>GetBoolVectorArray_35;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, int *, uint, uint, win32.System.Com.HRESULT>GetIntVectorArray_36;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectVectorVariable*, float *, uint, uint, win32.System.Com.HRESULT>GetFloatVectorArray_37;
            }

            private Vtbl*lpVtbl;
        }
    }
}