// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D10
    {
        [Guid("DB122CE8-D1C9-4292-B237-24ED3DE8B175")]
        internal unsafe struct ID3D10EffectTechnique
        {
            /// <summary>Test a technique to see if it contains valid syntax.</summary>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
            /// <para><b>TRUE</b> if the code syntax is valid; otherwise <b>FALSE</b>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-isvalid">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.SystemServices.BOOL IsValid()
            {
                fixed (ID3D10EffectTechnique*pThis = &this)
                    return lpVtbl->IsValid_1(pThis);
            }

            /// <inheritdoc cref = "GetDesc(win32.Graphics.Direct3D10.D3D10_TECHNIQUE_DESC*)"/>
            internal unsafe win32.System.Com.HRESULT GetDesc(ref win32.Graphics.Direct3D10.D3D10_TECHNIQUE_DESC pDesc)
            {
                fixed (win32.Graphics.Direct3D10.D3D10_TECHNIQUE_DESC*pDescLocal = &pDesc)
                {
                    win32.System.Com.HRESULT __result = this.GetDesc(pDescLocal);
                    return __result;
                }
            }

            /// <summary>Get a technique description.</summary>
            /// <param name = "pDesc">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_technique_desc">D3D10_TECHNIQUE_DESC</a>*</b></para>
            /// <para>A pointer to a technique description (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_technique_desc">D3D10_TECHNIQUE_DESC</a>).</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetDesc(win32.Graphics.Direct3D10.D3D10_TECHNIQUE_DESC*pDesc)
            {
                fixed (ID3D10EffectTechnique*pThis = &this)
                    return lpVtbl->GetDesc_2(pThis, pDesc);
            }

            /// <summary>Get an annotation by index.</summary>
            /// <param name = "Index">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The zero-based index of the interface pointer.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getannotationbyindex#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectvariable">ID3D10EffectVariable</a>*</b></para>
            /// <para>A pointer to an <a href = "/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectvariable">ID3D10EffectVariable Interface</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getannotationbyindex">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetAnnotationByIndex(uint Index)
            {
                fixed (ID3D10EffectTechnique*pThis = &this)
                    return lpVtbl->GetAnnotationByIndex_3(pThis, Index);
            }

            /// <summary>Get an annotation by name.</summary>
            /// <param name = "Name">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
            /// <para>Name of the annotation.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getannotationbyname#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectvariable">ID3D10EffectVariable</a>*</b></para>
            /// <para>A pointer to an <a href = "/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectvariable">ID3D10EffectVariable Interface</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getannotationbyname">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetAnnotationByName(win32.System.SystemServices.PCSTR Name)
            {
                fixed (ID3D10EffectTechnique*pThis = &this)
                    return lpVtbl->GetAnnotationByName_4(pThis, Name);
            }

            /// <summary>Get a pass by index.</summary>
            /// <param name = "Index">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>A zero-based index.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getpassbyindex#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectpass">ID3D10EffectPass</a>*</b></para>
            /// <para>A pointer to a <a href = "/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectpass">ID3D10EffectPass Interface</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getpassbyindex">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectPass*GetPassByIndex(uint Index)
            {
                fixed (ID3D10EffectTechnique*pThis = &this)
                    return lpVtbl->GetPassByIndex_5(pThis, Index);
            }

            /// <summary>Get a pass by name.</summary>
            /// <param name = "Name">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
            /// <para>The name of the pass.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getpassbyname#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectpass">ID3D10EffectPass</a>*</b></para>
            /// <para>A pointer to an <a href = "/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectpass">ID3D10EffectPass Interface</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-getpassbyname">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectPass*GetPassByName(win32.System.SystemServices.PCSTR Name)
            {
                fixed (ID3D10EffectTechnique*pThis = &this)
                    return lpVtbl->GetPassByName_6(pThis, Name);
            }

            /// <inheritdoc cref = "ComputeStateBlockMask(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*)"/>
            internal unsafe win32.System.Com.HRESULT ComputeStateBlockMask(out win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pStateBlockMask)
            {
                fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pStateBlockMaskLocal = &pStateBlockMask)
                {
                    win32.System.Com.HRESULT __result = this.ComputeStateBlockMask(pStateBlockMaskLocal);
                    return __result;
                }
            }

            /// <summary>Compute a state-block mask to allow/prevent state changes.</summary>
            /// <param name = "pStateBlockMask">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
            /// <para>A pointer to a state-block mask (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>).</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-computestateblockmask#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effecttechnique-computestateblockmask">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT ComputeStateBlockMask(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pStateBlockMask)
            {
                fixed (ID3D10EffectTechnique*pThis = &this)
                    return lpVtbl->ComputeStateBlockMask_7(pThis, pStateBlockMask);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID3D10EffectTechnique*, win32.System.SystemServices.BOOL>IsValid_1;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectTechnique*, win32.Graphics.Direct3D10.D3D10_TECHNIQUE_DESC*, win32.System.Com.HRESULT>GetDesc_2;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectTechnique*, uint, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetAnnotationByIndex_3;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectTechnique*, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetAnnotationByName_4;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectTechnique*, uint, win32.Graphics.Direct3D10.ID3D10EffectPass*>GetPassByIndex_5;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectTechnique*, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D10.ID3D10EffectPass*>GetPassByName_6;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectTechnique*, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.System.Com.HRESULT>ComputeStateBlockMask_7;
            }

            private Vtbl*lpVtbl;
        }
    }
}