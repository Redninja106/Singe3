// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D10
    {
        /// <summary>Filtering options during texture sampling.</summary>
        /// <remarks>
        /// <para>During texture sampling, one or more texels are read and combined (this is calling filtering) to produce a single value. Point sampling reads a single texel while linear sampling reads two texels (endpoints) and linearly interpolates a third value between the endpoints.</para>
        /// <para>HLSL texture-sampling functions also support comparison filtering during texture sampling. Comparison filtering compares each sampled texel against a comparison value. The boolean result is blended the same way that normal texture filtering is blended.</para>
        /// <para>You can use HLSL intrinsic texture-sampling functions that implement texture filtering only or companion functions that use texture filtering with comparison filtering.</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10/ne-d3d10-d3d10_filter#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal enum D3D10_FILTER
        {
            /// <summary>Use point sampling for minification, magnification, and mip-level sampling.</summary>
            D3D10_FILTER_MIN_MAG_MIP_POINT = 0,
            /// <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.</summary>
            D3D10_FILTER_MIN_MAG_POINT_MIP_LINEAR = 1,
            /// <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.</summary>
            D3D10_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT = 4,
            /// <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.</summary>
            D3D10_FILTER_MIN_POINT_MAG_MIP_LINEAR = 5,
            /// <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.</summary>
            D3D10_FILTER_MIN_LINEAR_MAG_MIP_POINT = 16,
            /// <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.</summary>
            D3D10_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 17,
            /// <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.</summary>
            D3D10_FILTER_MIN_MAG_LINEAR_MIP_POINT = 20,
            /// <summary>Use linear interpolation for minification, magnification, and mip-level sampling.</summary>
            D3D10_FILTER_MIN_MAG_MIP_LINEAR = 21,
            /// <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling.</summary>
            D3D10_FILTER_ANISOTROPIC = 85,
            /// <summary>Use point sampling for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
            D3D10_FILTER_COMPARISON_MIN_MAG_MIP_POINT = 128,
            /// <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
            D3D10_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR = 129,
            /// <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
            D3D10_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT = 132,
            /// <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
            D3D10_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR = 133,
            /// <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
            D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT = 144,
            /// <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
            D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 145,
            /// <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
            D3D10_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT = 148,
            /// <summary>Use linear interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
            D3D10_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR = 149,
            /// <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
            D3D10_FILTER_COMPARISON_ANISOTROPIC = 213,
            /// <summary>For use in pixel shaders with textures that have the R1_UNORM format.</summary>
            D3D10_FILTER_TEXT_1BIT = -2147483648,
        }
    }
}