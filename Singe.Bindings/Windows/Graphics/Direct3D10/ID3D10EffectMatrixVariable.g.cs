// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct3D10
    {
        [Guid("50666C24-B82F-4EED-A172-5B6E7E8522E0")]
        internal unsafe struct ID3D10EffectMatrixVariable
        {
            internal win32.System.SystemServices.BOOL IsValid()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->IsValid_1(pThis);
            }

            internal new unsafe win32.Graphics.Direct3D10.ID3D10EffectType*GetType()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetType_2(pThis);
            }

            /// <inheritdoc cref = "GetDesc(win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC*)"/>
            internal unsafe win32.System.Com.HRESULT GetDesc(out win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC pDesc)
            {
                fixed (win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC*pDescLocal = &pDesc)
                {
                    win32.System.Com.HRESULT __result = this.GetDesc(pDescLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetDesc(win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC*pDesc)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetDesc_3(pThis, pDesc);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetAnnotationByIndex(uint Index)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetAnnotationByIndex_4(pThis, Index);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetAnnotationByName(win32.System.SystemServices.PCSTR Name)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetAnnotationByName_5(pThis, Name);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetMemberByIndex(uint Index)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetMemberByIndex_6(pThis, Index);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetMemberByName(win32.System.SystemServices.PCSTR Name)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetMemberByName_7(pThis, Name);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetMemberBySemantic(win32.System.SystemServices.PCSTR Semantic)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetMemberBySemantic_8(pThis, Semantic);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVariable*GetElement(uint Index)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetElement_9(pThis, Index);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectConstantBuffer*GetParentConstantBuffer()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetParentConstantBuffer_10(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectScalarVariable*AsScalar()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsScalar_11(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectVectorVariable*AsVector()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsVector_12(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectMatrixVariable*AsMatrix()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsMatrix_13(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectStringVariable*AsString()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsString_14(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectShaderResourceVariable*AsShaderResource()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsShaderResource_15(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectRenderTargetViewVariable*AsRenderTargetView()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsRenderTargetView_16(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectDepthStencilViewVariable*AsDepthStencilView()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsDepthStencilView_17(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectConstantBuffer*AsConstantBuffer()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsConstantBuffer_18(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectShaderVariable*AsShader()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsShader_19(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectBlendVariable*AsBlend()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsBlend_20(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectDepthStencilVariable*AsDepthStencil()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsDepthStencil_21(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectRasterizerVariable*AsRasterizer()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsRasterizer_22(pThis);
            }

            internal unsafe win32.Graphics.Direct3D10.ID3D10EffectSamplerVariable*AsSampler()
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->AsSampler_23(pThis);
            }

            internal unsafe win32.System.Com.HRESULT SetRawValue(void *pData, uint Offset, uint ByteCount)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->SetRawValue_24(pThis, pData, Offset, ByteCount);
            }

            internal unsafe win32.System.Com.HRESULT GetRawValue(void *pData, uint Offset, uint ByteCount)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetRawValue_25(pThis, pData, Offset, ByteCount);
            }

            /// <inheritdoc cref = "SetMatrix(float *)"/>
            internal unsafe win32.System.Com.HRESULT SetMatrix(ref float pData)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetMatrix(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Set a floating-point matrix.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the first element in the matrix.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrix#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrix">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetMatrix(float *pData)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->SetMatrix_26(pThis, pData);
            }

            /// <inheritdoc cref = "GetMatrix(float *)"/>
            internal unsafe win32.System.Com.HRESULT GetMatrix(ref float pData)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetMatrix(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Get a matrix.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the first element in a matrix.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrix#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrix">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetMatrix(float *pData)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetMatrix_27(pThis, pData);
            }

            /// <inheritdoc cref = "SetMatrixArray(float *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT SetMatrixArray(ref float pData, uint Offset, uint Count)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetMatrixArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Set an array of floating-point matrices.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the first matrix.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of matrix elements to skip from the start of the array.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of elements to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixarray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetMatrixArray(float *pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->SetMatrixArray_28(pThis, pData, Offset, Count);
            }

            /// <inheritdoc cref = "GetMatrixArray(float *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetMatrixArray(ref float pData, uint Offset, uint Count)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetMatrixArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Get an array of matrices.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the first element of the first matrix in an array of matrices.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The offset (in number of matrices) between the start of the array and the first matrix returned.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of matrices in the returned array.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixarray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixarray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetMatrixArray(float *pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetMatrixArray_29(pThis, pData, Offset, Count);
            }

            /// <inheritdoc cref = "SetMatrixTranspose(float *)"/>
            internal unsafe win32.System.Com.HRESULT SetMatrixTranspose(ref float pData)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetMatrixTranspose(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Transpose and set a floating-point matrix.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the first element of a matrix.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixtranspose#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixtranspose">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetMatrixTranspose(float *pData)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->SetMatrixTranspose_30(pThis, pData);
            }

            /// <inheritdoc cref = "GetMatrixTranspose(float *)"/>
            internal unsafe win32.System.Com.HRESULT GetMatrixTranspose(ref float pData)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetMatrixTranspose(pDataLocal);
                    return __result;
                }
            }

            /// <summary>Transpose and get a floating-point matrix.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the first element of a transposed matrix.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixtranspose#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixtranspose">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetMatrixTranspose(float *pData)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetMatrixTranspose_31(pThis, pData);
            }

            /// <inheritdoc cref = "SetMatrixTransposeArray(float *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT SetMatrixTransposeArray(ref float pData, uint Offset, uint Count)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.SetMatrixTransposeArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Transpose and set an array of floating-point matrices.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to an array of matrices.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixtransposearray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The offset (in number of matrices) between the start of the array and the first matrix to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixtransposearray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of matrices in the array to set.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixtransposearray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-setmatrixtransposearray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetMatrixTransposeArray(float *pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->SetMatrixTransposeArray_32(pThis, pData, Offset, Count);
            }

            /// <inheritdoc cref = "GetMatrixTransposeArray(float *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetMatrixTransposeArray(ref float pData, uint Offset, uint Count)
            {
                fixed (float *pDataLocal = &pData)
                {
                    win32.System.Com.HRESULT __result = this.GetMatrixTransposeArray(pDataLocal, Offset, Count);
                    return __result;
                }
            }

            /// <summary>Transpose and get an array of floating-point matrices.</summary>
            /// <param name = "pData">
            /// <para>Type: <b>float*</b></para>
            /// <para>A pointer to the first element of an array of tranposed matrices.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixtransposearray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Offset">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The offset (in number of matrices) between the start of the array and the first matrix to get.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixtransposearray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "Count">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            /// <para>The number of matrices in the array to get.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixtransposearray#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-id3d10effectmatrixvariable-getmatrixtransposearray">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetMatrixTransposeArray(float *pData, uint Offset, uint Count)
            {
                fixed (ID3D10EffectMatrixVariable*pThis = &this)
                    return lpVtbl->GetMatrixTransposeArray_33(pThis, pData, Offset, Count);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.System.SystemServices.BOOL>IsValid_1;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectType*>GetType_2;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.D3D10_EFFECT_VARIABLE_DESC*, win32.System.Com.HRESULT>GetDesc_3;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, uint, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetAnnotationByIndex_4;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetAnnotationByName_5;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, uint, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetMemberByIndex_6;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetMemberByName_7;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetMemberBySemantic_8;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, uint, win32.Graphics.Direct3D10.ID3D10EffectVariable*>GetElement_9;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectConstantBuffer*>GetParentConstantBuffer_10;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectScalarVariable*>AsScalar_11;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectVectorVariable*>AsVector_12;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectMatrixVariable*>AsMatrix_13;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectStringVariable*>AsString_14;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectShaderResourceVariable*>AsShaderResource_15;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectRenderTargetViewVariable*>AsRenderTargetView_16;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectDepthStencilViewVariable*>AsDepthStencilView_17;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectConstantBuffer*>AsConstantBuffer_18;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectShaderVariable*>AsShader_19;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectBlendVariable*>AsBlend_20;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectDepthStencilVariable*>AsDepthStencil_21;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectRasterizerVariable*>AsRasterizer_22;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, win32.Graphics.Direct3D10.ID3D10EffectSamplerVariable*>AsSampler_23;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, void *, uint, uint, win32.System.Com.HRESULT>SetRawValue_24;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, void *, uint, uint, win32.System.Com.HRESULT>GetRawValue_25;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, float *, win32.System.Com.HRESULT>SetMatrix_26;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, float *, win32.System.Com.HRESULT>GetMatrix_27;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, float *, uint, uint, win32.System.Com.HRESULT>SetMatrixArray_28;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, float *, uint, uint, win32.System.Com.HRESULT>GetMatrixArray_29;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, float *, win32.System.Com.HRESULT>SetMatrixTranspose_30;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, float *, win32.System.Com.HRESULT>GetMatrixTranspose_31;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, float *, uint, uint, win32.System.Com.HRESULT>SetMatrixTransposeArray_32;
                internal delegate *unmanaged[Stdcall]<ID3D10EffectMatrixVariable*, float *, uint, uint, win32.System.Com.HRESULT>GetMatrixTransposeArray_33;
            }

            private Vtbl*lpVtbl;
        }
    }
}