// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("2CD906C1-12E2-11DC-9FED-001143A055F9")]
        internal unsafe struct ID2D1TessellationSink
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1TessellationSink*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1TessellationSink*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1TessellationSink*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "AddTriangles(win32.Graphics.Direct2D.D2D1_TRIANGLE*, uint)"/>
            internal unsafe void AddTriangles(ReadOnlySpan<win32.Graphics.Direct2D.D2D1_TRIANGLE> triangles)
            {
                fixed (win32.Graphics.Direct2D.D2D1_TRIANGLE*trianglesLocal = triangles)
                {
                    this.AddTriangles(trianglesLocal, (uint)triangles.Length);
                }
            }

            /// <summary>Copies the specified triangles to the sink.</summary>
            /// <param name = "triangles">
            /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ns-d2d1-d2d1_triangle">D2D1_TRIANGLE</a>*</b></para>
            /// <para>An array of <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ns-d2d1-d2d1_triangle">D2D1_TRIANGLE</a> structures that describe the triangles to add to the sink.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1tessellationsink-addtriangles#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "trianglesCount">
            /// <para>Type: <b>UINT</b></para>
            /// <para>The number of triangles to copy from the <i>triangles</i> array.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1tessellationsink-addtriangles#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1tessellationsink-addtriangles">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe void AddTriangles(win32.Graphics.Direct2D.D2D1_TRIANGLE*triangles, uint trianglesCount)
            {
                fixed (ID2D1TessellationSink*pThis = &this)
                    lpVtbl->AddTriangles_4(pThis, triangles, trianglesCount);
            }

            /// <summary>Closes the sink and returns its error status.</summary>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>If this method succeeds, it returns <b xmlns: loc = "http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an [**HRESULT**](/windows/desktop/com/structure-of-com-error-codes) error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1tessellationsink-close">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT Close()
            {
                fixed (ID2D1TessellationSink*pThis = &this)
                    return lpVtbl->Close_5(pThis);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1TessellationSink*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1TessellationSink*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1TessellationSink*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1TessellationSink*, win32.Graphics.Direct2D.D2D1_TRIANGLE*, uint, void>AddTriangles_4;
                internal delegate *unmanaged[Stdcall]<ID2D1TessellationSink*, win32.System.Com.HRESULT>Close_5;
            }

            private Vtbl*lpVtbl;
        }
    }
}