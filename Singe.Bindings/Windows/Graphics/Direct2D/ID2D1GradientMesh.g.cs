// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("F292E401-C050-4CDE-83D7-04962D3B23C2")]
        internal unsafe struct ID2D1GradientMesh
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1GradientMesh*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1GradientMesh*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1GradientMesh*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal unsafe void GetFactory(win32.Graphics.Direct2D.ID2D1Factory**factory)
            {
                fixed (ID2D1GradientMesh*pThis = &this)
                    lpVtbl->GetFactory_4(pThis, factory);
            }

            /// <summary>Returns the number of patches that make up this gradient mesh.</summary>
            /// <returns>
            /// <para>Type: <b>UINT32</b></para>
            /// <para>Returns the number of patches that make up this gradient mesh.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gradientmesh-getpatchcount">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal uint GetPatchCount()
            {
                fixed (ID2D1GradientMesh*pThis = &this)
                    return lpVtbl->GetPatchCount_5(pThis);
            }

            /// <inheritdoc cref = "GetPatches(uint, win32.Graphics.Direct2D.D2D1_GRADIENT_MESH_PATCH*, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetPatches(uint startIndex, Span<win32.Graphics.Direct2D.D2D1_GRADIENT_MESH_PATCH> patches)
            {
                fixed (win32.Graphics.Direct2D.D2D1_GRADIENT_MESH_PATCH*patchesLocal = patches)
                {
                    win32.System.Com.HRESULT __result = this.GetPatches(startIndex, patchesLocal, (uint)patches.Length);
                    return __result;
                }
            }

            /// <summary>Returns a subset of the patches that make up this gradient mesh.</summary>
            /// <param name = "startIndex">
            /// <para>Type: <b>UINT32</b></para>
            /// <para>Index of the first patch to return.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gradientmesh-getpatches#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "patches">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch">D2D1_GRADIENT_MESH_PATCH</a>*</b></para>
            /// <para>A pointer to the array to be filled with the patch data.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gradientmesh-getpatches#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "patchesCount">
            /// <para>Type: <b>UINT32</b></para>
            /// <para>The number of patches to be returned.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gradientmesh-getpatches#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>S_OK if successful, otherwise a failure HRESULT.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gradientmesh-getpatches">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT GetPatches(uint startIndex, win32.Graphics.Direct2D.D2D1_GRADIENT_MESH_PATCH*patches, uint patchesCount)
            {
                fixed (ID2D1GradientMesh*pThis = &this)
                    return lpVtbl->GetPatches_6(pThis, startIndex, patches, patchesCount);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1GradientMesh*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1GradientMesh*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1GradientMesh*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1GradientMesh*, win32.Graphics.Direct2D.ID2D1Factory**, void>GetFactory_4;
                internal delegate *unmanaged[Stdcall]<ID2D1GradientMesh*, uint>GetPatchCount_5;
                internal delegate *unmanaged[Stdcall]<ID2D1GradientMesh*, uint, win32.Graphics.Direct2D.D2D1_GRADIENT_MESH_PATCH*, uint, win32.System.Com.HRESULT>GetPatches_6;
            }

            private Vtbl*lpVtbl;
        }
    }
}