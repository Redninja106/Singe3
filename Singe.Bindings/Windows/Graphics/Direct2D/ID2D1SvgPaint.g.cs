// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("D59BAB0A-68A2-455B-A5DC-9EB2854E2490")]
        internal unsafe struct ID2D1SvgPaint
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal unsafe void GetFactory(win32.Graphics.Direct2D.ID2D1Factory**factory)
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    lpVtbl->GetFactory_4(pThis, factory);
            }

            internal unsafe void GetElement([Optional] win32.Graphics.Direct2D.ID2D1SvgElement**element)
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    lpVtbl->GetElement_5(pThis, element);
            }

            internal unsafe win32.System.Com.HRESULT Clone(win32.Graphics.Direct2D.ID2D1SvgAttribute**attribute)
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->Clone_6(pThis, attribute);
            }

            /// <summary>Sets the paint type.</summary>
            /// <param name = "paintType">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1svg/ne-d2d1svg-d2d1_svg_paint_type">D2D1_SVG_PAINT_TYPE</a></b></para>
            /// <para>The new paint type.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-setpainttype#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns an HRESULT success or error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-setpainttype">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT SetPaintType(win32.Graphics.Direct2D.D2D1_SVG_PAINT_TYPE paintType)
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->SetPaintType_7(pThis, paintType);
            }

            /// <summary>Gets the paint type.</summary>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/desktop/api/d2d1svg/ne-d2d1svg-d2d1_svg_paint_type">D2D1_SVG_PAINT_TYPE</a></b></para>
            /// <para>Returns the paint type.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getpainttype">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.Graphics.Direct2D.D2D1_SVG_PAINT_TYPE GetPaintType()
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->GetPaintType_8(pThis);
            }

            /// <inheritdoc cref = "SetColor(win32.Graphics.Direct2D.D2D1_COLOR_F*)"/>
            internal unsafe win32.System.Com.HRESULT SetColor(in win32.Graphics.Direct2D.D2D1_COLOR_F color)
            {
                fixed (win32.Graphics.Direct2D.D2D1_COLOR_F*colorLocal = &color)
                {
                    win32.System.Com.HRESULT __result = this.SetColor(colorLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT SetColor(win32.Graphics.Direct2D.D2D1_COLOR_F*color)
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->SetColor_9(pThis, color);
            }

            /// <inheritdoc cref = "GetColor(win32.Graphics.Direct2D.D2D1_COLOR_F*)"/>
            internal unsafe void GetColor(out win32.Graphics.Direct2D.D2D1_COLOR_F color)
            {
                fixed (win32.Graphics.Direct2D.D2D1_COLOR_F*colorLocal = &color)
                {
                    this.GetColor(colorLocal);
                }
            }

            /// <summary>Gets the paint color that is used if the paint type is D2D1_SVG_PAINT_TYPE_COLOR.</summary>
            /// <param name = "color">
            /// <para>Type: <b>D2D1_COLOR_F*</b></para>
            /// <para>The paint color that is used if the paint type is D2D1_SVG_PAINT_TYPE_COLOR.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getcolor#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getcolor">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe void GetColor(win32.Graphics.Direct2D.D2D1_COLOR_F*color)
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    lpVtbl->GetColor_10(pThis, color);
            }

            /// <inheritdoc cref = "SetId(win32.System.SystemServices.PCWSTR)"/>
            internal unsafe win32.System.Com.HRESULT SetId(string id)
            {
                fixed (char *idLocal = id)
                {
                    win32.System.Com.HRESULT __result = this.SetId(idLocal);
                    return __result;
                }
            }

            /// <summary>Sets the element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</summary>
            /// <param name = "id">
            /// <para>Type: <b>PCWSTR</b></para>
            /// <para>The element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-setid#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns an HRESULT success or error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-setid">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT SetId(win32.System.SystemServices.PCWSTR id)
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->SetId_11(pThis, id);
            }

            /// <summary>Gets the element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</summary>
            /// <param name = "id">
            /// <para>Type: <b>PWSTR</b></para>
            /// <para>The element id which acts as the paint server.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getid#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "idCount">Type: <b>UINT32</b></param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns an HRESULT success or error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getid">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT GetId(win32.System.SystemServices.PWSTR id, uint idCount)
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->GetId_12(pThis, id, idCount);
            }

            /// <summary>Gets the string length of the element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</summary>
            /// <returns>
            /// <para>Type: <b>UINT32</b></para>
            /// <para>the string length of the element id which acts as the paint server. The returned string length does not include room for the null terminator.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getidlength">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal uint GetIdLength()
            {
                fixed (ID2D1SvgPaint*pThis = &this)
                    return lpVtbl->GetIdLength_13(pThis);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, win32.Graphics.Direct2D.ID2D1Factory**, void>GetFactory_4;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, win32.Graphics.Direct2D.ID2D1SvgElement**, void>GetElement_5;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, win32.Graphics.Direct2D.ID2D1SvgAttribute**, win32.System.Com.HRESULT>Clone_6;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, win32.Graphics.Direct2D.D2D1_SVG_PAINT_TYPE, win32.System.Com.HRESULT>SetPaintType_7;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, win32.Graphics.Direct2D.D2D1_SVG_PAINT_TYPE>GetPaintType_8;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, win32.Graphics.Direct2D.D2D1_COLOR_F*, win32.System.Com.HRESULT>SetColor_9;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, win32.Graphics.Direct2D.D2D1_COLOR_F*, void>GetColor_10;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, win32.System.SystemServices.PCWSTR, win32.System.Com.HRESULT>SetId_11;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, win32.System.SystemServices.PWSTR, uint, win32.System.Com.HRESULT>GetId_12;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgPaint*, uint>GetIdLength_13;
            }

            private Vtbl*lpVtbl;
        }
    }
}