// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("C9B664E5-74A1-4378-9AC2-EEFC37A3F4D8")]
        internal unsafe struct ID2D1ImageSource
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1ImageSource*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1ImageSource*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1ImageSource*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal unsafe void GetFactory(win32.Graphics.Direct2D.ID2D1Factory**factory)
            {
                fixed (ID2D1ImageSource*pThis = &this)
                    lpVtbl->GetFactory_4(pThis, factory);
            }

            /// <summary>Allows the operating system to free the video memory of resources by discarding their content.</summary>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> <b>OfferResources</b> returns:</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1imagesource-offerresources">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT OfferResources()
            {
                fixed (ID2D1ImageSource*pThis = &this)
                    return lpVtbl->OfferResources_5(pThis);
            }

            /// <inheritdoc cref = "TryReclaimResources(win32.System.SystemServices.BOOL*)"/>
            internal unsafe win32.System.Com.HRESULT TryReclaimResources(out win32.System.SystemServices.BOOL resourcesDiscarded)
            {
                fixed (win32.System.SystemServices.BOOL*resourcesDiscardedLocal = &resourcesDiscarded)
                {
                    win32.System.Com.HRESULT __result = this.TryReclaimResources(resourcesDiscardedLocal);
                    return __result;
                }
            }

            /// <summary>Restores access to resources that were previously offered by calling OfferResources.</summary>
            /// <param name = "resourcesDiscarded">
            /// <para>Type: <b>BOOL*</b></para>
            /// <para>Returns with TRUE if the corresponding resource’s content was discarded and is now undefined, or FALSE if the corresponding resource’s old content is still intact. The caller can pass in NULL, if the caller intends to fill the resources with new content regardless of whether the old content was discarded.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1imagesource-tryreclaimresources#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> <b>ReclaimResources</b> returns:</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1imagesource-tryreclaimresources">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT TryReclaimResources(win32.System.SystemServices.BOOL*resourcesDiscarded)
            {
                fixed (ID2D1ImageSource*pThis = &this)
                    return lpVtbl->TryReclaimResources_6(pThis, resourcesDiscarded);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1ImageSource*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1ImageSource*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1ImageSource*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1ImageSource*, win32.Graphics.Direct2D.ID2D1Factory**, void>GetFactory_4;
                internal delegate *unmanaged[Stdcall]<ID2D1ImageSource*, win32.System.Com.HRESULT>OfferResources_5;
                internal delegate *unmanaged[Stdcall]<ID2D1ImageSource*, win32.System.SystemServices.BOOL*, win32.System.Com.HRESULT>TryReclaimResources_6;
            }

            private Vtbl*lpVtbl;
        }
    }
}