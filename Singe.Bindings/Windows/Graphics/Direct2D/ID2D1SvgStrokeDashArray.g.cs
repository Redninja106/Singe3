// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("F1C0CA52-92A3-4F00-B4CE-F35691EFD9D9")]
        internal unsafe struct ID2D1SvgStrokeDashArray
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal unsafe void GetFactory(win32.Graphics.Direct2D.ID2D1Factory**factory)
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    lpVtbl->GetFactory_4(pThis, factory);
            }

            internal unsafe void GetElement([Optional] win32.Graphics.Direct2D.ID2D1SvgElement**element)
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    lpVtbl->GetElement_5(pThis, element);
            }

            internal unsafe win32.System.Com.HRESULT Clone(win32.Graphics.Direct2D.ID2D1SvgAttribute**attribute)
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->Clone_6(pThis, attribute);
            }

            /// <summary>Removes dashes from the end of the array.</summary>
            /// <param name = "dashesCount">
            /// <para>Type: <b>UINT32</b></para>
            /// <para>Specifies how many dashes to remove.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgstrokedasharray-removedashesatend#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns an HRESULT success or error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgstrokedasharray-removedashesatend">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT RemoveDashesAtEnd(uint dashesCount)
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->RemoveDashesAtEnd_7(pThis, dashesCount);
            }

            /// <inheritdoc cref = "UpdateDashes(float *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT UpdateDashes(ReadOnlySpan<float> dashes, uint startIndex)
            {
                fixed (float *dashesLocal = dashes)
                {
                    win32.System.Com.HRESULT __result = this.UpdateDashes(dashesLocal, (uint)dashes.Length, startIndex);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT UpdateDashes(float *dashes, uint dashesCount, uint startIndex)
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->UpdateDashes_8(pThis, dashes, dashesCount, startIndex);
            }

            /// <inheritdoc cref = "UpdateDashes(win32.Graphics.Direct2D.D2D1_SVG_LENGTH*, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT UpdateDashes(ReadOnlySpan<win32.Graphics.Direct2D.D2D1_SVG_LENGTH> dashes, uint startIndex)
            {
                fixed (win32.Graphics.Direct2D.D2D1_SVG_LENGTH*dashesLocal = dashes)
                {
                    win32.System.Com.HRESULT __result = this.UpdateDashes(dashesLocal, (uint)dashes.Length, startIndex);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT UpdateDashes(win32.Graphics.Direct2D.D2D1_SVG_LENGTH*dashes, uint dashesCount, uint startIndex)
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->UpdateDashes_9(pThis, dashes, dashesCount, startIndex);
            }

            /// <inheritdoc cref = "GetDashes(float *, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetDashes(Span<float> dashes, uint startIndex)
            {
                fixed (float *dashesLocal = dashes)
                {
                    win32.System.Com.HRESULT __result = this.GetDashes(dashesLocal, (uint)dashes.Length, startIndex);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetDashes(float *dashes, uint dashesCount, uint startIndex)
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->GetDashes_10(pThis, dashes, dashesCount, startIndex);
            }

            /// <inheritdoc cref = "GetDashes(win32.Graphics.Direct2D.D2D1_SVG_LENGTH*, uint, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetDashes(Span<win32.Graphics.Direct2D.D2D1_SVG_LENGTH> dashes, uint startIndex)
            {
                fixed (win32.Graphics.Direct2D.D2D1_SVG_LENGTH*dashesLocal = dashes)
                {
                    win32.System.Com.HRESULT __result = this.GetDashes(dashesLocal, (uint)dashes.Length, startIndex);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetDashes(win32.Graphics.Direct2D.D2D1_SVG_LENGTH*dashes, uint dashesCount, uint startIndex)
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->GetDashes_11(pThis, dashes, dashesCount, startIndex);
            }

            /// <summary>Gets the number of the dashes in the array.</summary>
            /// <returns>
            /// <para>Type: <b>UINT32</b></para>
            /// <para>Returns the number of the dashes in the array.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgstrokedasharray-getdashescount">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal uint GetDashesCount()
            {
                fixed (ID2D1SvgStrokeDashArray*pThis = &this)
                    return lpVtbl->GetDashesCount_12(pThis);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, win32.Graphics.Direct2D.ID2D1Factory**, void>GetFactory_4;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, win32.Graphics.Direct2D.ID2D1SvgElement**, void>GetElement_5;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, win32.Graphics.Direct2D.ID2D1SvgAttribute**, win32.System.Com.HRESULT>Clone_6;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, uint, win32.System.Com.HRESULT>RemoveDashesAtEnd_7;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, float *, uint, uint, win32.System.Com.HRESULT>UpdateDashes_8;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, win32.Graphics.Direct2D.D2D1_SVG_LENGTH*, uint, uint, win32.System.Com.HRESULT>UpdateDashes_9;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, float *, uint, uint, win32.System.Com.HRESULT>GetDashes_10;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, win32.Graphics.Direct2D.D2D1_SVG_LENGTH*, uint, uint, win32.System.Com.HRESULT>GetDashes_11;
                internal delegate *unmanaged[Stdcall]<ID2D1SvgStrokeDashArray*, uint>GetDashesCount_12;
            }

            private Vtbl*lpVtbl;
        }
    }
}