// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("577AD2A0-9FC7-4DDA-8B18-DAB810140052")]
        internal unsafe struct ID2D1EffectContext2
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "GetDpi(float *, float *)"/>
            internal unsafe void GetDpi(out float dpiX, out float dpiY)
            {
                fixed (float *dpiYLocal = &dpiY)
                {
                    fixed (float *dpiXLocal = &dpiX)
                    {
                        this.GetDpi(dpiXLocal, dpiYLocal);
                    }
                }
            }

            internal unsafe void GetDpi(float *dpiX, float *dpiY)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    lpVtbl->GetDpi_4(pThis, dpiX, dpiY);
            }

            /// <inheritdoc cref = "CreateEffect(global::System.Guid*, win32.Graphics.Direct2D.ID2D1Effect**)"/>
            internal unsafe win32.System.Com.HRESULT CreateEffect(in global::System.Guid effectId, win32.Graphics.Direct2D.ID2D1Effect**effect)
            {
                fixed (global::System.Guid*effectIdLocal = &effectId)
                {
                    win32.System.Com.HRESULT __result = this.CreateEffect(effectIdLocal, effect);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateEffect(global::System.Guid*effectId, win32.Graphics.Direct2D.ID2D1Effect**effect)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateEffect_5(pThis, effectId, effect);
            }

            /// <inheritdoc cref = "GetMaximumSupportedFeatureLevel(win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*, uint, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*)"/>
            internal unsafe win32.System.Com.HRESULT GetMaximumSupportedFeatureLevel(ReadOnlySpan<win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL> featureLevels, out win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL maximumSupportedFeatureLevel)
            {
                fixed (win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*maximumSupportedFeatureLevelLocal = &maximumSupportedFeatureLevel)
                {
                    fixed (win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*featureLevelsLocal = featureLevels)
                    {
                        win32.System.Com.HRESULT __result = this.GetMaximumSupportedFeatureLevel(featureLevelsLocal, (uint)featureLevels.Length, maximumSupportedFeatureLevelLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetMaximumSupportedFeatureLevel(win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*featureLevels, uint featureLevelsCount, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*maximumSupportedFeatureLevel)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->GetMaximumSupportedFeatureLevel_6(pThis, featureLevels, featureLevelsCount, maximumSupportedFeatureLevel);
            }

            internal unsafe win32.System.Com.HRESULT CreateTransformNodeFromEffect(win32.Graphics.Direct2D.ID2D1Effect*effect, win32.Graphics.Direct2D.ID2D1TransformNode**transformNode)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateTransformNodeFromEffect_7(pThis, effect, transformNode);
            }

            /// <inheritdoc cref = "CreateBlendTransform(uint, win32.Graphics.Direct2D.D2D1_BLEND_DESCRIPTION*, win32.Graphics.Direct2D.ID2D1BlendTransform**)"/>
            internal unsafe win32.System.Com.HRESULT CreateBlendTransform(uint numInputs, in win32.Graphics.Direct2D.D2D1_BLEND_DESCRIPTION blendDescription, win32.Graphics.Direct2D.ID2D1BlendTransform**transform)
            {
                fixed (win32.Graphics.Direct2D.D2D1_BLEND_DESCRIPTION*blendDescriptionLocal = &blendDescription)
                {
                    win32.System.Com.HRESULT __result = this.CreateBlendTransform(numInputs, blendDescriptionLocal, transform);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateBlendTransform(uint numInputs, win32.Graphics.Direct2D.D2D1_BLEND_DESCRIPTION*blendDescription, win32.Graphics.Direct2D.ID2D1BlendTransform**transform)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateBlendTransform_8(pThis, numInputs, blendDescription, transform);
            }

            internal unsafe win32.System.Com.HRESULT CreateBorderTransform(win32.Graphics.Direct2D.D2D1_EXTEND_MODE extendModeX, win32.Graphics.Direct2D.D2D1_EXTEND_MODE extendModeY, win32.Graphics.Direct2D.ID2D1BorderTransform**transform)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateBorderTransform_9(pThis, extendModeX, extendModeY, transform);
            }

            internal unsafe win32.System.Com.HRESULT CreateOffsetTransform(win32.UI.DisplayDevices.POINT offset, win32.Graphics.Direct2D.ID2D1OffsetTransform**transform)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateOffsetTransform_10(pThis, offset, transform);
            }

            /// <inheritdoc cref = "CreateBoundsAdjustmentTransform(win32.UI.DisplayDevices.RECT*, win32.Graphics.Direct2D.ID2D1BoundsAdjustmentTransform**)"/>
            internal unsafe win32.System.Com.HRESULT CreateBoundsAdjustmentTransform(in win32.UI.DisplayDevices.RECT outputRectangle, win32.Graphics.Direct2D.ID2D1BoundsAdjustmentTransform**transform)
            {
                fixed (win32.UI.DisplayDevices.RECT*outputRectangleLocal = &outputRectangle)
                {
                    win32.System.Com.HRESULT __result = this.CreateBoundsAdjustmentTransform(outputRectangleLocal, transform);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateBoundsAdjustmentTransform(win32.UI.DisplayDevices.RECT*outputRectangle, win32.Graphics.Direct2D.ID2D1BoundsAdjustmentTransform**transform)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateBoundsAdjustmentTransform_11(pThis, outputRectangle, transform);
            }

            /// <inheritdoc cref = "LoadPixelShader(global::System.Guid*, byte *, uint)"/>
            internal unsafe win32.System.Com.HRESULT LoadPixelShader(in global::System.Guid shaderId, ReadOnlySpan<byte> shaderBuffer)
            {
                fixed (byte *shaderBufferLocal = shaderBuffer)
                {
                    fixed (global::System.Guid*shaderIdLocal = &shaderId)
                    {
                        win32.System.Com.HRESULT __result = this.LoadPixelShader(shaderIdLocal, shaderBufferLocal, (uint)shaderBuffer.Length);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT LoadPixelShader(global::System.Guid*shaderId, byte *shaderBuffer, uint shaderBufferCount)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->LoadPixelShader_12(pThis, shaderId, shaderBuffer, shaderBufferCount);
            }

            /// <inheritdoc cref = "LoadVertexShader(global::System.Guid*, byte *, uint)"/>
            internal unsafe win32.System.Com.HRESULT LoadVertexShader(in global::System.Guid resourceId, ReadOnlySpan<byte> shaderBuffer)
            {
                fixed (byte *shaderBufferLocal = shaderBuffer)
                {
                    fixed (global::System.Guid*resourceIdLocal = &resourceId)
                    {
                        win32.System.Com.HRESULT __result = this.LoadVertexShader(resourceIdLocal, shaderBufferLocal, (uint)shaderBuffer.Length);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT LoadVertexShader(global::System.Guid*resourceId, byte *shaderBuffer, uint shaderBufferCount)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->LoadVertexShader_13(pThis, resourceId, shaderBuffer, shaderBufferCount);
            }

            /// <inheritdoc cref = "LoadComputeShader(global::System.Guid*, byte *, uint)"/>
            internal unsafe win32.System.Com.HRESULT LoadComputeShader(in global::System.Guid resourceId, ReadOnlySpan<byte> shaderBuffer)
            {
                fixed (byte *shaderBufferLocal = shaderBuffer)
                {
                    fixed (global::System.Guid*resourceIdLocal = &resourceId)
                    {
                        win32.System.Com.HRESULT __result = this.LoadComputeShader(resourceIdLocal, shaderBufferLocal, (uint)shaderBuffer.Length);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT LoadComputeShader(global::System.Guid*resourceId, byte *shaderBuffer, uint shaderBufferCount)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->LoadComputeShader_14(pThis, resourceId, shaderBuffer, shaderBufferCount);
            }

            /// <inheritdoc cref = "IsShaderLoaded(global::System.Guid*)"/>
            internal unsafe win32.System.SystemServices.BOOL IsShaderLoaded(in global::System.Guid shaderId)
            {
                fixed (global::System.Guid*shaderIdLocal = &shaderId)
                {
                    win32.System.SystemServices.BOOL __result = this.IsShaderLoaded(shaderIdLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.SystemServices.BOOL IsShaderLoaded(global::System.Guid*shaderId)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->IsShaderLoaded_15(pThis, shaderId);
            }

            /// <inheritdoc cref = "CreateResourceTexture(global::System.Guid*, win32.Graphics.Direct2D.D2D1_RESOURCE_TEXTURE_PROPERTIES*, byte *, uint *, uint, win32.Graphics.Direct2D.ID2D1ResourceTexture**)"/>
            internal unsafe win32.System.Com.HRESULT CreateResourceTexture(global::System.Guid? resourceId, in win32.Graphics.Direct2D.D2D1_RESOURCE_TEXTURE_PROPERTIES resourceTextureProperties, ReadOnlySpan<byte> data, uint? strides, win32.Graphics.Direct2D.ID2D1ResourceTexture**resourceTexture)
            {
                fixed (byte *dataLocal = data)
                {
                    fixed (win32.Graphics.Direct2D.D2D1_RESOURCE_TEXTURE_PROPERTIES*resourceTexturePropertiesLocal = &resourceTextureProperties)
                    {
                        global::System.Guid resourceIdLocal = resourceId.HasValue ? resourceId.Value : default(global::System.Guid);
                        uint stridesLocal = strides.HasValue ? strides.Value : default(uint);
                        win32.System.Com.HRESULT __result = this.CreateResourceTexture(resourceId.HasValue ? &resourceIdLocal : null, resourceTexturePropertiesLocal, dataLocal, strides.HasValue ? &stridesLocal : null, (uint)data.Length, resourceTexture);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateResourceTexture([Optional] global::System.Guid*resourceId, win32.Graphics.Direct2D.D2D1_RESOURCE_TEXTURE_PROPERTIES*resourceTextureProperties, [Optional] byte *data, [Optional] uint *strides, uint dataSize, win32.Graphics.Direct2D.ID2D1ResourceTexture**resourceTexture)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateResourceTexture_16(pThis, resourceId, resourceTextureProperties, data, strides, dataSize, resourceTexture);
            }

            /// <inheritdoc cref = "FindResourceTexture(global::System.Guid*, win32.Graphics.Direct2D.ID2D1ResourceTexture**)"/>
            internal unsafe win32.System.Com.HRESULT FindResourceTexture(in global::System.Guid resourceId, win32.Graphics.Direct2D.ID2D1ResourceTexture**resourceTexture)
            {
                fixed (global::System.Guid*resourceIdLocal = &resourceId)
                {
                    win32.System.Com.HRESULT __result = this.FindResourceTexture(resourceIdLocal, resourceTexture);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT FindResourceTexture(global::System.Guid*resourceId, win32.Graphics.Direct2D.ID2D1ResourceTexture**resourceTexture)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->FindResourceTexture_17(pThis, resourceId, resourceTexture);
            }

            /// <inheritdoc cref = "CreateVertexBuffer(win32.Graphics.Direct2D.D2D1_VERTEX_BUFFER_PROPERTIES*, global::System.Guid*, win32.Graphics.Direct2D.D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES*, win32.Graphics.Direct2D.ID2D1VertexBuffer**)"/>
            internal unsafe win32.System.Com.HRESULT CreateVertexBuffer(in win32.Graphics.Direct2D.D2D1_VERTEX_BUFFER_PROPERTIES vertexBufferProperties, global::System.Guid? resourceId, win32.Graphics.Direct2D.D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES? customVertexBufferProperties, win32.Graphics.Direct2D.ID2D1VertexBuffer**buffer)
            {
                fixed (win32.Graphics.Direct2D.D2D1_VERTEX_BUFFER_PROPERTIES*vertexBufferPropertiesLocal = &vertexBufferProperties)
                {
                    global::System.Guid resourceIdLocal = resourceId.HasValue ? resourceId.Value : default(global::System.Guid);
                    win32.Graphics.Direct2D.D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES customVertexBufferPropertiesLocal = customVertexBufferProperties.HasValue ? customVertexBufferProperties.Value : default(win32.Graphics.Direct2D.D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES);
                    win32.System.Com.HRESULT __result = this.CreateVertexBuffer(vertexBufferPropertiesLocal, resourceId.HasValue ? &resourceIdLocal : null, customVertexBufferProperties.HasValue ? &customVertexBufferPropertiesLocal : null, buffer);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateVertexBuffer(win32.Graphics.Direct2D.D2D1_VERTEX_BUFFER_PROPERTIES*vertexBufferProperties, [Optional] global::System.Guid*resourceId, [Optional] win32.Graphics.Direct2D.D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES*customVertexBufferProperties, win32.Graphics.Direct2D.ID2D1VertexBuffer**buffer)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateVertexBuffer_18(pThis, vertexBufferProperties, resourceId, customVertexBufferProperties, buffer);
            }

            /// <inheritdoc cref = "FindVertexBuffer(global::System.Guid*, win32.Graphics.Direct2D.ID2D1VertexBuffer**)"/>
            internal unsafe win32.System.Com.HRESULT FindVertexBuffer(in global::System.Guid resourceId, win32.Graphics.Direct2D.ID2D1VertexBuffer**buffer)
            {
                fixed (global::System.Guid*resourceIdLocal = &resourceId)
                {
                    win32.System.Com.HRESULT __result = this.FindVertexBuffer(resourceIdLocal, buffer);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT FindVertexBuffer(global::System.Guid*resourceId, win32.Graphics.Direct2D.ID2D1VertexBuffer**buffer)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->FindVertexBuffer_19(pThis, resourceId, buffer);
            }

            /// <inheritdoc cref = "CreateColorContext(win32.Graphics.Direct2D.D2D1_COLOR_SPACE, byte *, uint, win32.Graphics.Direct2D.ID2D1ColorContext**)"/>
            internal unsafe win32.System.Com.HRESULT CreateColorContext(win32.Graphics.Direct2D.D2D1_COLOR_SPACE space, ReadOnlySpan<byte> profile, win32.Graphics.Direct2D.ID2D1ColorContext**colorContext)
            {
                fixed (byte *profileLocal = profile)
                {
                    win32.System.Com.HRESULT __result = this.CreateColorContext(space, profileLocal, (uint)profile.Length, colorContext);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateColorContext(win32.Graphics.Direct2D.D2D1_COLOR_SPACE space, [Optional] byte *profile, uint profileSize, win32.Graphics.Direct2D.ID2D1ColorContext**colorContext)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateColorContext_20(pThis, space, profile, profileSize, colorContext);
            }

            /// <inheritdoc cref = "CreateColorContextFromFilename(win32.System.SystemServices.PCWSTR, win32.Graphics.Direct2D.ID2D1ColorContext**)"/>
            internal unsafe win32.System.Com.HRESULT CreateColorContextFromFilename(string filename, win32.Graphics.Direct2D.ID2D1ColorContext**colorContext)
            {
                fixed (char *filenameLocal = filename)
                {
                    win32.System.Com.HRESULT __result = this.CreateColorContextFromFilename(filenameLocal, colorContext);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateColorContextFromFilename(win32.System.SystemServices.PCWSTR filename, win32.Graphics.Direct2D.ID2D1ColorContext**colorContext)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateColorContextFromFilename_21(pThis, filename, colorContext);
            }

            internal unsafe win32.System.Com.HRESULT CreateColorContextFromWicColorContext(win32.Graphics.Imaging.IWICColorContext*wicColorContext, win32.Graphics.Direct2D.ID2D1ColorContext**colorContext)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateColorContextFromWicColorContext_22(pThis, wicColorContext, colorContext);
            }

            internal unsafe win32.System.Com.HRESULT CheckFeatureSupport(win32.Graphics.Direct2D.D2D1_FEATURE feature, void *featureSupportData, uint featureSupportDataSize)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CheckFeatureSupport_23(pThis, feature, featureSupportData, featureSupportDataSize);
            }

            internal win32.System.SystemServices.BOOL IsBufferPrecisionSupported(win32.Graphics.Direct2D.D2D1_BUFFER_PRECISION bufferPrecision)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->IsBufferPrecisionSupported_24(pThis, bufferPrecision);
            }

            /// <inheritdoc cref = "CreateLookupTable3D(win32.Graphics.Direct2D.D2D1_BUFFER_PRECISION, uint *, byte *, uint, uint *, win32.Graphics.Direct2D.ID2D1LookupTable3D**)"/>
            internal unsafe win32.System.Com.HRESULT CreateLookupTable3D(win32.Graphics.Direct2D.D2D1_BUFFER_PRECISION precision, ReadOnlySpan<uint> extents, ReadOnlySpan<byte> data, ReadOnlySpan<uint> strides, win32.Graphics.Direct2D.ID2D1LookupTable3D**lookupTable)
            {
                fixed (uint *stridesLocal = strides)
                {
                    fixed (byte *dataLocal = data)
                    {
                        fixed (uint *extentsLocal = extents)
                        {
                            if (extents.Length < 3)
                                throw new ArgumentException();
                            if (strides.Length < 2)
                                throw new ArgumentException();
                            win32.System.Com.HRESULT __result = this.CreateLookupTable3D(precision, extentsLocal, dataLocal, (uint)data.Length, stridesLocal, lookupTable);
                            return __result;
                        }
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateLookupTable3D(win32.Graphics.Direct2D.D2D1_BUFFER_PRECISION precision, uint *extents, byte *data, uint dataCount, uint *strides, win32.Graphics.Direct2D.ID2D1LookupTable3D**lookupTable)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateLookupTable3D_25(pThis, precision, extents, data, dataCount, strides, lookupTable);
            }

            internal unsafe win32.System.Com.HRESULT CreateColorContextFromDxgiColorSpace(win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE colorSpace, win32.Graphics.Direct2D.ID2D1ColorContext1**colorContext)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateColorContextFromDxgiColorSpace_26(pThis, colorSpace, colorContext);
            }

            /// <inheritdoc cref = "CreateColorContextFromSimpleColorProfile(win32.Graphics.Direct2D.D2D1_SIMPLE_COLOR_PROFILE*, win32.Graphics.Direct2D.ID2D1ColorContext1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateColorContextFromSimpleColorProfile(in win32.Graphics.Direct2D.D2D1_SIMPLE_COLOR_PROFILE simpleProfile, win32.Graphics.Direct2D.ID2D1ColorContext1**colorContext)
            {
                fixed (win32.Graphics.Direct2D.D2D1_SIMPLE_COLOR_PROFILE*simpleProfileLocal = &simpleProfile)
                {
                    win32.System.Com.HRESULT __result = this.CreateColorContextFromSimpleColorProfile(simpleProfileLocal, colorContext);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateColorContextFromSimpleColorProfile(win32.Graphics.Direct2D.D2D1_SIMPLE_COLOR_PROFILE*simpleProfile, win32.Graphics.Direct2D.ID2D1ColorContext1**colorContext)
            {
                fixed (ID2D1EffectContext2*pThis = &this)
                    return lpVtbl->CreateColorContextFromSimpleColorProfile_27(pThis, simpleProfile, colorContext);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, float *, float *, void>GetDpi_4;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, global::System.Guid*, win32.Graphics.Direct2D.ID2D1Effect**, win32.System.Com.HRESULT>CreateEffect_5;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*, uint, win32.Graphics.Direct3D11.D3D_FEATURE_LEVEL*, win32.System.Com.HRESULT>GetMaximumSupportedFeatureLevel_6;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Direct2D.ID2D1Effect*, win32.Graphics.Direct2D.ID2D1TransformNode**, win32.System.Com.HRESULT>CreateTransformNodeFromEffect_7;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, uint, win32.Graphics.Direct2D.D2D1_BLEND_DESCRIPTION*, win32.Graphics.Direct2D.ID2D1BlendTransform**, win32.System.Com.HRESULT>CreateBlendTransform_8;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Direct2D.D2D1_EXTEND_MODE, win32.Graphics.Direct2D.D2D1_EXTEND_MODE, win32.Graphics.Direct2D.ID2D1BorderTransform**, win32.System.Com.HRESULT>CreateBorderTransform_9;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.UI.DisplayDevices.POINT, win32.Graphics.Direct2D.ID2D1OffsetTransform**, win32.System.Com.HRESULT>CreateOffsetTransform_10;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.UI.DisplayDevices.RECT*, win32.Graphics.Direct2D.ID2D1BoundsAdjustmentTransform**, win32.System.Com.HRESULT>CreateBoundsAdjustmentTransform_11;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, global::System.Guid*, byte *, uint, win32.System.Com.HRESULT>LoadPixelShader_12;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, global::System.Guid*, byte *, uint, win32.System.Com.HRESULT>LoadVertexShader_13;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, global::System.Guid*, byte *, uint, win32.System.Com.HRESULT>LoadComputeShader_14;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, global::System.Guid*, win32.System.SystemServices.BOOL>IsShaderLoaded_15;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, global::System.Guid*, win32.Graphics.Direct2D.D2D1_RESOURCE_TEXTURE_PROPERTIES*, byte *, uint *, uint, win32.Graphics.Direct2D.ID2D1ResourceTexture**, win32.System.Com.HRESULT>CreateResourceTexture_16;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, global::System.Guid*, win32.Graphics.Direct2D.ID2D1ResourceTexture**, win32.System.Com.HRESULT>FindResourceTexture_17;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Direct2D.D2D1_VERTEX_BUFFER_PROPERTIES*, global::System.Guid*, win32.Graphics.Direct2D.D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES*, win32.Graphics.Direct2D.ID2D1VertexBuffer**, win32.System.Com.HRESULT>CreateVertexBuffer_18;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, global::System.Guid*, win32.Graphics.Direct2D.ID2D1VertexBuffer**, win32.System.Com.HRESULT>FindVertexBuffer_19;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Direct2D.D2D1_COLOR_SPACE, byte *, uint, win32.Graphics.Direct2D.ID2D1ColorContext**, win32.System.Com.HRESULT>CreateColorContext_20;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.System.SystemServices.PCWSTR, win32.Graphics.Direct2D.ID2D1ColorContext**, win32.System.Com.HRESULT>CreateColorContextFromFilename_21;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Imaging.IWICColorContext*, win32.Graphics.Direct2D.ID2D1ColorContext**, win32.System.Com.HRESULT>CreateColorContextFromWicColorContext_22;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Direct2D.D2D1_FEATURE, void *, uint, win32.System.Com.HRESULT>CheckFeatureSupport_23;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Direct2D.D2D1_BUFFER_PRECISION, win32.System.SystemServices.BOOL>IsBufferPrecisionSupported_24;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Direct2D.D2D1_BUFFER_PRECISION, uint *, byte *, uint, uint *, win32.Graphics.Direct2D.ID2D1LookupTable3D**, win32.System.Com.HRESULT>CreateLookupTable3D_25;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Dxgi.DXGI_COLOR_SPACE_TYPE, win32.Graphics.Direct2D.ID2D1ColorContext1**, win32.System.Com.HRESULT>CreateColorContextFromDxgiColorSpace_26;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectContext2*, win32.Graphics.Direct2D.D2D1_SIMPLE_COLOR_PROFILE*, win32.Graphics.Direct2D.ID2D1ColorContext1**, win32.System.Com.HRESULT>CreateColorContextFromSimpleColorProfile_27;
            }

            private Vtbl*lpVtbl;
        }
    }
}