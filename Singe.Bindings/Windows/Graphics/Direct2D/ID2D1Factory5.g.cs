// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("C4349994-838E-4B0F-8CAB-44997D9EEACC")]
        internal unsafe struct ID2D1Factory5
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal win32.System.Com.HRESULT ReloadSystemMetrics()
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->ReloadSystemMetrics_4(pThis);
            }

            /// <inheritdoc cref = "GetDesktopDpi(float *, float *)"/>
            internal unsafe void GetDesktopDpi(out float dpiX, out float dpiY)
            {
                fixed (float *dpiYLocal = &dpiY)
                {
                    fixed (float *dpiXLocal = &dpiX)
                    {
                        this.GetDesktopDpi(dpiXLocal, dpiYLocal);
                    }
                }
            }

            internal unsafe void GetDesktopDpi(float *dpiX, float *dpiY)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    lpVtbl->GetDesktopDpi_5(pThis, dpiX, dpiY);
            }

            /// <inheritdoc cref = "CreateRectangleGeometry(win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.ID2D1RectangleGeometry**)"/>
            internal unsafe win32.System.Com.HRESULT CreateRectangleGeometry(in win32.Graphics.Direct2D.D2D_RECT_F rectangle, win32.Graphics.Direct2D.ID2D1RectangleGeometry**rectangleGeometry)
            {
                fixed (win32.Graphics.Direct2D.D2D_RECT_F*rectangleLocal = &rectangle)
                {
                    win32.System.Com.HRESULT __result = this.CreateRectangleGeometry(rectangleLocal, rectangleGeometry);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateRectangleGeometry(win32.Graphics.Direct2D.D2D_RECT_F*rectangle, win32.Graphics.Direct2D.ID2D1RectangleGeometry**rectangleGeometry)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateRectangleGeometry_6(pThis, rectangle, rectangleGeometry);
            }

            /// <inheritdoc cref = "CreateRoundedRectangleGeometry(win32.Graphics.Direct2D.D2D1_ROUNDED_RECT*, win32.Graphics.Direct2D.ID2D1RoundedRectangleGeometry**)"/>
            internal unsafe win32.System.Com.HRESULT CreateRoundedRectangleGeometry(in win32.Graphics.Direct2D.D2D1_ROUNDED_RECT roundedRectangle, win32.Graphics.Direct2D.ID2D1RoundedRectangleGeometry**roundedRectangleGeometry)
            {
                fixed (win32.Graphics.Direct2D.D2D1_ROUNDED_RECT*roundedRectangleLocal = &roundedRectangle)
                {
                    win32.System.Com.HRESULT __result = this.CreateRoundedRectangleGeometry(roundedRectangleLocal, roundedRectangleGeometry);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateRoundedRectangleGeometry(win32.Graphics.Direct2D.D2D1_ROUNDED_RECT*roundedRectangle, win32.Graphics.Direct2D.ID2D1RoundedRectangleGeometry**roundedRectangleGeometry)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateRoundedRectangleGeometry_7(pThis, roundedRectangle, roundedRectangleGeometry);
            }

            /// <inheritdoc cref = "CreateEllipseGeometry(win32.Graphics.Direct2D.D2D1_ELLIPSE*, win32.Graphics.Direct2D.ID2D1EllipseGeometry**)"/>
            internal unsafe win32.System.Com.HRESULT CreateEllipseGeometry(in win32.Graphics.Direct2D.D2D1_ELLIPSE ellipse, win32.Graphics.Direct2D.ID2D1EllipseGeometry**ellipseGeometry)
            {
                fixed (win32.Graphics.Direct2D.D2D1_ELLIPSE*ellipseLocal = &ellipse)
                {
                    win32.System.Com.HRESULT __result = this.CreateEllipseGeometry(ellipseLocal, ellipseGeometry);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateEllipseGeometry(win32.Graphics.Direct2D.D2D1_ELLIPSE*ellipse, win32.Graphics.Direct2D.ID2D1EllipseGeometry**ellipseGeometry)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateEllipseGeometry_8(pThis, ellipse, ellipseGeometry);
            }

            internal unsafe win32.System.Com.HRESULT CreateGeometryGroup(win32.Graphics.Direct2D.D2D1_FILL_MODE fillMode, win32.Graphics.Direct2D.ID2D1Geometry**geometries, uint geometriesCount, win32.Graphics.Direct2D.ID2D1GeometryGroup**geometryGroup)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateGeometryGroup_9(pThis, fillMode, geometries, geometriesCount, geometryGroup);
            }

            /// <inheritdoc cref = "CreateTransformedGeometry(win32.Graphics.Direct2D.ID2D1Geometry*, win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*, win32.Graphics.Direct2D.ID2D1TransformedGeometry**)"/>
            internal unsafe win32.System.Com.HRESULT CreateTransformedGeometry(win32.Graphics.Direct2D.ID2D1Geometry*sourceGeometry, in win32.Graphics.Direct2D.D2D_MATRIX_3X2_F transform, win32.Graphics.Direct2D.ID2D1TransformedGeometry**transformedGeometry)
            {
                fixed (win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*transformLocal = &transform)
                {
                    win32.System.Com.HRESULT __result = this.CreateTransformedGeometry(sourceGeometry, transformLocal, transformedGeometry);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateTransformedGeometry(win32.Graphics.Direct2D.ID2D1Geometry*sourceGeometry, win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*transform, win32.Graphics.Direct2D.ID2D1TransformedGeometry**transformedGeometry)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateTransformedGeometry_10(pThis, sourceGeometry, transform, transformedGeometry);
            }

            internal unsafe win32.System.Com.HRESULT CreatePathGeometry(win32.Graphics.Direct2D.ID2D1PathGeometry**pathGeometry)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreatePathGeometry_11(pThis, pathGeometry);
            }

            /// <inheritdoc cref = "CreateStrokeStyle(win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES*, float *, uint, win32.Graphics.Direct2D.ID2D1StrokeStyle**)"/>
            internal unsafe win32.System.Com.HRESULT CreateStrokeStyle(in win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES strokeStyleProperties, ReadOnlySpan<float> dashes, win32.Graphics.Direct2D.ID2D1StrokeStyle**strokeStyle)
            {
                fixed (float *dashesLocal = dashes)
                {
                    fixed (win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES*strokeStylePropertiesLocal = &strokeStyleProperties)
                    {
                        win32.System.Com.HRESULT __result = this.CreateStrokeStyle(strokeStylePropertiesLocal, dashesLocal, (uint)dashes.Length, strokeStyle);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateStrokeStyle(win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES*strokeStyleProperties, [Optional] float *dashes, uint dashesCount, win32.Graphics.Direct2D.ID2D1StrokeStyle**strokeStyle)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateStrokeStyle_12(pThis, strokeStyleProperties, dashes, dashesCount, strokeStyle);
            }

            /// <inheritdoc cref = "CreateDrawingStateBlock(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*, win32.Graphics.DirectWrite.IDWriteRenderingParams*, win32.Graphics.Direct2D.ID2D1DrawingStateBlock**)"/>
            internal unsafe win32.System.Com.HRESULT CreateDrawingStateBlock(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION? drawingStateDescription, win32.Graphics.DirectWrite.IDWriteRenderingParams*textRenderingParams, win32.Graphics.Direct2D.ID2D1DrawingStateBlock**drawingStateBlock)
            {
                win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION drawingStateDescriptionLocal = drawingStateDescription.HasValue ? drawingStateDescription.Value : default(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION);
                win32.System.Com.HRESULT __result = this.CreateDrawingStateBlock(drawingStateDescription.HasValue ? &drawingStateDescriptionLocal : null, textRenderingParams, drawingStateBlock);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT CreateDrawingStateBlock([Optional] win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*drawingStateDescription, [Optional] win32.Graphics.DirectWrite.IDWriteRenderingParams*textRenderingParams, win32.Graphics.Direct2D.ID2D1DrawingStateBlock**drawingStateBlock)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateDrawingStateBlock_13(pThis, drawingStateDescription, textRenderingParams, drawingStateBlock);
            }

            /// <inheritdoc cref = "CreateWicBitmapRenderTarget(win32.Graphics.Imaging.IWICBitmap*, win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.ID2D1RenderTarget**)"/>
            internal unsafe win32.System.Com.HRESULT CreateWicBitmapRenderTarget(win32.Graphics.Imaging.IWICBitmap*target, in win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES renderTargetProperties, win32.Graphics.Direct2D.ID2D1RenderTarget**renderTarget)
            {
                fixed (win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*renderTargetPropertiesLocal = &renderTargetProperties)
                {
                    win32.System.Com.HRESULT __result = this.CreateWicBitmapRenderTarget(target, renderTargetPropertiesLocal, renderTarget);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateWicBitmapRenderTarget(win32.Graphics.Imaging.IWICBitmap*target, win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*renderTargetProperties, win32.Graphics.Direct2D.ID2D1RenderTarget**renderTarget)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateWicBitmapRenderTarget_14(pThis, target, renderTargetProperties, renderTarget);
            }

            /// <inheritdoc cref = "CreateHwndRenderTarget(win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.D2D1_HWND_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.ID2D1HwndRenderTarget**)"/>
            internal unsafe win32.System.Com.HRESULT CreateHwndRenderTarget(in win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES renderTargetProperties, in win32.Graphics.Direct2D.D2D1_HWND_RENDER_TARGET_PROPERTIES hwndRenderTargetProperties, win32.Graphics.Direct2D.ID2D1HwndRenderTarget**hwndRenderTarget)
            {
                fixed (win32.Graphics.Direct2D.D2D1_HWND_RENDER_TARGET_PROPERTIES*hwndRenderTargetPropertiesLocal = &hwndRenderTargetProperties)
                {
                    fixed (win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*renderTargetPropertiesLocal = &renderTargetProperties)
                    {
                        win32.System.Com.HRESULT __result = this.CreateHwndRenderTarget(renderTargetPropertiesLocal, hwndRenderTargetPropertiesLocal, hwndRenderTarget);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateHwndRenderTarget(win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*renderTargetProperties, win32.Graphics.Direct2D.D2D1_HWND_RENDER_TARGET_PROPERTIES*hwndRenderTargetProperties, win32.Graphics.Direct2D.ID2D1HwndRenderTarget**hwndRenderTarget)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateHwndRenderTarget_15(pThis, renderTargetProperties, hwndRenderTargetProperties, hwndRenderTarget);
            }

            /// <inheritdoc cref = "CreateDxgiSurfaceRenderTarget(win32.Graphics.Dxgi.IDXGISurface*, win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.ID2D1RenderTarget**)"/>
            internal unsafe win32.System.Com.HRESULT CreateDxgiSurfaceRenderTarget(win32.Graphics.Dxgi.IDXGISurface*dxgiSurface, in win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES renderTargetProperties, win32.Graphics.Direct2D.ID2D1RenderTarget**renderTarget)
            {
                fixed (win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*renderTargetPropertiesLocal = &renderTargetProperties)
                {
                    win32.System.Com.HRESULT __result = this.CreateDxgiSurfaceRenderTarget(dxgiSurface, renderTargetPropertiesLocal, renderTarget);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateDxgiSurfaceRenderTarget(win32.Graphics.Dxgi.IDXGISurface*dxgiSurface, win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*renderTargetProperties, win32.Graphics.Direct2D.ID2D1RenderTarget**renderTarget)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateDxgiSurfaceRenderTarget_16(pThis, dxgiSurface, renderTargetProperties, renderTarget);
            }

            /// <inheritdoc cref = "CreateDCRenderTarget(win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.ID2D1DCRenderTarget**)"/>
            internal unsafe win32.System.Com.HRESULT CreateDCRenderTarget(in win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES renderTargetProperties, win32.Graphics.Direct2D.ID2D1DCRenderTarget**dcRenderTarget)
            {
                fixed (win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*renderTargetPropertiesLocal = &renderTargetProperties)
                {
                    win32.System.Com.HRESULT __result = this.CreateDCRenderTarget(renderTargetPropertiesLocal, dcRenderTarget);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateDCRenderTarget(win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*renderTargetProperties, win32.Graphics.Direct2D.ID2D1DCRenderTarget**dcRenderTarget)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateDCRenderTarget_17(pThis, renderTargetProperties, dcRenderTarget);
            }

            /// <summary>Creates an ID2D1Device4 object.</summary>
            /// <param name = "dxgiDevice">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a>*</b></para>
            /// <para>The IDXGIDevice object used when creating the <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns an HRESULT success or error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CreateDevice(win32.Graphics.Dxgi.IDXGIDevice*dxgiDevice, win32.Graphics.Direct2D.ID2D1Device**d2dDevice)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateDevice_18(pThis, dxgiDevice, d2dDevice);
            }

            /// <inheritdoc cref = "CreateStrokeStyle(win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES1*, float *, uint, win32.Graphics.Direct2D.ID2D1StrokeStyle1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateStrokeStyle(in win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES1 strokeStyleProperties, ReadOnlySpan<float> dashes, win32.Graphics.Direct2D.ID2D1StrokeStyle1**strokeStyle)
            {
                fixed (float *dashesLocal = dashes)
                {
                    fixed (win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES1*strokeStylePropertiesLocal = &strokeStyleProperties)
                    {
                        win32.System.Com.HRESULT __result = this.CreateStrokeStyle(strokeStylePropertiesLocal, dashesLocal, (uint)dashes.Length, strokeStyle);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT CreateStrokeStyle(win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES1*strokeStyleProperties, [Optional] float *dashes, uint dashesCount, win32.Graphics.Direct2D.ID2D1StrokeStyle1**strokeStyle)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateStrokeStyle_19(pThis, strokeStyleProperties, dashes, dashesCount, strokeStyle);
            }

            internal unsafe win32.System.Com.HRESULT CreatePathGeometry(win32.Graphics.Direct2D.ID2D1PathGeometry1**pathGeometry)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreatePathGeometry_20(pThis, pathGeometry);
            }

            /// <inheritdoc cref = "CreateDrawingStateBlock(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*, win32.Graphics.DirectWrite.IDWriteRenderingParams*, win32.Graphics.Direct2D.ID2D1DrawingStateBlock1**)"/>
            internal unsafe win32.System.Com.HRESULT CreateDrawingStateBlock(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1? drawingStateDescription, win32.Graphics.DirectWrite.IDWriteRenderingParams*textRenderingParams, win32.Graphics.Direct2D.ID2D1DrawingStateBlock1**drawingStateBlock)
            {
                win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1 drawingStateDescriptionLocal = drawingStateDescription.HasValue ? drawingStateDescription.Value : default(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1);
                win32.System.Com.HRESULT __result = this.CreateDrawingStateBlock(drawingStateDescription.HasValue ? &drawingStateDescriptionLocal : null, textRenderingParams, drawingStateBlock);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT CreateDrawingStateBlock([Optional] win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*drawingStateDescription, [Optional] win32.Graphics.DirectWrite.IDWriteRenderingParams*textRenderingParams, win32.Graphics.Direct2D.ID2D1DrawingStateBlock1**drawingStateBlock)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateDrawingStateBlock_21(pThis, drawingStateDescription, textRenderingParams, drawingStateBlock);
            }

            internal unsafe win32.System.Com.HRESULT CreateGdiMetafile(win32.Storage.StructuredStorage.IStream*metafileStream, win32.Graphics.Direct2D.ID2D1GdiMetafile**metafile)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateGdiMetafile_22(pThis, metafileStream, metafile);
            }

            /// <inheritdoc cref = "RegisterEffectFromStream(global::System.Guid*, win32.Storage.StructuredStorage.IStream*, win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING*, uint, delegate *unmanaged[Stdcall]{win32.System.Com.IUnknown**, win32.System.Com.HRESULT})"/>
            internal unsafe win32.System.Com.HRESULT RegisterEffectFromStream(in global::System.Guid classId, win32.Storage.StructuredStorage.IStream*propertyXml, ReadOnlySpan<win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING> bindings, delegate *unmanaged[Stdcall]<win32.System.Com.IUnknown**, win32.System.Com.HRESULT>effectFactory)
            {
                fixed (win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING*bindingsLocal = bindings)
                {
                    fixed (global::System.Guid*classIdLocal = &classId)
                    {
                        win32.System.Com.HRESULT __result = this.RegisterEffectFromStream(classIdLocal, propertyXml, bindingsLocal, (uint)bindings.Length, effectFactory);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT RegisterEffectFromStream(global::System.Guid*classId, win32.Storage.StructuredStorage.IStream*propertyXml, [Optional] win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING*bindings, uint bindingsCount, delegate *unmanaged[Stdcall]<win32.System.Com.IUnknown**, win32.System.Com.HRESULT>effectFactory)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->RegisterEffectFromStream_23(pThis, classId, propertyXml, bindings, bindingsCount, effectFactory);
            }

            /// <inheritdoc cref = "RegisterEffectFromString(global::System.Guid*, win32.System.SystemServices.PCWSTR, win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING*, uint, delegate *unmanaged[Stdcall]{win32.System.Com.IUnknown**, win32.System.Com.HRESULT})"/>
            internal unsafe win32.System.Com.HRESULT RegisterEffectFromString(in global::System.Guid classId, string propertyXml, ReadOnlySpan<win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING> bindings, delegate *unmanaged[Stdcall]<win32.System.Com.IUnknown**, win32.System.Com.HRESULT>effectFactory)
            {
                fixed (win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING*bindingsLocal = bindings)
                {
                    fixed (char *propertyXmlLocal = propertyXml)
                    {
                        fixed (global::System.Guid*classIdLocal = &classId)
                        {
                            win32.System.Com.HRESULT __result = this.RegisterEffectFromString(classIdLocal, propertyXmlLocal, bindingsLocal, (uint)bindings.Length, effectFactory);
                            return __result;
                        }
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT RegisterEffectFromString(global::System.Guid*classId, win32.System.SystemServices.PCWSTR propertyXml, [Optional] win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING*bindings, uint bindingsCount, delegate *unmanaged[Stdcall]<win32.System.Com.IUnknown**, win32.System.Com.HRESULT>effectFactory)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->RegisterEffectFromString_24(pThis, classId, propertyXml, bindings, bindingsCount, effectFactory);
            }

            /// <inheritdoc cref = "UnregisterEffect(global::System.Guid*)"/>
            internal unsafe win32.System.Com.HRESULT UnregisterEffect(in global::System.Guid classId)
            {
                fixed (global::System.Guid*classIdLocal = &classId)
                {
                    win32.System.Com.HRESULT __result = this.UnregisterEffect(classIdLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT UnregisterEffect(global::System.Guid*classId)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->UnregisterEffect_25(pThis, classId);
            }

            /// <inheritdoc cref = "GetRegisteredEffects(global::System.Guid*, uint, uint *, uint *)"/>
            internal unsafe win32.System.Com.HRESULT GetRegisteredEffects(Span<global::System.Guid> effects, uint *effectsReturned, uint *effectsRegistered)
            {
                fixed (global::System.Guid*effectsLocal = effects)
                {
                    win32.System.Com.HRESULT __result = this.GetRegisteredEffects(effectsLocal, (uint)effects.Length, effectsReturned, effectsRegistered);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetRegisteredEffects([Optional] global::System.Guid*effects, uint effectsCount, [Optional] uint *effectsReturned, [Optional] uint *effectsRegistered)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->GetRegisteredEffects_26(pThis, effects, effectsCount, effectsReturned, effectsRegistered);
            }

            /// <inheritdoc cref = "GetEffectProperties(global::System.Guid*, win32.Graphics.Direct2D.ID2D1Properties**)"/>
            internal unsafe win32.System.Com.HRESULT GetEffectProperties(in global::System.Guid effectId, win32.Graphics.Direct2D.ID2D1Properties**properties)
            {
                fixed (global::System.Guid*effectIdLocal = &effectId)
                {
                    win32.System.Com.HRESULT __result = this.GetEffectProperties(effectIdLocal, properties);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetEffectProperties(global::System.Guid*effectId, win32.Graphics.Direct2D.ID2D1Properties**properties)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->GetEffectProperties_27(pThis, effectId, properties);
            }

            /// <summary>Creates an ID2D1Device4 object.</summary>
            /// <param name = "dxgiDevice">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a>*</b></para>
            /// <para>The IDXGIDevice object used when creating the <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns an HRESULT success or error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CreateDevice(win32.Graphics.Dxgi.IDXGIDevice*dxgiDevice, win32.Graphics.Direct2D.ID2D1Device1**d2dDevice1)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateDevice_28(pThis, dxgiDevice, d2dDevice1);
            }

            /// <summary>Creates an ID2D1Device4 object.</summary>
            /// <param name = "dxgiDevice">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a>*</b></para>
            /// <para>The IDXGIDevice object used when creating the <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns an HRESULT success or error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CreateDevice(win32.Graphics.Dxgi.IDXGIDevice*dxgiDevice, win32.Graphics.Direct2D.ID2D1Device2**d2dDevice2)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateDevice_29(pThis, dxgiDevice, d2dDevice2);
            }

            /// <summary>Creates an ID2D1Device4 object.</summary>
            /// <param name = "dxgiDevice">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a>*</b></para>
            /// <para>The IDXGIDevice object used when creating the <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns an HRESULT success or error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CreateDevice(win32.Graphics.Dxgi.IDXGIDevice*dxgiDevice, win32.Graphics.Direct2D.ID2D1Device3**d2dDevice3)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateDevice_30(pThis, dxgiDevice, d2dDevice3);
            }

            /// <summary>Creates an ID2D1Device4 object.</summary>
            /// <param name = "dxgiDevice">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a>*</b></para>
            /// <para>The IDXGIDevice object used when creating the <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "d2dDevice4">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a>**</b></para>
            /// <para>The requested <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a> object.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            /// <para>This method returns an HRESULT success or error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT CreateDevice(win32.Graphics.Dxgi.IDXGIDevice*dxgiDevice, win32.Graphics.Direct2D.ID2D1Device4**d2dDevice4)
            {
                fixed (ID2D1Factory5*pThis = &this)
                    return lpVtbl->CreateDevice_31(pThis, dxgiDevice, d2dDevice4);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.System.Com.HRESULT>ReloadSystemMetrics_4;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, float *, float *, void>GetDesktopDpi_5;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.ID2D1RectangleGeometry**, win32.System.Com.HRESULT>CreateRectangleGeometry_6;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D1_ROUNDED_RECT*, win32.Graphics.Direct2D.ID2D1RoundedRectangleGeometry**, win32.System.Com.HRESULT>CreateRoundedRectangleGeometry_7;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D1_ELLIPSE*, win32.Graphics.Direct2D.ID2D1EllipseGeometry**, win32.System.Com.HRESULT>CreateEllipseGeometry_8;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D1_FILL_MODE, win32.Graphics.Direct2D.ID2D1Geometry**, uint, win32.Graphics.Direct2D.ID2D1GeometryGroup**, win32.System.Com.HRESULT>CreateGeometryGroup_9;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.ID2D1Geometry*, win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*, win32.Graphics.Direct2D.ID2D1TransformedGeometry**, win32.System.Com.HRESULT>CreateTransformedGeometry_10;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.ID2D1PathGeometry**, win32.System.Com.HRESULT>CreatePathGeometry_11;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES*, float *, uint, win32.Graphics.Direct2D.ID2D1StrokeStyle**, win32.System.Com.HRESULT>CreateStrokeStyle_12;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*, win32.Graphics.DirectWrite.IDWriteRenderingParams*, win32.Graphics.Direct2D.ID2D1DrawingStateBlock**, win32.System.Com.HRESULT>CreateDrawingStateBlock_13;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Imaging.IWICBitmap*, win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.ID2D1RenderTarget**, win32.System.Com.HRESULT>CreateWicBitmapRenderTarget_14;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.D2D1_HWND_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.ID2D1HwndRenderTarget**, win32.System.Com.HRESULT>CreateHwndRenderTarget_15;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Dxgi.IDXGISurface*, win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.ID2D1RenderTarget**, win32.System.Com.HRESULT>CreateDxgiSurfaceRenderTarget_16;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D1_RENDER_TARGET_PROPERTIES*, win32.Graphics.Direct2D.ID2D1DCRenderTarget**, win32.System.Com.HRESULT>CreateDCRenderTarget_17;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Dxgi.IDXGIDevice*, win32.Graphics.Direct2D.ID2D1Device**, win32.System.Com.HRESULT>CreateDevice_18;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D1_STROKE_STYLE_PROPERTIES1*, float *, uint, win32.Graphics.Direct2D.ID2D1StrokeStyle1**, win32.System.Com.HRESULT>CreateStrokeStyle_19;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.ID2D1PathGeometry1**, win32.System.Com.HRESULT>CreatePathGeometry_20;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*, win32.Graphics.DirectWrite.IDWriteRenderingParams*, win32.Graphics.Direct2D.ID2D1DrawingStateBlock1**, win32.System.Com.HRESULT>CreateDrawingStateBlock_21;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Storage.StructuredStorage.IStream*, win32.Graphics.Direct2D.ID2D1GdiMetafile**, win32.System.Com.HRESULT>CreateGdiMetafile_22;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, global::System.Guid*, win32.Storage.StructuredStorage.IStream*, win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING*, uint, delegate *unmanaged[Stdcall]<win32.System.Com.IUnknown**, win32.System.Com.HRESULT>, win32.System.Com.HRESULT>RegisterEffectFromStream_23;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, global::System.Guid*, win32.System.SystemServices.PCWSTR, win32.Graphics.Direct2D.D2D1_PROPERTY_BINDING*, uint, delegate *unmanaged[Stdcall]<win32.System.Com.IUnknown**, win32.System.Com.HRESULT>, win32.System.Com.HRESULT>RegisterEffectFromString_24;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, global::System.Guid*, win32.System.Com.HRESULT>UnregisterEffect_25;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, global::System.Guid*, uint, uint *, uint *, win32.System.Com.HRESULT>GetRegisteredEffects_26;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, global::System.Guid*, win32.Graphics.Direct2D.ID2D1Properties**, win32.System.Com.HRESULT>GetEffectProperties_27;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Dxgi.IDXGIDevice*, win32.Graphics.Direct2D.ID2D1Device1**, win32.System.Com.HRESULT>CreateDevice_28;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Dxgi.IDXGIDevice*, win32.Graphics.Direct2D.ID2D1Device2**, win32.System.Com.HRESULT>CreateDevice_29;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Dxgi.IDXGIDevice*, win32.Graphics.Direct2D.ID2D1Device3**, win32.System.Com.HRESULT>CreateDevice_30;
                internal delegate *unmanaged[Stdcall]<ID2D1Factory5*, win32.Graphics.Dxgi.IDXGIDevice*, win32.Graphics.Direct2D.ID2D1Device4**, win32.System.Com.HRESULT>CreateDevice_31;
            }

            private Vtbl*lpVtbl;
        }
    }
}