// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("A248FD3F-3E6C-4E63-9F03-7F68ECC91DB9")]
        internal unsafe struct ID2D1EffectImpl
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1EffectImpl*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1EffectImpl*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1EffectImpl*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <summary>The effect can use this method to do one time initialization tasks.</summary>
            /// <param name = "effectContext">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1effectauthor/nn-d2d1effectauthor-id2d1effectcontext">ID2D1EffectContext</a>*</b></para>
            /// <para>An internal context interface that creates and returns effect author–centric types.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "transformGraph">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1effectauthor/nn-d2d1effectauthor-id2d1transformgraph">ID2D1TransformGraph</a>*</b></para>
            /// <para>The effect can populate the transform graph with a topology and can update it later.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If the method succeeds, it returns <b>S_OK</b>. If it fails, it returns an <b>HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-initialize">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Initialize(win32.Graphics.Direct2D.ID2D1EffectContext*effectContext, win32.Graphics.Direct2D.ID2D1TransformGraph*transformGraph)
            {
                fixed (ID2D1EffectImpl*pThis = &this)
                    return lpVtbl->Initialize_4(pThis, effectContext, transformGraph);
            }

            /// <summary>Prepares an effect for the rendering process.</summary>
            /// <param name = "changeType">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1effectauthor/ne-d2d1effectauthor-d2d1_change_type">D2D1_CHANGE_TYPE</a></b></para>
            /// <para>Indicates the type of change the effect should expect.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-prepareforrender#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If the method succeeds, it returns <b>S_OK</b>. If it fails, it returns an <b>HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-prepareforrender">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT PrepareForRender(win32.Graphics.Direct2D.D2D1_CHANGE_TYPE changeType)
            {
                fixed (ID2D1EffectImpl*pThis = &this)
                    return lpVtbl->PrepareForRender_5(pThis, changeType);
            }

            /// <summary>The renderer calls this method to provide the effect implementation with a way to specify its transform graph and transform graph changes.</summary>
            /// <param name = "transformGraph">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1effectauthor/nn-d2d1effectauthor-id2d1transformgraph">ID2D1TransformGraph</a>*</b></para>
            /// <para>The graph to which the effect describes its transform topology through the SetDescription call.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-setgraph#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>An error that prevents the effect from being initialized if called as part of the CreateEffect call. If the effect fails a subsequent SetGraph call:</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-setgraph">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT SetGraph(win32.Graphics.Direct2D.ID2D1TransformGraph*transformGraph)
            {
                fixed (ID2D1EffectImpl*pThis = &this)
                    return lpVtbl->SetGraph_6(pThis, transformGraph);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1EffectImpl*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectImpl*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectImpl*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectImpl*, win32.Graphics.Direct2D.ID2D1EffectContext*, win32.Graphics.Direct2D.ID2D1TransformGraph*, win32.System.Com.HRESULT>Initialize_4;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectImpl*, win32.Graphics.Direct2D.D2D1_CHANGE_TYPE, win32.System.Com.HRESULT>PrepareForRender_5;
                internal delegate *unmanaged[Stdcall]<ID2D1EffectImpl*, win32.Graphics.Direct2D.ID2D1TransformGraph*, win32.System.Com.HRESULT>SetGraph_6;
            }

            private Vtbl*lpVtbl;
        }
    }
}