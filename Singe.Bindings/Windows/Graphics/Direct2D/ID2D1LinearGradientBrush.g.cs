// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("2CD906AB-12E2-11DC-9FED-001143A055F9")]
        internal unsafe struct ID2D1LinearGradientBrush
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal unsafe void GetFactory(win32.Graphics.Direct2D.ID2D1Factory**factory)
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    lpVtbl->GetFactory_4(pThis, factory);
            }

            internal void SetOpacity(float opacity)
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    lpVtbl->SetOpacity_5(pThis, opacity);
            }

            /// <inheritdoc cref = "SetTransform(win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*)"/>
            internal unsafe void SetTransform(in win32.Graphics.Direct2D.D2D_MATRIX_3X2_F transform)
            {
                fixed (win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*transformLocal = &transform)
                {
                    this.SetTransform(transformLocal);
                }
            }

            internal unsafe void SetTransform(win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*transform)
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    lpVtbl->SetTransform_6(pThis, transform);
            }

            internal float GetOpacity()
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    return lpVtbl->GetOpacity_7(pThis);
            }

            /// <inheritdoc cref = "GetTransform(win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*)"/>
            internal unsafe void GetTransform(out win32.Graphics.Direct2D.D2D_MATRIX_3X2_F transform)
            {
                fixed (win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*transformLocal = &transform)
                {
                    this.GetTransform(transformLocal);
                }
            }

            internal unsafe void GetTransform(win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*transform)
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    lpVtbl->GetTransform_8(pThis, transform);
            }

            /// <summary>Sets the starting coordinates of the linear gradient in the brush's coordinate space.</summary>
            /// <param name = "startPoint">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/Direct2D/d2d1-point-2f">D2D1_POINT_2F</a></b></para>
            /// <para>The starting two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-setstartpoint#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para>The start point and end point are described in the brush's space and are mapped to the render target when the brush is used.  If there is a non-identity brush transform or render target transform, the brush's start point and end point are also transformed.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-setstartpoint#">Read more on docs.microsoft.com</see>.</para>
            /// </remarks>
            internal void SetStartPoint(win32.Graphics.Direct2D.D2D_POINT_2F startPoint)
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    lpVtbl->SetStartPoint_9(pThis, startPoint);
            }

            /// <summary>Sets the ending coordinates of the linear gradient in the brush's coordinate space.</summary>
            /// <param name = "endPoint">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/Direct2D/d2d1-point-2f">D2D1_POINT_2F</a></b></para>
            /// <para>The ending two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-setendpoint#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para>The start point and end point are described in the brush's space and are mapped to the render target when the brush is used.  If there is a non-identity brush transform or render target transform, the brush's start point and end point are also transformed.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-setendpoint#">Read more on docs.microsoft.com</see>.</para>
            /// </remarks>
            internal void SetEndPoint(win32.Graphics.Direct2D.D2D_POINT_2F endPoint)
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    lpVtbl->SetEndPoint_10(pThis, endPoint);
            }

            /// <summary>Retrieves the starting coordinates of the linear gradient.</summary>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/Direct2D/d2d1-point-2f">D2D1_POINT_2F</a></b></para>
            /// <para>The starting two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getstartpoint">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.Graphics.Direct2D.D2D_POINT_2F GetStartPoint()
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    return lpVtbl->GetStartPoint_11(pThis);
            }

            /// <summary>Retrieves the ending coordinates of the linear gradient.</summary>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/win32/Direct2D/d2d1-point-2f">D2D1_POINT_2F</a></b></para>
            /// <para>The ending two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getendpoint">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.Graphics.Direct2D.D2D_POINT_2F GetEndPoint()
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    return lpVtbl->GetEndPoint_12(pThis);
            }

            /// <summary>Retrieves the ID2D1GradientStopCollection associated with this linear gradient brush.</summary>
            /// <param name = "gradientStopCollection">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1gradientstopcollection">ID2D1GradientStopCollection</a>**</b></para>
            /// <para>The  <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1gradientstopcollection">ID2D1GradientStopCollection</a> object associated with this linear gradient brush object. This parameter is passed uninitialized.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getgradientstopcollection#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para><a href = "https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1gradientstopcollection">ID2D1GradientStopCollection</a> contains an array of <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ns-d2d1-d2d1_gradient_stop">D2D1_GRADIENT_STOP</a> structures and information, such as the extend mode and the color interpolation mode.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getgradientstopcollection#">Read more on docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe void GetGradientStopCollection(win32.Graphics.Direct2D.ID2D1GradientStopCollection**gradientStopCollection)
            {
                fixed (ID2D1LinearGradientBrush*pThis = &this)
                    lpVtbl->GetGradientStopCollection_13(pThis, gradientStopCollection);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, win32.Graphics.Direct2D.ID2D1Factory**, void>GetFactory_4;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, float, void>SetOpacity_5;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*, void>SetTransform_6;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, float>GetOpacity_7;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*, void>GetTransform_8;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, win32.Graphics.Direct2D.D2D_POINT_2F, void>SetStartPoint_9;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, win32.Graphics.Direct2D.D2D_POINT_2F, void>SetEndPoint_10;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, win32.Graphics.Direct2D.D2D_POINT_2F>GetStartPoint_11;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, win32.Graphics.Direct2D.D2D_POINT_2F>GetEndPoint_12;
                internal delegate *unmanaged[Stdcall]<ID2D1LinearGradientBrush*, win32.Graphics.Direct2D.ID2D1GradientStopCollection**, void>GetGradientStopCollection_13;
            }

            private Vtbl*lpVtbl;
        }
    }
}