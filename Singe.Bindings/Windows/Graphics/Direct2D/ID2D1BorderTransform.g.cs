// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("4998735C-3A19-473C-9781-656847E3A347")]
        internal unsafe struct ID2D1BorderTransform
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal uint GetInputCount()
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    return lpVtbl->GetInputCount_4(pThis);
            }

            internal win32.System.Com.HRESULT SetOutputBuffer(win32.Graphics.Direct2D.D2D1_BUFFER_PRECISION bufferPrecision, win32.Graphics.Direct2D.D2D1_CHANNEL_DEPTH channelDepth)
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    return lpVtbl->SetOutputBuffer_5(pThis, bufferPrecision, channelDepth);
            }

            internal void SetCached(win32.System.SystemServices.BOOL isCached)
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    lpVtbl->SetCached_6(pThis, isCached);
            }

            /// <summary>Sets the extend mode in the x direction.</summary>
            /// <param name = "extendMode">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1/ne-d2d1-d2d1_extend_mode">D2D1_EXTEND_MODE</a></b></para>
            /// <para>The extend mode in the x direction.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-setextendmodex#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para>If the extend mode enumeration is invalid, this operation is ignored.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-setextendmodex#">Read more on docs.microsoft.com</see>.</para>
            /// </remarks>
            internal void SetExtendModeX(win32.Graphics.Direct2D.D2D1_EXTEND_MODE extendMode)
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    lpVtbl->SetExtendModeX_7(pThis, extendMode);
            }

            /// <summary>Sets the extend mode in the y direction.</summary>
            /// <param name = "extendMode">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1/ne-d2d1-d2d1_extend_mode">D2D1_EXTEND_MODE</a></b></para>
            /// <para>The extend mode in the y direction.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-setextendmodey#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para>If the extend mode enumeration is invalid, this operation is ignored.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-setextendmodey#">Read more on docs.microsoft.com</see>.</para>
            /// </remarks>
            internal void SetExtendModeY(win32.Graphics.Direct2D.D2D1_EXTEND_MODE extendMode)
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    lpVtbl->SetExtendModeY_8(pThis, extendMode);
            }

            /// <summary>Gets the extend mode in the x direction.</summary>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/desktop/api/d2d1/ne-d2d1-d2d1_extend_mode">D2D1_EXTEND_MODE</a></b></para>
            /// <para>This method returns the extend mode in the x direction.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-getextendmodex">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.Graphics.Direct2D.D2D1_EXTEND_MODE GetExtendModeX()
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    return lpVtbl->GetExtendModeX_9(pThis);
            }

            /// <summary>Gets the extend mode in the y direction.</summary>
            /// <returns>
            /// <para>Type: <b><a href = "/windows/desktop/api/d2d1/ne-d2d1-d2d1_extend_mode">D2D1_EXTEND_MODE</a></b></para>
            /// <para>This method returns the extend mode in the y direction.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-getextendmodey">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.Graphics.Direct2D.D2D1_EXTEND_MODE GetExtendModeY()
            {
                fixed (ID2D1BorderTransform*pThis = &this)
                    return lpVtbl->GetExtendModeY_10(pThis);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, uint>GetInputCount_4;
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, win32.Graphics.Direct2D.D2D1_BUFFER_PRECISION, win32.Graphics.Direct2D.D2D1_CHANNEL_DEPTH, win32.System.Com.HRESULT>SetOutputBuffer_5;
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, win32.System.SystemServices.BOOL, void>SetCached_6;
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, win32.Graphics.Direct2D.D2D1_EXTEND_MODE, void>SetExtendModeX_7;
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, win32.Graphics.Direct2D.D2D1_EXTEND_MODE, void>SetExtendModeY_8;
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, win32.Graphics.Direct2D.D2D1_EXTEND_MODE>GetExtendModeX_9;
                internal delegate *unmanaged[Stdcall]<ID2D1BorderTransform*, win32.Graphics.Direct2D.D2D1_EXTEND_MODE>GetExtendModeY_10;
            }

            private Vtbl*lpVtbl;
        }
    }
}