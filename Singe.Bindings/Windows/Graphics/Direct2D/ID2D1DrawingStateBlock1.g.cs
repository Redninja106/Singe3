// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("689F1F85-C72E-4E33-8F19-85754EFD5ACE")]
        internal unsafe struct ID2D1DrawingStateBlock1
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal unsafe void GetFactory(win32.Graphics.Direct2D.ID2D1Factory**factory)
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    lpVtbl->GetFactory_4(pThis, factory);
            }

            /// <inheritdoc cref = "GetDescription(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*)"/>
            internal unsafe void GetDescription(out win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION stateDescription)
            {
                fixed (win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*stateDescriptionLocal = &stateDescription)
                {
                    this.GetDescription(stateDescriptionLocal);
                }
            }

            /// <summary>Gets the antialiasing mode, transform, tags, primitive blend, and unit mode portion of the drawing state.</summary>
            /// <param name = "stateDescription">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1">D2D1_DRAWING_STATE_DESCRIPTION1</a>*</b></para>
            /// <para>When this method returns, contains the antialiasing mode, transform, tags, primitive blend, and unit mode portion of the drawing state. You must allocate storage for this parameter.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-getdescription#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-getdescription">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe void GetDescription(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*stateDescription)
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    lpVtbl->GetDescription_5(pThis, stateDescription);
            }

            /// <inheritdoc cref = "SetDescription(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*)"/>
            internal unsafe void SetDescription(in win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION stateDescription)
            {
                fixed (win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*stateDescriptionLocal = &stateDescription)
                {
                    this.SetDescription(stateDescriptionLocal);
                }
            }

            /// <summary>Sets the D2D1_DRAWING_STATE_DESCRIPTION1 associated with this drawing state block.</summary>
            /// <param name = "stateDescription">
            /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1">D2D1_DRAWING_STATE_DESCRIPTION1</a></b></para>
            /// <para>The <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1">D2D1_DRAWING_STATE_DESCRIPTION1</a> to be set associated with  this drawing state block.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-setdescription#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-setdescription">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe void SetDescription(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*stateDescription)
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    lpVtbl->SetDescription_6(pThis, stateDescription);
            }

            internal unsafe void SetTextRenderingParams([Optional] win32.Graphics.DirectWrite.IDWriteRenderingParams*textRenderingParams)
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    lpVtbl->SetTextRenderingParams_7(pThis, textRenderingParams);
            }

            internal unsafe void GetTextRenderingParams([Optional] win32.Graphics.DirectWrite.IDWriteRenderingParams**textRenderingParams)
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    lpVtbl->GetTextRenderingParams_8(pThis, textRenderingParams);
            }

            /// <inheritdoc cref = "GetDescription(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*)"/>
            internal unsafe void GetDescription(out win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1 stateDescription)
            {
                fixed (win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*stateDescriptionLocal = &stateDescription)
                {
                    this.GetDescription(stateDescriptionLocal);
                }
            }

            /// <summary>Gets the antialiasing mode, transform, tags, primitive blend, and unit mode portion of the drawing state.</summary>
            /// <param name = "stateDescription">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1">D2D1_DRAWING_STATE_DESCRIPTION1</a>*</b></para>
            /// <para>When this method returns, contains the antialiasing mode, transform, tags, primitive blend, and unit mode portion of the drawing state. You must allocate storage for this parameter.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-getdescription#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-getdescription">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe void GetDescription(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*stateDescription)
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    lpVtbl->GetDescription_9(pThis, stateDescription);
            }

            /// <inheritdoc cref = "SetDescription(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*)"/>
            internal unsafe void SetDescription(in win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1 stateDescription)
            {
                fixed (win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*stateDescriptionLocal = &stateDescription)
                {
                    this.SetDescription(stateDescriptionLocal);
                }
            }

            /// <summary>Sets the D2D1_DRAWING_STATE_DESCRIPTION1 associated with this drawing state block.</summary>
            /// <param name = "stateDescription">
            /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1">D2D1_DRAWING_STATE_DESCRIPTION1</a></b></para>
            /// <para>The <a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1">D2D1_DRAWING_STATE_DESCRIPTION1</a> to be set associated with  this drawing state block.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-setdescription#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-setdescription">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe void SetDescription(win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*stateDescription)
            {
                fixed (ID2D1DrawingStateBlock1*pThis = &this)
                    lpVtbl->SetDescription_10(pThis, stateDescription);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, win32.Graphics.Direct2D.ID2D1Factory**, void>GetFactory_4;
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*, void>GetDescription_5;
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION*, void>SetDescription_6;
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, win32.Graphics.DirectWrite.IDWriteRenderingParams*, void>SetTextRenderingParams_7;
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, win32.Graphics.DirectWrite.IDWriteRenderingParams**, void>GetTextRenderingParams_8;
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*, void>GetDescription_9;
                internal delegate *unmanaged[Stdcall]<ID2D1DrawingStateBlock1*, win32.Graphics.Direct2D.D2D1_DRAWING_STATE_DESCRIPTION1*, void>SetDescription_10;
            }

            private Vtbl*lpVtbl;
        }
    }
}