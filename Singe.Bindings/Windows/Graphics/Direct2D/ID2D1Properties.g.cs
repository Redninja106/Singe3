// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("483473D7-CD46-4F9D-9D3A-3112AA80159D")]
        internal unsafe struct ID2D1Properties
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <summary>Gets the number of top-level properties.</summary>
            /// <returns>
            /// <para>Type: <b>UINT32</b></para>
            /// <para>This method returns the number of custom (non-system) properties that can be accessed by the object.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1properties-getpropertycount">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal uint GetPropertyCount()
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->GetPropertyCount_4(pThis);
            }

            internal win32.System.Com.HRESULT GetPropertyName(uint index, win32.System.SystemServices.PWSTR name, uint nameCount)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->GetPropertyName_5(pThis, index, name, nameCount);
            }

            internal uint GetPropertyNameLength(uint index)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->GetPropertyNameLength_6(pThis, index);
            }

            internal win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE GetType(uint index)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->GetType_7(pThis, index);
            }

            /// <inheritdoc cref = "GetPropertyIndex(win32.System.SystemServices.PCWSTR)"/>
            internal unsafe uint GetPropertyIndex(string name)
            {
                fixed (char *nameLocal = name)
                {
                    uint __result = this.GetPropertyIndex(nameLocal);
                    return __result;
                }
            }

            /// <summary>Gets the index corresponding to the given property name.</summary>
            /// <param name = "name">
            /// <para>Type: <b>PCWSTR</b></para>
            /// <para>The name of the property to retrieve.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1properties-getpropertyindex#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>UINT32</b></para>
            /// <para>The index of the corresponding property name.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1properties-getpropertyindex">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal uint GetPropertyIndex(win32.System.SystemServices.PCWSTR name)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->GetPropertyIndex_8(pThis, name);
            }

            /// <inheritdoc cref = "SetValueByName(win32.System.SystemServices.PCWSTR, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE, byte *, uint)"/>
            internal unsafe win32.System.Com.HRESULT SetValueByName(string name, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE type, ReadOnlySpan<byte> data)
            {
                fixed (byte *dataLocal = data)
                {
                    fixed (char *nameLocal = name)
                    {
                        win32.System.Com.HRESULT __result = this.SetValueByName(nameLocal, type, dataLocal, (uint)data.Length);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT SetValueByName(win32.System.SystemServices.PCWSTR name, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE type, byte *data, uint dataSize)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->SetValueByName_9(pThis, name, type, data, dataSize);
            }

            /// <inheritdoc cref = "SetValue(uint, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE, byte *, uint)"/>
            internal unsafe win32.System.Com.HRESULT SetValue(uint index, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE type, ReadOnlySpan<byte> data)
            {
                fixed (byte *dataLocal = data)
                {
                    win32.System.Com.HRESULT __result = this.SetValue(index, type, dataLocal, (uint)data.Length);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT SetValue(uint index, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE type, byte *data, uint dataSize)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->SetValue_10(pThis, index, type, data, dataSize);
            }

            /// <inheritdoc cref = "GetValueByName(win32.System.SystemServices.PCWSTR, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE, byte *, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetValueByName(string name, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE type, Span<byte> data)
            {
                fixed (byte *dataLocal = data)
                {
                    fixed (char *nameLocal = name)
                    {
                        win32.System.Com.HRESULT __result = this.GetValueByName(nameLocal, type, dataLocal, (uint)data.Length);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT GetValueByName(win32.System.SystemServices.PCWSTR name, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE type, byte *data, uint dataSize)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->GetValueByName_11(pThis, name, type, data, dataSize);
            }

            /// <inheritdoc cref = "GetValue(uint, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE, byte *, uint)"/>
            internal unsafe win32.System.Com.HRESULT GetValue(uint index, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE type, Span<byte> data)
            {
                fixed (byte *dataLocal = data)
                {
                    win32.System.Com.HRESULT __result = this.GetValue(index, type, dataLocal, (uint)data.Length);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT GetValue(uint index, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE type, byte *data, uint dataSize)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->GetValue_12(pThis, index, type, data, dataSize);
            }

            internal uint GetValueSize(uint index)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->GetValueSize_13(pThis, index);
            }

            internal unsafe win32.System.Com.HRESULT GetSubProperties(uint index, [Optional] win32.Graphics.Direct2D.ID2D1Properties**subProperties)
            {
                fixed (ID2D1Properties*pThis = &this)
                    return lpVtbl->GetSubProperties_14(pThis, index, subProperties);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint>GetPropertyCount_4;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint, win32.System.SystemServices.PWSTR, uint, win32.System.Com.HRESULT>GetPropertyName_5;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint, uint>GetPropertyNameLength_6;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE>GetType_7;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, win32.System.SystemServices.PCWSTR, uint>GetPropertyIndex_8;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, win32.System.SystemServices.PCWSTR, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE, byte *, uint, win32.System.Com.HRESULT>SetValueByName_9;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE, byte *, uint, win32.System.Com.HRESULT>SetValue_10;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, win32.System.SystemServices.PCWSTR, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE, byte *, uint, win32.System.Com.HRESULT>GetValueByName_11;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint, win32.Graphics.Direct2D.D2D1_PROPERTY_TYPE, byte *, uint, win32.System.Com.HRESULT>GetValue_12;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint, uint>GetValueSize_13;
                internal delegate *unmanaged[Stdcall]<ID2D1Properties*, uint, win32.Graphics.Direct2D.ID2D1Properties**, win32.System.Com.HRESULT>GetSubProperties_14;
            }

            private Vtbl*lpVtbl;
        }
    }
}