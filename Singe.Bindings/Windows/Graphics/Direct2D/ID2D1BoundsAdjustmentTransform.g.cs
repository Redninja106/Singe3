// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("90F732E2-5092-4606-A819-8651970BACCD")]
        internal unsafe struct ID2D1BoundsAdjustmentTransform
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1BoundsAdjustmentTransform*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1BoundsAdjustmentTransform*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1BoundsAdjustmentTransform*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal uint GetInputCount()
            {
                fixed (ID2D1BoundsAdjustmentTransform*pThis = &this)
                    return lpVtbl->GetInputCount_4(pThis);
            }

            /// <inheritdoc cref = "SetOutputBounds(win32.UI.DisplayDevices.RECT*)"/>
            internal unsafe void SetOutputBounds(in win32.UI.DisplayDevices.RECT outputBounds)
            {
                fixed (win32.UI.DisplayDevices.RECT*outputBoundsLocal = &outputBounds)
                {
                    this.SetOutputBounds(outputBoundsLocal);
                }
            }

            /// <summary>This sets the output bounds for the support transform.</summary>
            /// <param name = "outputBounds">
            /// <para>Type: <b>const <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/hh847950(v=vs.85)">D2D1_RECT_L</a>*</b></para>
            /// <para>The output bounds.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1boundsadjustmenttransform-setoutputbounds#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1boundsadjustmenttransform-setoutputbounds">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe void SetOutputBounds(win32.UI.DisplayDevices.RECT*outputBounds)
            {
                fixed (ID2D1BoundsAdjustmentTransform*pThis = &this)
                    lpVtbl->SetOutputBounds_5(pThis, outputBounds);
            }

            /// <inheritdoc cref = "GetOutputBounds(win32.UI.DisplayDevices.RECT*)"/>
            internal unsafe void GetOutputBounds(out win32.UI.DisplayDevices.RECT outputBounds)
            {
                fixed (win32.UI.DisplayDevices.RECT*outputBoundsLocal = &outputBounds)
                {
                    this.GetOutputBounds(outputBoundsLocal);
                }
            }

            /// <summary>Returns the output rectangle of the support transform.</summary>
            /// <param name = "outputBounds">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/hh847950(v=vs.85)">D2D1_RECT_L</a>*</b></para>
            /// <para>The output bounds.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1boundsadjustmenttransform-getoutputbounds#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1boundsadjustmenttransform-getoutputbounds">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe void GetOutputBounds(win32.UI.DisplayDevices.RECT*outputBounds)
            {
                fixed (ID2D1BoundsAdjustmentTransform*pThis = &this)
                    lpVtbl->GetOutputBounds_6(pThis, outputBounds);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1BoundsAdjustmentTransform*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1BoundsAdjustmentTransform*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1BoundsAdjustmentTransform*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1BoundsAdjustmentTransform*, uint>GetInputCount_4;
                internal delegate *unmanaged[Stdcall]<ID2D1BoundsAdjustmentTransform*, win32.UI.DisplayDevices.RECT*, void>SetOutputBounds_5;
                internal delegate *unmanaged[Stdcall]<ID2D1BoundsAdjustmentTransform*, win32.UI.DisplayDevices.RECT*, void>GetOutputBounds_6;
            }

            private Vtbl*lpVtbl;
        }
    }
}