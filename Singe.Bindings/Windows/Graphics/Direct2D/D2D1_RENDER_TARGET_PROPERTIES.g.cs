// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        /// <summary>Contains rendering options (hardware or software), pixel format, DPI information, remoting options, and Direct3D support requirements for a render target.</summary>
        /// <remarks>
        /// <para>Use this structure when creating a render target, or use it with the <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1rendertarget-issupported(constd2d1_render_target_properties_)">ID2D1RenderTarget::IsSupported</a> method to check the properties supported by an existing render target.</para>
        /// <para>As a convenience, Direct2D provides the <a href = "https://docs.microsoft.com/windows/win32/api/d2d1helper/nf-d2d1helper-rendertargetproperties">D2D1::RenderTargetProperties</a> helper function for creating <b>D2D1_RENDER_TARGET_PROPERTIES</b> structures. An easy way to create a <b>D2D1_RENDER_TARGET_PROPERTIES</b> structure that works for most render targets is to call the function without specifying any parameters. Doing so creates a <b>D2D1_RENDER_TARGET_PROPERTIES</b> structure that has its fields set to default values. For more information, see   <a href = "https://docs.microsoft.com/windows/win32/api/d2d1helper/nf-d2d1helper-rendertargetproperties">D2D1::RenderTargetProperties</a>.</para>
        /// <para>Not all render targets support hardware rendering. For a list, see the <a href = "https://docs.microsoft.com/windows/win32/Direct2D/render-targets-overview">Render Targets Overview</a>.</para>
        /// <para><h3><a id = "Using_Default_DPI_Settings"></a><a id = "using_default_dpi_settings"></a><a id = "USING_DEFAULT_DPI_SETTINGS"></a>Using Default DPI Settings</h3> To use the default DPI, set <i>dpiX</i> and <i>dpiY</i> to 0. The default DPI varies depending on the render target:</para>
        /// <para></para>
        /// <para>This doc was truncated.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_render_target_properties#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct D2D1_RENDER_TARGET_PROPERTIES
        {
            /// <summary>
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_type">D2D1_RENDER_TARGET_TYPE</a></b></para>
            /// <para>A value that specifies whether the render target should force hardware or software rendering. A value of <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_type">D2D1_RENDER_TARGET_TYPE_DEFAULT</a> specifies that the render target should use hardware rendering if it is available; otherwise, it uses software rendering. Note that WIC bitmap render targets do not support hardware rendering.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_render_target_properties#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.Graphics.Direct2D.D2D1_RENDER_TARGET_TYPE type;
            /// <summary>
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/dcommon/ns-dcommon-d2d1_pixel_format">D2D1_PIXEL_FORMAT</a></b></para>
            /// <para>The pixel format and alpha mode of the render target. You can use the <a href = "https://docs.microsoft.com/windows/win32/api/d2d1helper/nf-d2d1helper-pixelformat">D2D1::PixelFormat</a> function to create a pixel format that specifies that Direct2D should select the pixel format and alpha mode for you. For a list of pixel formats and alpha modes supported by each render target, see <a href = "https://docs.microsoft.com/windows/win32/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel Formats and Alpha Modes</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_render_target_properties#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.Graphics.Direct2D.D2D1_PIXEL_FORMAT pixelFormat;
            /// <summary>
            /// <para>Type: <b>FLOAT</b></para>
            /// <para>The horizontal DPI of the render target.  To use the default DPI, set <i>dpiX</i> and <i>dpiY</i> to 0. For more information, see the Remarks section.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_render_target_properties#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal float dpiX;
            /// <summary>
            /// <para>Type: <b>FLOAT</b></para>
            /// <para>The vertical DPI of the render target. To use the default DPI, set <i>dpiX</i> and <i>dpiY</i> to 0.  For more information, see the Remarks section.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_render_target_properties#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal float dpiY;
            /// <summary>
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_usage">D2D1_RENDER_TARGET_USAGE</a></b></para>
            /// <para>A value that specifies how the render target is remoted and whether it should be GDI-compatible.  Set to <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_usage">D2D1_RENDER_TARGET_USAGE_NONE</a> to create a render target that is not compatible with GDI and uses Direct3D command-stream remoting if it  is available.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_render_target_properties#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.Graphics.Direct2D.D2D1_RENDER_TARGET_USAGE usage;
            /// <summary>
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_feature_level">D2D1_FEATURE_LEVEL</a></b></para>
            /// <para>A value that specifies the minimum Direct3D feature level required for hardware rendering. If the specified minimum level is not available, the render target uses software rendering if the <b>type </b> member is set to <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_type">D2D1_RENDER_TARGET_TYPE_DEFAULT</a>; if  <b>type </b> is set to to <b>D2D1_RENDER_TARGET_TYPE_HARDWARE</b>, render target creation fails. A value of <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_feature_level">D2D1_FEATURE_LEVEL_DEFAULT</a> indicates that Direct2D should determine whether the Direct3D feature level of the device is adequate. This field is used only when creating <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1hwndrendertarget">ID2D1HwndRenderTarget</a> and <a href = "https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1dcrendertarget">ID2D1DCRenderTarget</a> objects.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_render_target_properties#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.Graphics.Direct2D.D2D1_FEATURE_LEVEL minLevel;
        }
    }
}