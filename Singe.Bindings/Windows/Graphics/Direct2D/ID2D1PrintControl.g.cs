// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("2C1D867D-C290-41C8-AE7E-34A98702E9A5")]
        internal unsafe struct ID2D1PrintControl
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1PrintControl*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1PrintControl*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1PrintControl*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <summary>Converts Direct2D primitives in the passed-in command list into a fixed page representation for use by the print subsystem.</summary>
            /// <param name = "commandList">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1commandlist">ID2D1CommandList</a>*</b></para>
            /// <para>The command list that contains the rendering operations.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-addpage#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pageSize">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_size_f">D2D_SIZE_F</a></b></para>
            /// <para>The size of the page to add.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-addpage#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "pagePrintTicketStream">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>*</b></para>
            /// <para>The print ticket stream.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-addpage#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "tag1">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-tag">D2D1_TAG</a>*</b></para>
            /// <para>Contains the first label for subsequent drawing operations. This parameter is passed uninitialized. If NULL is specified, no value is retrieved for this parameter.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-addpage#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "tag2">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-tag">D2D1_TAG</a>*</b></para>
            /// <para>Contains the second label for subsequent drawing operations. This parameter is passed uninitialized. If NULL is specified, no value is retrieved for this parameter.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-addpage#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-addpage">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT AddPage(win32.Graphics.Direct2D.ID2D1CommandList*commandList, win32.Graphics.Direct2D.D2D_SIZE_F pageSize, [Optional] win32.Storage.StructuredStorage.IStream*pagePrintTicketStream, [Optional] ulong *tag1, [Optional] ulong *tag2)
            {
                fixed (ID2D1PrintControl*pThis = &this)
                    return lpVtbl->AddPage_4(pThis, commandList, pageSize, pagePrintTicketStream, tag1, tag2);
            }

            /// <summary>Passes all remaining resources to the print sub-system, then clean up and close the current print job.</summary>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-close">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT Close()
            {
                fixed (ID2D1PrintControl*pThis = &this)
                    return lpVtbl->Close_5(pThis);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1PrintControl*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1PrintControl*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1PrintControl*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1PrintControl*, win32.Graphics.Direct2D.ID2D1CommandList*, win32.Graphics.Direct2D.D2D_SIZE_F, win32.Storage.StructuredStorage.IStream*, ulong *, ulong *, win32.System.Com.HRESULT>AddPage_4;
                internal delegate *unmanaged[Stdcall]<ID2D1PrintControl*, win32.System.Com.HRESULT>Close_5;
            }

            private Vtbl*lpVtbl;
        }
    }
}