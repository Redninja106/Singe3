// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("688D15C3-02B0-438D-B13A-D1B44C32C39A")]
        internal unsafe struct ID2D1ResourceTexture
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1ResourceTexture*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1ResourceTexture*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1ResourceTexture*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            /// <inheritdoc cref = "Update(uint *, uint *, uint *, uint, byte *, uint)"/>
            internal unsafe win32.System.Com.HRESULT Update(ReadOnlySpan<uint> minimumExtents, ReadOnlySpan<uint> maximimumExtents, uint? strides, ReadOnlySpan<byte> data)
            {
                fixed (byte *dataLocal = data)
                {
                    fixed (uint *maximimumExtentsLocal = maximimumExtents)
                    {
                        fixed (uint *minimumExtentsLocal = minimumExtents)
                        {
                            if (minimumExtents.Length != maximimumExtents.Length)
                                throw new ArgumentException();
                            uint stridesLocal = strides.HasValue ? strides.Value : default(uint);
                            win32.System.Com.HRESULT __result = this.Update(minimumExtentsLocal, maximimumExtentsLocal, strides.HasValue ? &stridesLocal : null, (uint)maximimumExtents.Length, dataLocal, (uint)data.Length);
                            return __result;
                        }
                    }
                }
            }

            /// <summary>Updates the specific resource texture inside the specific range or box using the supplied data.</summary>
            /// <param name = "minimumExtents">
            /// <para>Type: <b>const UINT32*</b></para>
            /// <para>The "left" extent of the updates if specified; if <b>NULL</b>, the entire texture is updated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1resourcetexture-update#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "maximimumExtents">
            /// <para>Type: <b>const UINT32*</b></para>
            /// <para>The "right" extent of the updates if specified; if <b>NULL</b>, the entire texture is updated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1resourcetexture-update#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "strides">
            /// <para>Type: <b>const UINT32*</b></para>
            /// <para>The stride to advance through the input data, according to dimension.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1resourcetexture-update#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "dimensions">
            /// <para>Type: <b>UINT32</b></para>
            /// <para>The number of dimensions in the resource texture. This must match the number used to load the texture.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1resourcetexture-update#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "data">
            /// <para>Type: <b>const BYTE*</b></para>
            /// <para>The data to be placed into the resource texture.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1resourcetexture-update#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <param name = "dataCount">
            /// <para>Type: <b>UINT32</b></para>
            /// <para>The size of the data buffer to be used to update the resource texture.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1resourcetexture-update#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>The method returns an HRESULT. Possible values include, but are not limited to, those in the following table.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1resourcetexture-update">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Update([Optional] uint *minimumExtents, [Optional] uint *maximimumExtents, [Optional] uint *strides, uint dimensions, byte *data, uint dataCount)
            {
                fixed (ID2D1ResourceTexture*pThis = &this)
                    return lpVtbl->Update_4(pThis, minimumExtents, maximimumExtents, strides, dimensions, data, dataCount);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1ResourceTexture*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1ResourceTexture*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1ResourceTexture*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1ResourceTexture*, uint *, uint *, uint *, uint, byte *, uint, win32.System.Com.HRESULT>Update_4;
            }

            private Vtbl*lpVtbl;
        }
    }
}