// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("B4F34A19-2383-4D76-94F6-EC343657C3DC")]
        internal unsafe struct ID2D1CommandList
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1CommandList*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1CommandList*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1CommandList*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal unsafe void GetFactory(win32.Graphics.Direct2D.ID2D1Factory**factory)
            {
                fixed (ID2D1CommandList*pThis = &this)
                    lpVtbl->GetFactory_4(pThis, factory);
            }

            /// <summary>Streams the contents of the command list to the specified command sink.</summary>
            /// <param name = "sink">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1commandsink">ID2D1CommandSink</a>*</b></para>
            /// <para>The sink into which the command list will be streamed.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandlist-stream#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If the method succeeds, it returns <b>S_OK</b>. If it fails, it returns an <b>HRESULT</b> error code.</para>
            /// <para>The return value indicates any failures the command sink implementation  returns through its <a href = "/windows/desktop/api/d2d1_1/nf-d2d1_1-id2d1commandsink-enddraw">EndDraw</a> method.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandlist-stream">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal unsafe win32.System.Com.HRESULT Stream(win32.Graphics.Direct2D.ID2D1CommandSink*sink)
            {
                fixed (ID2D1CommandList*pThis = &this)
                    return lpVtbl->Stream_5(pThis, sink);
            }

            /// <summary>Instructs the command list to stop accepting commands so that you can use it as an input to an effect or in a call to ID2D1DeviceContext::DrawImage.</summary>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandlist-close">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT Close()
            {
                fixed (ID2D1CommandList*pThis = &this)
                    return lpVtbl->Close_6(pThis);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1CommandList*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandList*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandList*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandList*, win32.Graphics.Direct2D.ID2D1Factory**, void>GetFactory_4;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandList*, win32.Graphics.Direct2D.ID2D1CommandSink*, win32.System.Com.HRESULT>Stream_5;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandList*, win32.System.Com.HRESULT>Close_6;
            }

            private Vtbl*lpVtbl;
        }
    }
}