// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Graphics.Direct2D
    {
        [Guid("9EB767FD-4269-4467-B8C2-EB30CB305743")]
        internal unsafe struct ID2D1CommandSink1
        {
            /// <inheritdoc cref = "QueryInterface(global::System.Guid*, void **)"/>
            internal unsafe win32.System.Com.HRESULT QueryInterface(in global::System.Guid riid, out void *ppvObject)
            {
                fixed (void **ppvObjectLocal = &ppvObject)
                {
                    fixed (global::System.Guid*riidLocal = &riid)
                    {
                        win32.System.Com.HRESULT __result = this.QueryInterface(riidLocal, ppvObjectLocal);
                        return __result;
                    }
                }
            }

            internal unsafe win32.System.Com.HRESULT QueryInterface(global::System.Guid*riid, void **ppvObject)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->QueryInterface_1(pThis, riid, ppvObject);
            }

            internal uint AddRef()
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->AddRef_2(pThis);
            }

            internal uint Release()
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->Release_3(pThis);
            }

            internal win32.System.Com.HRESULT BeginDraw()
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->BeginDraw_4(pThis);
            }

            internal win32.System.Com.HRESULT EndDraw()
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->EndDraw_5(pThis);
            }

            internal win32.System.Com.HRESULT SetAntialiasMode(win32.Graphics.Direct2D.D2D1_ANTIALIAS_MODE antialiasMode)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->SetAntialiasMode_6(pThis, antialiasMode);
            }

            internal win32.System.Com.HRESULT SetTags(ulong tag1, ulong tag2)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->SetTags_7(pThis, tag1, tag2);
            }

            internal win32.System.Com.HRESULT SetTextAntialiasMode(win32.Graphics.Direct2D.D2D1_TEXT_ANTIALIAS_MODE textAntialiasMode)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->SetTextAntialiasMode_8(pThis, textAntialiasMode);
            }

            internal unsafe win32.System.Com.HRESULT SetTextRenderingParams([Optional] win32.Graphics.DirectWrite.IDWriteRenderingParams*textRenderingParams)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->SetTextRenderingParams_9(pThis, textRenderingParams);
            }

            /// <inheritdoc cref = "SetTransform(win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*)"/>
            internal unsafe win32.System.Com.HRESULT SetTransform(in win32.Graphics.Direct2D.D2D_MATRIX_3X2_F transform)
            {
                fixed (win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*transformLocal = &transform)
                {
                    win32.System.Com.HRESULT __result = this.SetTransform(transformLocal);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT SetTransform(win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*transform)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->SetTransform_10(pThis, transform);
            }

            internal win32.System.Com.HRESULT SetPrimitiveBlend(win32.Graphics.Direct2D.D2D1_PRIMITIVE_BLEND primitiveBlend)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->SetPrimitiveBlend_11(pThis, primitiveBlend);
            }

            internal win32.System.Com.HRESULT SetUnitMode(win32.Graphics.Direct2D.D2D1_UNIT_MODE unitMode)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->SetUnitMode_12(pThis, unitMode);
            }

            /// <inheritdoc cref = "Clear(win32.Graphics.Direct2D.D2D1_COLOR_F*)"/>
            internal unsafe win32.System.Com.HRESULT Clear(win32.Graphics.Direct2D.D2D1_COLOR_F? color)
            {
                win32.Graphics.Direct2D.D2D1_COLOR_F colorLocal = color.HasValue ? color.Value : default(win32.Graphics.Direct2D.D2D1_COLOR_F);
                win32.System.Com.HRESULT __result = this.Clear(color.HasValue ? &colorLocal : null);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT Clear([Optional] win32.Graphics.Direct2D.D2D1_COLOR_F*color)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->Clear_13(pThis, color);
            }

            /// <inheritdoc cref = "DrawGlyphRun(win32.Graphics.Direct2D.D2D_POINT_2F, win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN*, win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN_DESCRIPTION*, win32.Graphics.Direct2D.ID2D1Brush*, win32.Graphics.DirectWrite.DWRITE_MEASURING_MODE)"/>
            internal unsafe win32.System.Com.HRESULT DrawGlyphRun(win32.Graphics.Direct2D.D2D_POINT_2F baselineOrigin, in win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN glyphRun, win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN_DESCRIPTION? glyphRunDescription, win32.Graphics.Direct2D.ID2D1Brush*foregroundBrush, win32.Graphics.DirectWrite.DWRITE_MEASURING_MODE measuringMode)
            {
                fixed (win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN*glyphRunLocal = &glyphRun)
                {
                    win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN_DESCRIPTION glyphRunDescriptionLocal = glyphRunDescription.HasValue ? glyphRunDescription.Value : default(win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN_DESCRIPTION);
                    win32.System.Com.HRESULT __result = this.DrawGlyphRun(baselineOrigin, glyphRunLocal, glyphRunDescription.HasValue ? &glyphRunDescriptionLocal : null, foregroundBrush, measuringMode);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT DrawGlyphRun(win32.Graphics.Direct2D.D2D_POINT_2F baselineOrigin, win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN*glyphRun, [Optional] win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN_DESCRIPTION*glyphRunDescription, win32.Graphics.Direct2D.ID2D1Brush*foregroundBrush, win32.Graphics.DirectWrite.DWRITE_MEASURING_MODE measuringMode)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->DrawGlyphRun_14(pThis, baselineOrigin, glyphRun, glyphRunDescription, foregroundBrush, measuringMode);
            }

            internal unsafe win32.System.Com.HRESULT DrawLine(win32.Graphics.Direct2D.D2D_POINT_2F point0, win32.Graphics.Direct2D.D2D_POINT_2F point1, win32.Graphics.Direct2D.ID2D1Brush*brush, float strokeWidth, [Optional] win32.Graphics.Direct2D.ID2D1StrokeStyle*strokeStyle)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->DrawLine_15(pThis, point0, point1, brush, strokeWidth, strokeStyle);
            }

            internal unsafe win32.System.Com.HRESULT DrawGeometry(win32.Graphics.Direct2D.ID2D1Geometry*geometry, win32.Graphics.Direct2D.ID2D1Brush*brush, float strokeWidth, [Optional] win32.Graphics.Direct2D.ID2D1StrokeStyle*strokeStyle)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->DrawGeometry_16(pThis, geometry, brush, strokeWidth, strokeStyle);
            }

            /// <inheritdoc cref = "DrawRectangle(win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.ID2D1Brush*, float, win32.Graphics.Direct2D.ID2D1StrokeStyle*)"/>
            internal unsafe win32.System.Com.HRESULT DrawRectangle(in win32.Graphics.Direct2D.D2D_RECT_F rect, win32.Graphics.Direct2D.ID2D1Brush*brush, float strokeWidth, win32.Graphics.Direct2D.ID2D1StrokeStyle*strokeStyle)
            {
                fixed (win32.Graphics.Direct2D.D2D_RECT_F*rectLocal = &rect)
                {
                    win32.System.Com.HRESULT __result = this.DrawRectangle(rectLocal, brush, strokeWidth, strokeStyle);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT DrawRectangle(win32.Graphics.Direct2D.D2D_RECT_F*rect, win32.Graphics.Direct2D.ID2D1Brush*brush, float strokeWidth, [Optional] win32.Graphics.Direct2D.ID2D1StrokeStyle*strokeStyle)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->DrawRectangle_17(pThis, rect, brush, strokeWidth, strokeStyle);
            }

            /// <inheritdoc cref = "DrawBitmap(win32.Graphics.Direct2D.ID2D1Bitmap*, win32.Graphics.Direct2D.D2D_RECT_F*, float, win32.Graphics.Direct2D.D2D1_INTERPOLATION_MODE, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.D2D_MATRIX_4X4_F*)"/>
            internal unsafe win32.System.Com.HRESULT DrawBitmap(win32.Graphics.Direct2D.ID2D1Bitmap*bitmap, win32.Graphics.Direct2D.D2D_RECT_F? destinationRectangle, float opacity, win32.Graphics.Direct2D.D2D1_INTERPOLATION_MODE interpolationMode, win32.Graphics.Direct2D.D2D_RECT_F? sourceRectangle, win32.Graphics.Direct2D.D2D_MATRIX_4X4_F? perspectiveTransform)
            {
                win32.Graphics.Direct2D.D2D_RECT_F destinationRectangleLocal = destinationRectangle.HasValue ? destinationRectangle.Value : default(win32.Graphics.Direct2D.D2D_RECT_F);
                win32.Graphics.Direct2D.D2D_RECT_F sourceRectangleLocal = sourceRectangle.HasValue ? sourceRectangle.Value : default(win32.Graphics.Direct2D.D2D_RECT_F);
                win32.Graphics.Direct2D.D2D_MATRIX_4X4_F perspectiveTransformLocal = perspectiveTransform.HasValue ? perspectiveTransform.Value : default(win32.Graphics.Direct2D.D2D_MATRIX_4X4_F);
                win32.System.Com.HRESULT __result = this.DrawBitmap(bitmap, destinationRectangle.HasValue ? &destinationRectangleLocal : null, opacity, interpolationMode, sourceRectangle.HasValue ? &sourceRectangleLocal : null, perspectiveTransform.HasValue ? &perspectiveTransformLocal : null);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT DrawBitmap(win32.Graphics.Direct2D.ID2D1Bitmap*bitmap, [Optional] win32.Graphics.Direct2D.D2D_RECT_F*destinationRectangle, float opacity, win32.Graphics.Direct2D.D2D1_INTERPOLATION_MODE interpolationMode, [Optional] win32.Graphics.Direct2D.D2D_RECT_F*sourceRectangle, [Optional] win32.Graphics.Direct2D.D2D_MATRIX_4X4_F*perspectiveTransform)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->DrawBitmap_18(pThis, bitmap, destinationRectangle, opacity, interpolationMode, sourceRectangle, perspectiveTransform);
            }

            /// <inheritdoc cref = "DrawImage(win32.Graphics.Direct2D.ID2D1Image*, win32.Graphics.Direct2D.D2D_POINT_2F*, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.D2D1_INTERPOLATION_MODE, win32.Graphics.Direct2D.D2D1_COMPOSITE_MODE)"/>
            internal unsafe win32.System.Com.HRESULT DrawImage(win32.Graphics.Direct2D.ID2D1Image*image, win32.Graphics.Direct2D.D2D_POINT_2F? targetOffset, win32.Graphics.Direct2D.D2D_RECT_F? imageRectangle, win32.Graphics.Direct2D.D2D1_INTERPOLATION_MODE interpolationMode, win32.Graphics.Direct2D.D2D1_COMPOSITE_MODE compositeMode)
            {
                win32.Graphics.Direct2D.D2D_POINT_2F targetOffsetLocal = targetOffset.HasValue ? targetOffset.Value : default(win32.Graphics.Direct2D.D2D_POINT_2F);
                win32.Graphics.Direct2D.D2D_RECT_F imageRectangleLocal = imageRectangle.HasValue ? imageRectangle.Value : default(win32.Graphics.Direct2D.D2D_RECT_F);
                win32.System.Com.HRESULT __result = this.DrawImage(image, targetOffset.HasValue ? &targetOffsetLocal : null, imageRectangle.HasValue ? &imageRectangleLocal : null, interpolationMode, compositeMode);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT DrawImage(win32.Graphics.Direct2D.ID2D1Image*image, [Optional] win32.Graphics.Direct2D.D2D_POINT_2F*targetOffset, [Optional] win32.Graphics.Direct2D.D2D_RECT_F*imageRectangle, win32.Graphics.Direct2D.D2D1_INTERPOLATION_MODE interpolationMode, win32.Graphics.Direct2D.D2D1_COMPOSITE_MODE compositeMode)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->DrawImage_19(pThis, image, targetOffset, imageRectangle, interpolationMode, compositeMode);
            }

            /// <inheritdoc cref = "DrawGdiMetafile(win32.Graphics.Direct2D.ID2D1GdiMetafile*, win32.Graphics.Direct2D.D2D_POINT_2F*)"/>
            internal unsafe win32.System.Com.HRESULT DrawGdiMetafile(win32.Graphics.Direct2D.ID2D1GdiMetafile*gdiMetafile, win32.Graphics.Direct2D.D2D_POINT_2F? targetOffset)
            {
                win32.Graphics.Direct2D.D2D_POINT_2F targetOffsetLocal = targetOffset.HasValue ? targetOffset.Value : default(win32.Graphics.Direct2D.D2D_POINT_2F);
                win32.System.Com.HRESULT __result = this.DrawGdiMetafile(gdiMetafile, targetOffset.HasValue ? &targetOffsetLocal : null);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT DrawGdiMetafile(win32.Graphics.Direct2D.ID2D1GdiMetafile*gdiMetafile, [Optional] win32.Graphics.Direct2D.D2D_POINT_2F*targetOffset)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->DrawGdiMetafile_20(pThis, gdiMetafile, targetOffset);
            }

            internal unsafe win32.System.Com.HRESULT FillMesh(win32.Graphics.Direct2D.ID2D1Mesh*mesh, win32.Graphics.Direct2D.ID2D1Brush*brush)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->FillMesh_21(pThis, mesh, brush);
            }

            /// <inheritdoc cref = "FillOpacityMask(win32.Graphics.Direct2D.ID2D1Bitmap*, win32.Graphics.Direct2D.ID2D1Brush*, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.D2D_RECT_F*)"/>
            internal unsafe win32.System.Com.HRESULT FillOpacityMask(win32.Graphics.Direct2D.ID2D1Bitmap*opacityMask, win32.Graphics.Direct2D.ID2D1Brush*brush, win32.Graphics.Direct2D.D2D_RECT_F? destinationRectangle, win32.Graphics.Direct2D.D2D_RECT_F? sourceRectangle)
            {
                win32.Graphics.Direct2D.D2D_RECT_F destinationRectangleLocal = destinationRectangle.HasValue ? destinationRectangle.Value : default(win32.Graphics.Direct2D.D2D_RECT_F);
                win32.Graphics.Direct2D.D2D_RECT_F sourceRectangleLocal = sourceRectangle.HasValue ? sourceRectangle.Value : default(win32.Graphics.Direct2D.D2D_RECT_F);
                win32.System.Com.HRESULT __result = this.FillOpacityMask(opacityMask, brush, destinationRectangle.HasValue ? &destinationRectangleLocal : null, sourceRectangle.HasValue ? &sourceRectangleLocal : null);
                return __result;
            }

            internal unsafe win32.System.Com.HRESULT FillOpacityMask(win32.Graphics.Direct2D.ID2D1Bitmap*opacityMask, win32.Graphics.Direct2D.ID2D1Brush*brush, [Optional] win32.Graphics.Direct2D.D2D_RECT_F*destinationRectangle, [Optional] win32.Graphics.Direct2D.D2D_RECT_F*sourceRectangle)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->FillOpacityMask_22(pThis, opacityMask, brush, destinationRectangle, sourceRectangle);
            }

            internal unsafe win32.System.Com.HRESULT FillGeometry(win32.Graphics.Direct2D.ID2D1Geometry*geometry, win32.Graphics.Direct2D.ID2D1Brush*brush, [Optional] win32.Graphics.Direct2D.ID2D1Brush*opacityBrush)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->FillGeometry_23(pThis, geometry, brush, opacityBrush);
            }

            /// <inheritdoc cref = "FillRectangle(win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.ID2D1Brush*)"/>
            internal unsafe win32.System.Com.HRESULT FillRectangle(in win32.Graphics.Direct2D.D2D_RECT_F rect, win32.Graphics.Direct2D.ID2D1Brush*brush)
            {
                fixed (win32.Graphics.Direct2D.D2D_RECT_F*rectLocal = &rect)
                {
                    win32.System.Com.HRESULT __result = this.FillRectangle(rectLocal, brush);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT FillRectangle(win32.Graphics.Direct2D.D2D_RECT_F*rect, win32.Graphics.Direct2D.ID2D1Brush*brush)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->FillRectangle_24(pThis, rect, brush);
            }

            /// <inheritdoc cref = "PushAxisAlignedClip(win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.D2D1_ANTIALIAS_MODE)"/>
            internal unsafe win32.System.Com.HRESULT PushAxisAlignedClip(in win32.Graphics.Direct2D.D2D_RECT_F clipRect, win32.Graphics.Direct2D.D2D1_ANTIALIAS_MODE antialiasMode)
            {
                fixed (win32.Graphics.Direct2D.D2D_RECT_F*clipRectLocal = &clipRect)
                {
                    win32.System.Com.HRESULT __result = this.PushAxisAlignedClip(clipRectLocal, antialiasMode);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT PushAxisAlignedClip(win32.Graphics.Direct2D.D2D_RECT_F*clipRect, win32.Graphics.Direct2D.D2D1_ANTIALIAS_MODE antialiasMode)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->PushAxisAlignedClip_25(pThis, clipRect, antialiasMode);
            }

            /// <inheritdoc cref = "PushLayer(win32.Graphics.Direct2D.D2D1_LAYER_PARAMETERS1*, win32.Graphics.Direct2D.ID2D1Layer*)"/>
            internal unsafe win32.System.Com.HRESULT PushLayer(in win32.Graphics.Direct2D.D2D1_LAYER_PARAMETERS1 layerParameters1, win32.Graphics.Direct2D.ID2D1Layer*layer)
            {
                fixed (win32.Graphics.Direct2D.D2D1_LAYER_PARAMETERS1*layerParameters1Local = &layerParameters1)
                {
                    win32.System.Com.HRESULT __result = this.PushLayer(layerParameters1Local, layer);
                    return __result;
                }
            }

            internal unsafe win32.System.Com.HRESULT PushLayer(win32.Graphics.Direct2D.D2D1_LAYER_PARAMETERS1*layerParameters1, [Optional] win32.Graphics.Direct2D.ID2D1Layer*layer)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->PushLayer_26(pThis, layerParameters1, layer);
            }

            internal win32.System.Com.HRESULT PopAxisAlignedClip()
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->PopAxisAlignedClip_27(pThis);
            }

            internal win32.System.Com.HRESULT PopLayer()
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->PopLayer_28(pThis);
            }

            /// <summary>Sets a new primitive blend mode.</summary>
            /// <param name = "primitiveBlend">
            /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d2d1_1/ne-d2d1_1-d2d1_primitive_blend">D2D1_PRIMITIVE_BLEND</a></b></para>
            /// <para>The primitive blend that will apply to subsequent primitives.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1commandsink1-setprimitiveblend1#parameters">Read more on docs.microsoft.com</see>.</para>
            /// </param>
            /// <returns>
            /// <para>Type: <b>HRESULT</b></para>
            /// <para>If the method succeeds, it returns <b>S_OK</b>. If it fails, it returns an <b>HRESULT</b> error code.</para>
            /// </returns>
            /// <remarks>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1commandsink1-setprimitiveblend1">Learn more about this API from docs.microsoft.com</see>.</para>
            /// </remarks>
            internal win32.System.Com.HRESULT SetPrimitiveBlend1(win32.Graphics.Direct2D.D2D1_PRIMITIVE_BLEND primitiveBlend)
            {
                fixed (ID2D1CommandSink1*pThis = &this)
                    return lpVtbl->SetPrimitiveBlend1_29(pThis, primitiveBlend);
            }

            private struct Vtbl
            {
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, global::System.Guid*, void **, win32.System.Com.HRESULT>QueryInterface_1;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, uint>AddRef_2;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, uint>Release_3;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.System.Com.HRESULT>BeginDraw_4;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.System.Com.HRESULT>EndDraw_5;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D1_ANTIALIAS_MODE, win32.System.Com.HRESULT>SetAntialiasMode_6;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, ulong, ulong, win32.System.Com.HRESULT>SetTags_7;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D1_TEXT_ANTIALIAS_MODE, win32.System.Com.HRESULT>SetTextAntialiasMode_8;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.DirectWrite.IDWriteRenderingParams*, win32.System.Com.HRESULT>SetTextRenderingParams_9;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D_MATRIX_3X2_F*, win32.System.Com.HRESULT>SetTransform_10;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D1_PRIMITIVE_BLEND, win32.System.Com.HRESULT>SetPrimitiveBlend_11;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D1_UNIT_MODE, win32.System.Com.HRESULT>SetUnitMode_12;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D1_COLOR_F*, win32.System.Com.HRESULT>Clear_13;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D_POINT_2F, win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN*, win32.Graphics.DirectWrite.DWRITE_GLYPH_RUN_DESCRIPTION*, win32.Graphics.Direct2D.ID2D1Brush*, win32.Graphics.DirectWrite.DWRITE_MEASURING_MODE, win32.System.Com.HRESULT>DrawGlyphRun_14;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D_POINT_2F, win32.Graphics.Direct2D.D2D_POINT_2F, win32.Graphics.Direct2D.ID2D1Brush*, float, win32.Graphics.Direct2D.ID2D1StrokeStyle*, win32.System.Com.HRESULT>DrawLine_15;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.ID2D1Geometry*, win32.Graphics.Direct2D.ID2D1Brush*, float, win32.Graphics.Direct2D.ID2D1StrokeStyle*, win32.System.Com.HRESULT>DrawGeometry_16;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.ID2D1Brush*, float, win32.Graphics.Direct2D.ID2D1StrokeStyle*, win32.System.Com.HRESULT>DrawRectangle_17;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.ID2D1Bitmap*, win32.Graphics.Direct2D.D2D_RECT_F*, float, win32.Graphics.Direct2D.D2D1_INTERPOLATION_MODE, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.D2D_MATRIX_4X4_F*, win32.System.Com.HRESULT>DrawBitmap_18;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.ID2D1Image*, win32.Graphics.Direct2D.D2D_POINT_2F*, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.D2D1_INTERPOLATION_MODE, win32.Graphics.Direct2D.D2D1_COMPOSITE_MODE, win32.System.Com.HRESULT>DrawImage_19;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.ID2D1GdiMetafile*, win32.Graphics.Direct2D.D2D_POINT_2F*, win32.System.Com.HRESULT>DrawGdiMetafile_20;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.ID2D1Mesh*, win32.Graphics.Direct2D.ID2D1Brush*, win32.System.Com.HRESULT>FillMesh_21;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.ID2D1Bitmap*, win32.Graphics.Direct2D.ID2D1Brush*, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.D2D_RECT_F*, win32.System.Com.HRESULT>FillOpacityMask_22;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.ID2D1Geometry*, win32.Graphics.Direct2D.ID2D1Brush*, win32.Graphics.Direct2D.ID2D1Brush*, win32.System.Com.HRESULT>FillGeometry_23;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.ID2D1Brush*, win32.System.Com.HRESULT>FillRectangle_24;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D_RECT_F*, win32.Graphics.Direct2D.D2D1_ANTIALIAS_MODE, win32.System.Com.HRESULT>PushAxisAlignedClip_25;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D1_LAYER_PARAMETERS1*, win32.Graphics.Direct2D.ID2D1Layer*, win32.System.Com.HRESULT>PushLayer_26;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.System.Com.HRESULT>PopAxisAlignedClip_27;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.System.Com.HRESULT>PopLayer_28;
                internal delegate *unmanaged[Stdcall]<ID2D1CommandSink1*, win32.Graphics.Direct2D.D2D1_PRIMITIVE_BLEND, win32.System.Com.HRESULT>SetPrimitiveBlend1_29;
            }

            private Vtbl*lpVtbl;
        }
    }
}