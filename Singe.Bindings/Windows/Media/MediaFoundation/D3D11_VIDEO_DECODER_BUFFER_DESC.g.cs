// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace Media.MediaFoundation
    {
        /// <summary>Describes a compressed buffer for decoding.</summary>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_video_decoder_buffer_desc">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct D3D11_VIDEO_DECODER_BUFFER_DESC
        {
            /// <summary>The type of buffer, specified as a member of the <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_video_decoder_buffer_type">D3D11_VIDEO_DECODER_BUFFER_TYPE</a> enumeration.</summary>
            internal win32.Media.MediaFoundation.D3D11_VIDEO_DECODER_BUFFER_TYPE BufferType;
            /// <summary>Reserved.</summary>
            internal uint BufferIndex;
            /// <summary>The offset of the relevant data from the beginning of the buffer, in bytes. This value must be zero.</summary>
            internal uint DataOffset;
            /// <summary></summary>
            internal uint DataSize;
            /// <summary>The macroblock address of the first macroblock in the buffer. The macroblock address is given in raster scan order.</summary>
            internal uint FirstMBaddress;
            /// <summary>The number of macroblocks of data in the buffer. This count includes skipped macroblocks.</summary>
            internal uint NumMBsInBuffer;
            /// <summary>Reserved. Set to zero.</summary>
            internal uint Width;
            /// <summary>Reserved. Set to zero.</summary>
            internal uint Height;
            /// <summary>Reserved. Set to zero.</summary>
            internal uint Stride;
            /// <summary>Reserved. Set to zero.</summary>
            internal uint ReservedBits;
            /// <summary>A pointer to a buffer that contains an initialization vector (IV) for encrypted data. If the decode buffer does not contain encrypted data, set this member to <b>NULL</b>.</summary>
            internal unsafe void *pIV;
            /// <summary>The size of the buffer specified in the <b>pIV</b> parameter. If <b>pIV</b> is <b>NULL</b>, set this member to zero.</summary>
            internal uint IVSize;
            /// <summary>If <b>TRUE</b>, the video surfaces are partially encrypted.</summary>
            internal win32.System.SystemServices.BOOL PartialEncryption;
            /// <summary>A <a href = "https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_encrypted_block_info">D3D11_ENCRYPTED_BLOCK_INFO</a> structure that specifies which bytes of the surface are encrypted.</summary>
            internal win32.Media.MediaFoundation.D3D11_ENCRYPTED_BLOCK_INFO EncryptedBlockInfo;
        }
    }
}