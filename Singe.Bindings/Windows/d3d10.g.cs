// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    internal static partial class d3d10
    {
        /// <inheritdoc cref = "D3D10CreateDevice(win32.Graphics.Dxgi.IDXGIAdapter*, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE, win32.System.SystemServices.HINSTANCE, uint, uint, win32.Graphics.Direct3D10.ID3D10Device**)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10CreateDevice(win32.Graphics.Dxgi.IDXGIAdapter*pAdapter, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE DriverType, SafeHandle Software, uint Flags, uint SDKVersion, win32.Graphics.Direct3D10.ID3D10Device**ppDevice)
        {
            bool SoftwareAddRef = false;
            try
            {
                win32.System.SystemServices.HINSTANCE SoftwareLocal;
                if (Software is object)
                {
                    Software.DangerousAddRef(ref SoftwareAddRef);
                    SoftwareLocal = (win32.System.SystemServices.HINSTANCE)Software.DangerousGetHandle();
                }
                else
                    SoftwareLocal = default(win32.System.SystemServices.HINSTANCE);
                win32.System.Com.HRESULT __result = d3d10.D3D10CreateDevice(pAdapter, DriverType, SoftwareLocal, Flags, SDKVersion, ppDevice);
                return __result;
            }
            finally
            {
                if (SoftwareAddRef)
                    Software.DangerousRelease();
            }
        }

        /// <summary>Create a Direct3D 10.0 device that represents the display adapter.</summary>
        /// <param name = "pAdapter">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>*</b></para>
        /// <para>Pointer to the display adapter (see <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>) when creating a hardware device; otherwise set this parameter to <b>NULL</b>. If <b>NULL</b> is specified when creating a hardware device, Direct3D will use the first adapter enumerated by <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-enumadapters">EnumAdapters</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "DriverType">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10misc/ne-d3d10misc-d3d10_driver_type">D3D10_DRIVER_TYPE</a></b></para>
        /// <para>The device-driver type (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10misc/ne-d3d10misc-d3d10_driver_type">D3D10_DRIVER_TYPE</a>). The driver type determines the type of device you will create.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Software">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMODULE</a></b></para>
        /// <para>Reserved. Set to <b>NULL</b>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Optional. Device creation flags (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/ne-d3d10-d3d10_create_device_flag">D3D10_CREATE_DEVICE_FLAG</a>) that enable <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-graphics-programming-guide-api-features-layers">API layers</a>. These flags can be bitwise OR'd together.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SDKVersion">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Bit flag that indicates the version of the SDK. Should always be D3D10_SDK_VERSION.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>**</b></para>
        /// <para>Address of a pointer to the device created (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdevice">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CreateDevice([Optional] win32.Graphics.Dxgi.IDXGIAdapter*pAdapter, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE DriverType, win32.System.SystemServices.HINSTANCE Software, uint Flags, uint SDKVersion, [Optional] win32.Graphics.Direct3D10.ID3D10Device**ppDevice);
        /// <inheritdoc cref = "D3D10CreateDeviceAndSwapChain(win32.Graphics.Dxgi.IDXGIAdapter*, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE, win32.System.SystemServices.HINSTANCE, uint, uint, win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*, win32.Graphics.Dxgi.IDXGISwapChain**, win32.Graphics.Direct3D10.ID3D10Device**)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10CreateDeviceAndSwapChain(win32.Graphics.Dxgi.IDXGIAdapter*pAdapter, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE DriverType, SafeHandle Software, uint Flags, uint SDKVersion, win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC? pSwapChainDesc, win32.Graphics.Dxgi.IDXGISwapChain**ppSwapChain, win32.Graphics.Direct3D10.ID3D10Device**ppDevice)
        {
            bool SoftwareAddRef = false;
            try
            {
                win32.System.SystemServices.HINSTANCE SoftwareLocal;
                if (Software is object)
                {
                    Software.DangerousAddRef(ref SoftwareAddRef);
                    SoftwareLocal = (win32.System.SystemServices.HINSTANCE)Software.DangerousGetHandle();
                }
                else
                    SoftwareLocal = default(win32.System.SystemServices.HINSTANCE);
                win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC pSwapChainDescLocal = pSwapChainDesc.HasValue ? pSwapChainDesc.Value : default(win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC);
                win32.System.Com.HRESULT __result = d3d10.D3D10CreateDeviceAndSwapChain(pAdapter, DriverType, SoftwareLocal, Flags, SDKVersion, pSwapChainDesc.HasValue ? &pSwapChainDescLocal : null, ppSwapChain, ppDevice);
                return __result;
            }
            finally
            {
                if (SoftwareAddRef)
                    Software.DangerousRelease();
            }
        }

        /// <summary>Create a Direct3D 10.0 device and a swap chain.</summary>
        /// <param name = "pAdapter">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>*</b></para>
        /// <para>Pointer to a <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "DriverType">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10misc/ne-d3d10misc-d3d10_driver_type">D3D10_DRIVER_TYPE</a></b></para>
        /// <para>The type of driver for the device. See <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10misc/ne-d3d10misc-d3d10_driver_type">D3D10_DRIVER_TYPE</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Software">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMODULE</a></b></para>
        /// <para>A handle to the DLL that implements a software rasterizer. Must be <b>NULL</b> if DriverType is non-software. The HMODULE of a DLL can be obtained with <a href = "https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibrarya">LoadLibrary</a>, <a href = "https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibraryexa">LoadLibraryEx</a>, or <a href = "https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-getmodulehandlea">GetModuleHandle</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Optional. Device creation flags (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/ne-d3d10-d3d10_create_device_flag">D3D10_CREATE_DEVICE_FLAG</a>) that enable <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-graphics-programming-guide-api-features-layers">API layers</a>. These flags can be bitwise OR'd together.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SDKVersion">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Bit flag that indicates the version of the SDK. Should be D3D10_SDK_VERSION, defined in d3d10.h.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pSwapChainDesc">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>*</b></para>
        /// <para>Description of the swap chain. See <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppSwapChain">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiswapchain">IDXGISwapChain</a>**</b></para>
        /// <para>Address of a pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiswapchain">IDXGISwapChain</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>**</b></para>
        /// <para>Address of a pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device Interface</a> that will receive the newly created device.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createdeviceandswapchain">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CreateDeviceAndSwapChain([Optional] win32.Graphics.Dxgi.IDXGIAdapter*pAdapter, win32.Graphics.Direct3D10.D3D10_DRIVER_TYPE DriverType, win32.System.SystemServices.HINSTANCE Software, uint Flags, uint SDKVersion, [Optional] win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*pSwapChainDesc, [Optional] win32.Graphics.Dxgi.IDXGISwapChain**ppSwapChain, [Optional] win32.Graphics.Direct3D10.ID3D10Device**ppDevice);
        /// <summary>Create a buffer.Note  Instead of using this function, we recommend that you use the D3DCreateBlob API.</summary>
        /// <param name = "NumBytes">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Number of bytes in the blob.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppBuffer">
        /// <para>Type: <b><a href = "https://msdn.microsoft.com/d180fee0-1a69-4250-a0c4-d6e3754f063a">LPD3D10BLOB</a>*</b></para>
        /// <para>The address of a pointer to the buffer (see <a href = "https://msdn.microsoft.com/d180fee0-1a69-4250-a0c4-d6e3754f063a">ID3D10Blob Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10misc/nf-d3d10misc-d3d10createblob">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CreateBlob(nuint NumBytes, win32.Graphics.Direct3D11.ID3DBlob**ppBuffer);
        /// <inheritdoc cref = "D3D10CompileShader(win32.System.SystemServices.PCSTR, nuint, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D11.D3D_SHADER_MACRO*, win32.Graphics.Direct3D11.ID3DInclude*, win32.System.SystemServices.PCSTR, win32.System.SystemServices.PCSTR, uint, win32.Graphics.Direct3D11.ID3DBlob**, win32.Graphics.Direct3D11.ID3DBlob**)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10CompileShader(win32.System.SystemServices.PCSTR pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pFileName, win32.Graphics.Direct3D11.D3D_SHADER_MACRO? pDefines, win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.System.SystemServices.PCSTR pFunctionName, win32.System.SystemServices.PCSTR pProfile, uint Flags, win32.Graphics.Direct3D11.ID3DBlob**ppShader, win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs)
        {
            win32.Graphics.Direct3D11.D3D_SHADER_MACRO pDefinesLocal = pDefines.HasValue ? pDefines.Value : default(win32.Graphics.Direct3D11.D3D_SHADER_MACRO);
            win32.System.Com.HRESULT __result = d3d10.D3D10CompileShader(pSrcData, SrcDataSize, pFileName, pDefines.HasValue ? &pDefinesLocal : null, pInclude, pFunctionName, pProfile, Flags, ppShader, ppErrorMsgs);
            return __result;
        }

        /// <summary>Compile an HLSL shader.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>Pointer to a string containing the shader source code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Size of pSrcData, in bytes.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pFileName">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The name of the file that contains the shader code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pDefines">
        /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D10_SHADER_MACRO</a>*</b></para>
        /// <para>Optional. Pointer to an array of macro definitions (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D10_SHADER_MACRO</a>). The last structure in the array serves as a terminator and must have all members set to 0. If not used, set <i>pDefines</i> to <b>NULL</b>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pInclude">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173775(v=vs.85)">LPD3D10INCLUDE</a>*</b></para>
        /// <para>Optional. Pointer to an <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173775(v=vs.85)">ID3D10Include Interface</a> interface for handling include files. Setting this to <b>NULL</b> will cause a compile error if a shader contains a #include.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pFunctionName">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>Name of the shader-entry point function where shader execution begins.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pProfile">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>A string that specifies the <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-models">shader profile</a> or shader model.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Flags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Shader <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-shader">compile options</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppShader">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>A pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a> that contains the compiled shader, as well as any embedded debug and symbol-table information.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppErrorMsgs">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>A pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a> that contains a listing of errors and warnings that occurred during compilation. These errors and warnings are identical to the debug output from a debugger.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10compileshader">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CompileShader(win32.System.SystemServices.PCSTR pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pFileName, [Optional] win32.Graphics.Direct3D11.D3D_SHADER_MACRO*pDefines, [Optional] win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.System.SystemServices.PCSTR pFunctionName, win32.System.SystemServices.PCSTR pProfile, uint Flags, win32.Graphics.Direct3D11.ID3DBlob**ppShader, [Optional] win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs);
        /// <summary>This function -- which disassembles a compiled shader into a text string that contains assembly instructions and register assignments -- has been deprecated. Instead, use D3DDisassemble.</summary>
        /// <param name = "pShader">
        /// <para>Type: <b>const void*</b></para>
        /// <para>A pointer to the compiled shader.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10disassembleshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "BytecodeLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The size of pShader.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10disassembleshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "EnableColorCode">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
        /// <para>Include HTML tags in the output to color code the result.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10disassembleshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pComments">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The comment string at the top of the shader that identifies the shader constants and variables.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10disassembleshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDisassembly">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>Address of a buffer which contains the disassembled shader.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10disassembleshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Return value</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10disassembleshader">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10DisassembleShader(void *pShader, nuint BytecodeLength, bool EnableColorCode, win32.System.SystemServices.PCSTR pComments, win32.Graphics.Direct3D11.ID3DBlob**ppDisassembly);
        /// <summary>Get the pixel shader profile best suited to a given device.</summary>
        /// <param name = "pDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>*</b></para>
        /// <para>Pointer to the device (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getpixelshaderprofile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The shader profile.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getpixelshaderprofile">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.SystemServices.PCSTR D3D10GetPixelShaderProfile(win32.Graphics.Direct3D10.ID3D10Device*pDevice);
        /// <summary>Get the vertex shader profile best suited to a given device.</summary>
        /// <param name = "pDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>*</b></para>
        /// <para>Pointer to the device (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getvertexshaderprofile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The shader profile.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getvertexshaderprofile">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.SystemServices.PCSTR D3D10GetVertexShaderProfile(win32.Graphics.Direct3D10.ID3D10Device*pDevice);
        /// <summary>Get the geometry shader profile best suited to a given device.</summary>
        /// <param name = "pDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>*</b></para>
        /// <para>Pointer to the device (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getgeometryshaderprofile#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The shader profile.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getgeometryshaderprofile">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.SystemServices.PCSTR D3D10GetGeometryShaderProfile(win32.Graphics.Direct3D10.ID3D10Device*pDevice);
        /// <summary>This function -- which creates a shader-reflection object for retrieving information about a compiled shader -- has been deprecated. Instead, use D3DReflect.</summary>
        /// <param name = "pShaderBytecode">
        /// <para>Type: <b>const void*</b></para>
        /// <para>A pointer to the compiled shader.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10reflectshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "BytecodeLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of pShaderBytecode.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10reflectshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppReflector">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10shader/nn-d3d10shader-id3d10shaderreflection">ID3D10ShaderReflection</a>**</b></para>
        /// <para>Address of a reflection interface.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10reflectshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Return value.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10reflectshader">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10ReflectShader(void *pShaderBytecode, nuint BytecodeLength, win32.Graphics.Direct3D10.ID3D10ShaderReflection**ppReflector);
        /// <inheritdoc cref = "D3D10PreprocessShader(win32.System.SystemServices.PCSTR, nuint, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D11.D3D_SHADER_MACRO*, win32.Graphics.Direct3D11.ID3DInclude*, win32.Graphics.Direct3D11.ID3DBlob**, win32.Graphics.Direct3D11.ID3DBlob**)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10PreprocessShader(win32.System.SystemServices.PCSTR pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pFileName, win32.Graphics.Direct3D11.D3D_SHADER_MACRO? pDefines, win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.Graphics.Direct3D11.ID3DBlob**ppShaderText, win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs)
        {
            win32.Graphics.Direct3D11.D3D_SHADER_MACRO pDefinesLocal = pDefines.HasValue ? pDefines.Value : default(win32.Graphics.Direct3D11.D3D_SHADER_MACRO);
            win32.System.Com.HRESULT __result = d3d10.D3D10PreprocessShader(pSrcData, SrcDataSize, pFileName, pDefines.HasValue ? &pDefinesLocal : null, pInclude, ppShaderText, ppErrorMsgs);
            return __result;
        }

        /// <summary>Generate a shader-text string that contains the shader tokens that would be found in a compiled shader.</summary>
        /// <param name = "pSrcData">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>Pointer to a string containing the shader source code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10preprocessshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "SrcDataSize">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Size of pSrcData, in bytes.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10preprocessshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pFileName">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The name of the file that contains the shader code.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10preprocessshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pDefines">
        /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D10_SHADER_MACRO</a>*</b></para>
        /// <para>Optional. Pointer to an array of macro definitions (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D10_SHADER_MACRO</a>). The last structure in the array serves as a terminator and must have all members set to 0. If not used, set <i>pDefines</i> to <b>NULL</b>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10preprocessshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pInclude">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173775(v=vs.85)">LPD3D10INCLUDE</a></b></para>
        /// <para>Optional. Pointer to an <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173775(v=vs.85)">ID3D10Include Interface</a> interface for handling include files. Setting this to <b>NULL</b> will cause a compile error if a shader contains a #include.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10preprocessshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppShaderText">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>A pointer to a buffer that receives a pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a> that contains a single string containing shader-tokens.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10preprocessshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppErrorMsgs">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>A pointer to a buffer that receives a pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a> that contains a listing of errors and warnings that occurred during compilation. These errors and warnings are identical to the debug output from a debugger.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10preprocessshader#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10preprocessshader">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10PreprocessShader(win32.System.SystemServices.PCSTR pSrcData, nuint SrcDataSize, win32.System.SystemServices.PCSTR pFileName, [Optional] win32.Graphics.Direct3D11.D3D_SHADER_MACRO*pDefines, [Optional] win32.Graphics.Direct3D11.ID3DInclude*pInclude, win32.Graphics.Direct3D11.ID3DBlob**ppShaderText, [Optional] win32.Graphics.Direct3D11.ID3DBlob**ppErrorMsgs);
        /// <summary>Get a buffer that contains shader-input signatures.</summary>
        /// <param name = "pShaderBytecode">
        /// <para>Type: <b>const void*</b></para>
        /// <para>A pointer to the compiled shader. To get this pointer see <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-using-shaders-10">Getting a Pointer to a Compiled Shader</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getinputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "BytecodeLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The size of the shader bytecode in bytes.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getinputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppSignatureBlob">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>The address of a pointer to the buffer (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getinputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getinputsignatureblob">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10GetInputSignatureBlob(void *pShaderBytecode, nuint BytecodeLength, win32.Graphics.Direct3D11.ID3DBlob**ppSignatureBlob);
        /// <summary>Get a buffer that contains shader-output signatures.</summary>
        /// <param name = "pShaderBytecode">
        /// <para>Type: <b>const void*</b></para>
        /// <para>A pointer to the compiled shader. To get this pointer see <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-using-shaders-10">Getting a Pointer to a Compiled Shader</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "BytecodeLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The size of the shader bytecode in bytes.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppSignatureBlob">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>The address of a pointer to the buffer (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getoutputsignatureblob">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10GetOutputSignatureBlob(void *pShaderBytecode, nuint BytecodeLength, win32.Graphics.Direct3D11.ID3DBlob**ppSignatureBlob);
        /// <summary>Get a buffer that contains shader signatures.</summary>
        /// <param name = "pShaderBytecode">
        /// <para>Type: <b>const void*</b></para>
        /// <para>A pointer to the compiled shader. To get this pointer see <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-using-shaders-10">Getting a Pointer to a Compiled Shader</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getinputandoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "BytecodeLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>The size of the shader bytecode in bytes.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getinputandoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppSignatureBlob">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>The address of a pointer to the buffer (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getinputandoutputsignatureblob#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getinputandoutputsignatureblob">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10GetInputAndOutputSignatureBlob(void *pShaderBytecode, nuint BytecodeLength, win32.Graphics.Direct3D11.ID3DBlob**ppSignatureBlob);
        /// <summary>Get shader debug info. Debug info is generated by D3D10CompileShader and is embedded in the body of the shader.</summary>
        /// <param name = "pShaderBytecode">
        /// <para>Type: <b>const void*</b></para>
        /// <para>A pointer to the compiled shader. To get this pointer see <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-using-shaders-10">Getting a Pointer to a Compiled Shader</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getshaderdebuginfo#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "BytecodeLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of the shader bytecode buffer.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getshaderdebuginfo#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDebugInfo">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>Pointer to an <a href = "https://docs.microsoft.com/windows/win32/api/d3d10_1shader/ns-d3d10_1shader-d3d10_shader_debug_info">ID3D10Blob Interface</a> used to return debug info.  For information about the layout of this buffer, see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10_1shader/ns-d3d10_1shader-d3d10_shader_debug_info">D3D10_SHADER_DEBUG_INFO</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getshaderdebuginfo#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10shader/nf-d3d10shader-d3d10getshaderdebuginfo">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10GetShaderDebugInfo(void *pShaderBytecode, nuint BytecodeLength, win32.Graphics.Direct3D11.ID3DBlob**ppDebugInfo);
        /// <inheritdoc cref = "D3D10StateBlockMaskUnion(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10StateBlockMaskUnion(in win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pA, in win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pB, out win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pResult)
        {
            fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pResultLocal = &pResult)
            {
                fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pBLocal = &pB)
                {
                    fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pALocal = &pA)
                    {
                        win32.System.Com.HRESULT __result = d3d10.D3D10StateBlockMaskUnion(pALocal, pBLocal, pResultLocal);
                        return __result;
                    }
                }
            }
        }

        /// <summary>Combine two state-block masks with a bitwise OR.</summary>
        /// <param name = "pA">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>State block mask on the left side of the bitwise OR operation. See <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskunion#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pB">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>State block mask on the right side of the bitwise OR operation.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskunion#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pResult">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>The result of the bitwise OR operation.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskunion#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskunion">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10StateBlockMaskUnion(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pA, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pB, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pResult);
        /// <inheritdoc cref = "D3D10StateBlockMaskIntersect(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10StateBlockMaskIntersect(in win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pA, in win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pB, out win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pResult)
        {
            fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pResultLocal = &pResult)
            {
                fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pBLocal = &pB)
                {
                    fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pALocal = &pA)
                    {
                        win32.System.Com.HRESULT __result = d3d10.D3D10StateBlockMaskIntersect(pALocal, pBLocal, pResultLocal);
                        return __result;
                    }
                }
            }
        }

        /// <summary>Combine two state-block masks with a bitwise AND.</summary>
        /// <param name = "pA">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>State block mask on the left side of the bitwise AND operation. See <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskintersect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pB">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>State block mask on the right side of the bitwise AND operation.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskintersect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pResult">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>The result of the bitwise AND operation.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskintersect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskintersect">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10StateBlockMaskIntersect(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pA, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pB, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pResult);
        /// <inheritdoc cref = "D3D10StateBlockMaskDifference(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10StateBlockMaskDifference(in win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pA, in win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pB, out win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pResult)
        {
            fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pResultLocal = &pResult)
            {
                fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pBLocal = &pB)
                {
                    fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pALocal = &pA)
                    {
                        win32.System.Com.HRESULT __result = d3d10.D3D10StateBlockMaskDifference(pALocal, pBLocal, pResultLocal);
                        return __result;
                    }
                }
            }
        }

        /// <summary>Combine two state-block masks with a bitwise XOR.</summary>
        /// <param name = "pA">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>State block mask on the left side of the bitwise XOR operation. See <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdifference#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pB">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>State block mask on the right side of the bitwise XOR operation.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdifference#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pResult">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>The result of the bitwise XOR operation.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdifference#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdifference">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10StateBlockMaskDifference(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pA, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pB, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pResult);
        /// <inheritdoc cref = "D3D10StateBlockMaskEnableCapture(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.D3D10_DEVICE_STATE_TYPES, uint, uint)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10StateBlockMaskEnableCapture(ref win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pMask, win32.Graphics.Direct3D10.D3D10_DEVICE_STATE_TYPES StateType, uint RangeStart, uint RangeLength)
        {
            fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMaskLocal = &pMask)
            {
                win32.System.Com.HRESULT __result = d3d10.D3D10StateBlockMaskEnableCapture(pMaskLocal, StateType, RangeStart, RangeLength);
                return __result;
            }
        }

        /// <summary>Enable a range of state values in a state block mask.</summary>
        /// <param name = "pMask">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>A state block mask (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskenablecapture#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "StateType">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ne-d3d10effect-d3d10_device_state_types">D3D10_DEVICE_STATE_TYPES</a></b></para>
        /// <para>The type of device state to enable (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ne-d3d10effect-d3d10_device_state_types">D3D10_DEVICE_STATE_TYPES</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskenablecapture#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "RangeStart">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>The lower end of the range of values to set to true.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskenablecapture#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "RangeLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>The upper end of the range of values to set to true.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskenablecapture#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskenablecapture">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10StateBlockMaskEnableCapture(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMask, win32.Graphics.Direct3D10.D3D10_DEVICE_STATE_TYPES StateType, uint RangeStart, uint RangeLength);
        /// <inheritdoc cref = "D3D10StateBlockMaskDisableCapture(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.D3D10_DEVICE_STATE_TYPES, uint, uint)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10StateBlockMaskDisableCapture(ref win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pMask, win32.Graphics.Direct3D10.D3D10_DEVICE_STATE_TYPES StateType, uint RangeStart, uint RangeLength)
        {
            fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMaskLocal = &pMask)
            {
                win32.System.Com.HRESULT __result = d3d10.D3D10StateBlockMaskDisableCapture(pMaskLocal, StateType, RangeStart, RangeLength);
                return __result;
            }
        }

        /// <summary>Disable state capturing with a state-block mask.</summary>
        /// <param name = "pMask">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>A state block mask (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdisablecapture#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "StateType">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ne-d3d10effect-d3d10_device_state_types">D3D10_DEVICE_STATE_TYPES</a></b></para>
        /// <para>The type of device state to disable (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ne-d3d10effect-d3d10_device_state_types">D3D10_DEVICE_STATE_TYPES</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdisablecapture#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "RangeStart">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>The lower end of the range of values to set to false.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdisablecapture#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "RangeLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>The upper end of the range of values to set to false.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdisablecapture#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdisablecapture">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10StateBlockMaskDisableCapture(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMask, win32.Graphics.Direct3D10.D3D10_DEVICE_STATE_TYPES StateType, uint RangeStart, uint RangeLength);
        /// <inheritdoc cref = "D3D10StateBlockMaskEnableAll(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10StateBlockMaskEnableAll(out win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pMask)
        {
            fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMaskLocal = &pMask)
            {
                win32.System.Com.HRESULT __result = d3d10.D3D10StateBlockMaskEnableAll(pMaskLocal);
                return __result;
            }
        }

        /// <summary>Enable a state-block mask to capture and apply all state variables.</summary>
        /// <param name = "pMask">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>A mask with everything turned on.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskenableall#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskenableall">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10StateBlockMaskEnableAll(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMask);
        /// <inheritdoc cref = "D3D10StateBlockMaskDisableAll(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10StateBlockMaskDisableAll(out win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pMask)
        {
            fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMaskLocal = &pMask)
            {
                win32.System.Com.HRESULT __result = d3d10.D3D10StateBlockMaskDisableAll(pMaskLocal);
                return __result;
            }
        }

        /// <summary>Disable all state capturing with a state-block mask.</summary>
        /// <param name = "pMask">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>A mask filled with all zeroes (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdisableall#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskdisableall">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10StateBlockMaskDisableAll(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMask);
        /// <inheritdoc cref = "D3D10StateBlockMaskGetSetting(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.D3D10_DEVICE_STATE_TYPES, uint)"/>
        internal static unsafe bool D3D10StateBlockMaskGetSetting(in win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pMask, win32.Graphics.Direct3D10.D3D10_DEVICE_STATE_TYPES StateType, uint Entry)
        {
            fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMaskLocal = &pMask)
            {
                bool __result = d3d10.D3D10StateBlockMaskGetSetting(pMaskLocal, StateType, Entry);
                return __result;
            }
        }

        /// <summary>Get an element in a state-block mask; determine if an element is allowed by the mask for capturing and applying.</summary>
        /// <param name = "pMask">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>State block mask. See <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskgetsetting#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "StateType">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ne-d3d10effect-d3d10_device_state_types">D3D10_DEVICE_STATE_TYPES</a></b></para>
        /// <para>The type of device state. See <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ne-d3d10effect-d3d10_device_state_types">D3D10_DEVICE_STATE_TYPES</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskgetsetting#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "Entry">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>The entry within the device state. This is only relevant for state types that have more than one entry, such as D3D10_DST_GS_SAMPLERS.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskgetsetting#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
        /// <para>Returns true if the specified feature is allowed by the mask for capturing and applying, and false otherwise.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10stateblockmaskgetsetting">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe bool D3D10StateBlockMaskGetSetting(win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pMask, win32.Graphics.Direct3D10.D3D10_DEVICE_STATE_TYPES StateType, uint Entry);
        /// <inheritdoc cref = "D3D10CreateStateBlock(win32.Graphics.Direct3D10.ID3D10Device*, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*, win32.Graphics.Direct3D10.ID3D10StateBlock**)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10CreateStateBlock(win32.Graphics.Direct3D10.ID3D10Device*pDevice, in win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK pStateBlockMask, win32.Graphics.Direct3D10.ID3D10StateBlock**ppStateBlock)
        {
            fixed (win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pStateBlockMaskLocal = &pStateBlockMask)
            {
                win32.System.Com.HRESULT __result = d3d10.D3D10CreateStateBlock(pDevice, pStateBlockMaskLocal, ppStateBlock);
                return __result;
            }
        }

        /// <summary>Create a state block.</summary>
        /// <param name = "pDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>*</b></para>
        /// <para>The device for which the state block will be created.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createstateblock#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pStateBlockMask">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/ns-d3d10effect-d3d10_state_block_mask">D3D10_STATE_BLOCK_MASK</a>*</b></para>
        /// <para>Indicates which parts of the device state will be captured when calling <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nf-d3d10effect-id3d10stateblock-capture">ID3D10StateBlock::Capture</a> and reapplied when calling <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nf-d3d10effect-id3d10stateblock-apply">ID3D10StateBlock::Apply</a>. See remarks.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createstateblock#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppStateBlock">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10stateblock">ID3D10StateBlock</a>**</b></para>
        /// <para>Address of a pointer to the buffer created (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10stateblock">ID3D10StateBlock Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createstateblock#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>This method returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createstateblock">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CreateStateBlock(win32.Graphics.Direct3D10.ID3D10Device*pDevice, win32.Graphics.Direct3D10.D3D10_STATE_BLOCK_MASK*pStateBlockMask, win32.Graphics.Direct3D10.ID3D10StateBlock**ppStateBlock);
        /// <inheritdoc cref = "D3D10CompileEffectFromMemory(void *, nuint, win32.System.SystemServices.PCSTR, win32.Graphics.Direct3D11.D3D_SHADER_MACRO*, win32.Graphics.Direct3D11.ID3DInclude*, uint, uint, win32.Graphics.Direct3D11.ID3DBlob**, win32.Graphics.Direct3D11.ID3DBlob**)"/>
        internal static unsafe win32.System.Com.HRESULT D3D10CompileEffectFromMemory(void *pData, nuint DataLength, win32.System.SystemServices.PCSTR pSrcFileName, win32.Graphics.Direct3D11.D3D_SHADER_MACRO? pDefines, win32.Graphics.Direct3D11.ID3DInclude*pInclude, uint HLSLFlags, uint FXFlags, win32.Graphics.Direct3D11.ID3DBlob**ppCompiledEffect, win32.Graphics.Direct3D11.ID3DBlob**ppErrors)
        {
            win32.Graphics.Direct3D11.D3D_SHADER_MACRO pDefinesLocal = pDefines.HasValue ? pDefines.Value : default(win32.Graphics.Direct3D11.D3D_SHADER_MACRO);
            win32.System.Com.HRESULT __result = d3d10.D3D10CompileEffectFromMemory(pData, DataLength, pSrcFileName, pDefines.HasValue ? &pDefinesLocal : null, pInclude, HLSLFlags, FXFlags, ppCompiledEffect, ppErrors);
            return __result;
        }

        /// <summary>Compile an effect.</summary>
        /// <param name = "pData">
        /// <para>Type: <b>void*</b></para>
        /// <para>A pointer to effect data; either ASCII <a href = "https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-reference">HLSL</a> code or a compiled effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "DataLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pSrcFileName">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
        /// <para>The name of the effect file.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pDefines">
        /// <para>Type: <b>const <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D10_SHADER_MACRO</a>*</b></para>
        /// <para>Optional. An array of NULL-terminated macro definitions (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/ns-d3dcommon-d3d_shader_macro">D3D10_SHADER_MACRO</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pInclude">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173775(v=vs.85)">ID3D10Include</a>*</b></para>
        /// <para>Optional. A pointer to an <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173775(v=vs.85)">ID3D10Include Interface</a> for handling include files. Setting this to <b>NULL</b> will cause a compile error if a shader contains a #include.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "HLSLFlags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Shader <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-shader">compile options</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "FXFlags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Effect <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-graphics-reference-effect-constants">compile options</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppCompiledEffect">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>The address of a <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a> that contains the compiled effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppErrors">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>Optional. A pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a> that contains compiler error messages, or <b>NULL</b> if there were no errors.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10compileeffectfrommemory">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CompileEffectFromMemory(void *pData, nuint DataLength, win32.System.SystemServices.PCSTR pSrcFileName, [Optional] win32.Graphics.Direct3D11.D3D_SHADER_MACRO*pDefines, [Optional] win32.Graphics.Direct3D11.ID3DInclude*pInclude, uint HLSLFlags, uint FXFlags, win32.Graphics.Direct3D11.ID3DBlob**ppCompiledEffect, [Optional] win32.Graphics.Direct3D11.ID3DBlob**ppErrors);
        /// <summary>Creates an ID3D10Effect from a buffer containing a compiled effect.</summary>
        /// <param name = "pData">
        /// <para>Type: <b>void*</b></para>
        /// <para>A pointer to a compiled effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "DataLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "FXFlags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Effect <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-graphics-reference-effect-constants">compile options</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>*</b></para>
        /// <para>A pointer to the device (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pEffectPool">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectpool">ID3D10EffectPool</a>*</b></para>
        /// <para>Optional. A pointer to an memory space for effect variables that are shared across effects (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectpool">ID3D10EffectPool Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppEffect">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effect">ID3D10Effect</a>**</b></para>
        /// <para>A pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effect">ID3D10Effect Interface</a> which contains the created effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectfrommemory">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CreateEffectFromMemory(void *pData, nuint DataLength, uint FXFlags, win32.Graphics.Direct3D10.ID3D10Device*pDevice, [Optional] win32.Graphics.Direct3D10.ID3D10EffectPool*pEffectPool, win32.Graphics.Direct3D10.ID3D10Effect**ppEffect);
        /// <summary>Create an effect pool (or shared memory location), to enable sharing variables between effects.</summary>
        /// <param name = "pData">
        /// <para>Type: <b>void*</b></para>
        /// <para>A pointer to a compiled effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectpoolfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "DataLength">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b></para>
        /// <para>Length of <i>pData</i>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectpoolfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "FXFlags">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
        /// <para>Effect <a href = "https://docs.microsoft.com/windows/desktop/direct3d10/d3d10-graphics-reference-effect-constants">compile options</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectpoolfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "pDevice">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>*</b></para>
        /// <para>A pointer to the device (see <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device Interface</a>).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectpoolfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppEffectPool">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectpool">ID3D10EffectPool</a>**</b></para>
        /// <para>A pointer to the <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effectpool">ID3D10EffectPool Interface</a> that contains the effect pool.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectpoolfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10createeffectpoolfrommemory">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10CreateEffectPoolFromMemory(void *pData, nuint DataLength, uint FXFlags, win32.Graphics.Direct3D10.ID3D10Device*pDevice, win32.Graphics.Direct3D10.ID3D10EffectPool**ppEffectPool);
        /// <summary>This function -- which disassembles a compiled effect into a text string that contains assembly instructions and register assignments -- has been deprecated. Instead, use D3DDisassemble10Effect.</summary>
        /// <param name = "pEffect">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effect">ID3D10Effect</a>*</b></para>
        /// <para>A pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3d10effect/nn-d3d10effect-id3d10effect">ID3D10Effect Interface</a>, which contains the compiled effect.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10disassembleeffect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "EnableColorCode">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
        /// <para>Include HTML tags in the output to color code the result.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10disassembleeffect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <param name = "ppDisassembly">
        /// <para>Type: <b><a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob</a>**</b></para>
        /// <para>A pointer to an <a href = "https://docs.microsoft.com/windows/desktop/api/d3dcommon/nn-d3dcommon-id3d10blob">ID3D10Blob Interface</a> which contains the disassembled shader.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10disassembleeffect#parameters">Read more on docs.microsoft.com</see>.</para>
        /// </param>
        /// <returns>
        /// <para>Type: <b><a href = "/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
        /// <para>Returns one of the following <a href = "/windows/desktop/direct3d10/d3d10-graphics-reference-returnvalues">Direct3D 10 Return Codes</a>.</para>
        /// </returns>
        /// <remarks>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//d3d10effect/nf-d3d10effect-d3d10disassembleeffect">Learn more about this API from docs.microsoft.com</see>.</para>
        /// </remarks>
        [DllImport("d3d10", ExactSpelling = true)]
        internal static extern unsafe win32.System.Com.HRESULT D3D10DisassembleEffect(win32.Graphics.Direct3D10.ID3D10Effect*pEffect, bool EnableColorCode, win32.Graphics.Direct3D11.ID3DBlob**ppDisassembly);
    }
}