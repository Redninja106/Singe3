// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace UI.DisplayDevices
    {
        /// <summary>The DISPLAYCONFIG_PATH_SOURCE_INFO structure contains source information for a single path.</summary>
        /// <remarks>
        /// <para>A DISPLAYCONFIG_PATH_SOURCE_INFO structure is specified in the <b>sourceInfo</b> member of a <a href = "https://docs.microsoft.com/windows/desktop/api/wingdi/ns-wingdi-displayconfig_path_info">DISPLAYCONFIG_PATH_INFO</a> structure.</para>
        /// <para>A source corresponds to a surface on which the display adapter can render pixels. Each display adapter is capable of rendering to x number of sources. What this means is how many desktops can be rendered for extend mode. This is typically 2. For example, source 0 might be rendering pixels from 0,0 to 1024,768, and source 1 might be rendering pixels from 1025,0 to 2048, 768.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-displayconfig_path_source_info#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct DISPLAYCONFIG_PATH_SOURCE_INFO
        {
            /// <summary>The identifier of the adapter that this source information relates to.</summary>
            internal win32.System.SystemServices.LUID adapterId;
            /// <summary>The source identifier on the specified adapter that this path relates to.</summary>
            internal uint id;
            internal win32.UI.DisplayDevices.DISPLAYCONFIG_PATH_SOURCE_INFO._Anonymous_e__Union Anonymous;
            /// <summary>A bitwise OR of flag values that indicates the status of the source. The following values are supported:</summary>
            internal uint statusFlags;
            [StructLayout(LayoutKind.Explicit)]
            internal partial struct _Anonymous_e__Union
            {
                [FieldOffset(0)]
                internal uint modeInfoIdx;
                [FieldOffset(0)]
                internal win32.UI.DisplayDevices.DISPLAYCONFIG_PATH_SOURCE_INFO._Anonymous_e__Union._Anonymous_e__Struct Anonymous;
                internal partial struct _Anonymous_e__Struct
                {
                    internal uint _bitfield;
                }
            }
        }
    }
}