// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace UI.DisplayDevices
    {
        /// <summary>The DEVMODE data structure contains information about the initialization and environment of a printer or a display device.</summary>
        /// <remarks>
        /// <para>A device driver's private data follows the public portion of the <b>DEVMODE</b> structure. The size of the public data can vary for different versions of the structure. The <b>dmSize</b> member specifies the number of bytes of public data, and the <b>dmDriverExtra</b> member specifies the number of bytes of private data.</para>
        /// <para>> [!NOTE] > The wingdi.h header defines DEVMODE as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see [Conventions for Function Prototypes](/windows/win32/intl/conventions-for-function-prototypes).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-devmodea#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct DEVMODEA
        {
            /// <summary>A zero-terminated character array that specifies the "friendly" name of the printer or display; for example, "PCL/HP LaserJet" in the case of PCL/HP LaserJet. This string is unique among device drivers. Note that this name may be truncated to fit in the <b>dmDeviceName</b> array.</summary>
            internal __byte_32 dmDeviceName;
            /// <summary>The version number of the initialization data specification on which the structure is based. To ensure the correct version is used for any operating system, use DM_SPECVERSION.</summary>
            internal ushort dmSpecVersion;
            /// <summary>The driver version number assigned by the driver developer.</summary>
            internal ushort dmDriverVersion;
            /// <summary>Specifies the size, in bytes, of the <b>DEVMODE</b> structure, not including any private driver-specific data that might follow the structure's public members. Set this member to <c>sizeof (DEVMODE)</c> to indicate the version of the <b>DEVMODE</b> structure being used.</summary>
            internal ushort dmSize;
            /// <summary>Contains the number of bytes of private driver-data that follow this structure. If a device driver does not use device-specific information, set this member to zero.</summary>
            internal ushort dmDriverExtra;
            /// <summary>
            /// <para>Specifies whether certain members of the <b>DEVMODE</b> structure have been initialized. If a member is initialized, its corresponding bit is set, otherwise the bit is clear. A driver supports only those <b>DEVMODE</b> members that are appropriate for the printer or display technology.</para>
            /// <para>The following values are defined, and are listed here with the corresponding structure members.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-devmodea#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint dmFields;
            internal win32.UI.DisplayDevices.DEVMODEA._Anonymous1_e__Union Anonymous1;
            /// <summary>
            /// <para>Switches between color and monochrome on color printers. The following are the possible values:</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-devmodea#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal short dmColor;
            /// <summary>
            /// <para>Selects duplex or double-sided printing for printers capable of duplex printing. Following are the possible values.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-devmodea#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal short dmDuplex;
            /// <summary>Specifies the y-resolution, in dots per inch, of the printer. If the printer initializes this member, the <b>dmPrintQuality</b> member specifies the x-resolution, in dots per inch, of the printer.</summary>
            internal short dmYResolution;
            /// <summary></summary>
            internal short dmTTOption;
            /// <summary></summary>
            internal short dmCollate;
            /// <summary>A zero-terminated character array that specifies the name of the form to use; for example, "Letter" or "Legal". A complete set of names can be retrieved by using the <a href = "https://docs.microsoft.com/windows/desktop/printdocs/enumforms">EnumForms</a> function.</summary>
            internal __byte_32 dmFormName;
            /// <summary>The number of pixels per logical inch. Printer drivers do not use this member.</summary>
            internal ushort dmLogPixels;
            /// <summary>Specifies the color resolution, in bits per pixel, of the display device (for example: 4 bits for 16 colors, 8 bits for 256 colors, or 16 bits for 65,536 colors). Display drivers use this member, for example, in the <a href = "https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-changedisplaysettingsa">ChangeDisplaySettings</a> function. Printer drivers do not use this member.</summary>
            internal uint dmBitsPerPel;
            /// <summary>Specifies the width, in pixels, of the visible device surface. Display drivers use this member, for example, in the <a href = "https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-changedisplaysettingsa">ChangeDisplaySettings</a> function. Printer drivers do not use this member.</summary>
            internal uint dmPelsWidth;
            /// <summary>Specifies the height, in pixels, of the visible device surface. Display drivers use this member, for example, in the <a href = "https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-changedisplaysettingsa">ChangeDisplaySettings</a> function. Printer drivers do not use this member.</summary>
            internal uint dmPelsHeight;
            internal win32.UI.DisplayDevices.DEVMODEA._Anonymous2_e__Union Anonymous2;
            /// <summary>
            /// <para>Specifies the frequency, in hertz (cycles per second), of the display device in a particular mode. This value is also known as the display device's vertical refresh rate. Display drivers use this member. It is used, for example, in the <a href = "https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-changedisplaysettingsa">ChangeDisplaySettings</a> function. Printer drivers do not use this member.</para>
            /// <para>When you call the <a href = "https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-enumdisplaysettingsa">EnumDisplaySettings</a> function, the <b>dmDisplayFrequency</b> member may return with the value 0 or 1. These values represent the display hardware's default refresh rate. This default rate is typically set by switches on a display card or computer motherboard, or by a configuration program that does not use display functions such as <a href = "https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-changedisplaysettingsa">ChangeDisplaySettings</a>.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-devmodea#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint dmDisplayFrequency;
            /// <summary>
            /// <para>Specifies how ICM is handled. For a non-ICM application, this member determines if ICM is enabled or disabled. For ICM applications, the system examines this member to determine how to handle ICM support. This member can be one of the following predefined values, or a driver-defined value greater than or equal to the value of DMICMMETHOD_USER.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-devmodea#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint dmICMMethod;
            /// <summary>
            /// <para>Specifies which color matching method, or intent, should be used by default. This member is primarily for non-ICM applications. ICM applications can establish intents by using the ICM functions. This member can be one of the following predefined values, or a driver defined value greater than or equal to the value of DMICM_USER.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-devmodea#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint dmICMIntent;
            /// <summary>
            /// <para>Specifies the type of media being printed on. The member can be one of the following predefined values, or a driver-defined value greater than or equal to the value of DMMEDIA_USER.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-devmodea#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint dmMediaType;
            /// <summary>
            /// <para>Specifies how dithering is to be done. The member can be one of the following predefined values, or a driver-defined value greater than or equal to the value of DMDITHER_USER.</para>
            /// <para></para>
            /// <para>This doc was truncated.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-devmodea#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint dmDitherType;
            /// <summary>Not used; must be zero.</summary>
            internal uint dmReserved1;
            /// <summary>Not used; must be zero.</summary>
            internal uint dmReserved2;
            /// <summary>This member must be zero.</summary>
            internal uint dmPanningWidth;
            /// <summary>This member must be zero.</summary>
            internal uint dmPanningHeight;
            internal struct __byte_32
            {
                internal byte _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31;
                /// <summary>Always <c>32</c>.</summary>
                internal int Length => 32;
            }

            [StructLayout(LayoutKind.Explicit)]
            internal partial struct _Anonymous1_e__Union
            {
                [FieldOffset(0)]
                internal win32.UI.DisplayDevices.DEVMODEA._Anonymous1_e__Union._Anonymous1_e__Struct Anonymous1;
                [FieldOffset(0)]
                internal win32.UI.DisplayDevices.DEVMODEA._Anonymous1_e__Union._Anonymous2_e__Struct Anonymous2;
                internal partial struct _Anonymous1_e__Struct
                {
                    internal short dmOrientation;
                    internal short dmPaperSize;
                    internal short dmPaperLength;
                    internal short dmPaperWidth;
                    internal short dmScale;
                    internal short dmCopies;
                    internal short dmDefaultSource;
                    internal short dmPrintQuality;
                }

                internal partial struct _Anonymous2_e__Struct
                {
                    internal win32.UI.DisplayDevices.POINTL dmPosition;
                    internal uint dmDisplayOrientation;
                    internal uint dmDisplayFixedOutput;
                }
            }

            [StructLayout(LayoutKind.Explicit)]
            internal partial struct _Anonymous2_e__Union
            {
                [FieldOffset(0)]
                internal uint dmDisplayFlags;
                [FieldOffset(0)]
                internal uint dmNup;
            }
        }
    }
}