// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace UI.WindowsAndMessaging
    {
        /// <summary>Contains information about an icon or a cursor. Extends ICONINFO. Used by GetIconInfoEx.</summary>
        /// <remarks>
        /// <para>> [!NOTE] > The winuser.h header defines ICONINFOEX as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see [Conventions for Function Prototypes](/windows/win32/intl/conventions-for-function-prototypes).</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct ICONINFOEXA
        {
            /// <summary>
            /// <para>Type: <b>DWORD</b></para>
            /// <para>The size, in bytes, of this structure.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint cbSize;
            /// <summary>
            /// <para>Type: <b>BOOL</b></para>
            /// <para>Specifies whether this structure defines an icon or a cursor. A value of <b>TRUE</b> specifies an icon; <b>FALSE</b> specifies a cursor.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.System.SystemServices.BOOL fIcon;
            /// <summary>
            /// <para>Type: <b>DWORD</b></para>
            /// <para>The x-coordinate of a cursor's hot spot. If this structure defines an icon, the hot spot is always in the center of the icon, and this member is ignored.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint xHotspot;
            /// <summary>
            /// <para>Type: <b>DWORD</b></para>
            /// <para>The y-coordinate of the cursor's hot spot. If this structure defines an icon, the hot spot is always in the center of the icon, and this member is ignored.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint yHotspot;
            /// <summary>
            /// <para>Type: <b>HBITMAP</b></para>
            /// <para>The icon bitmask bitmap. If this structure defines a black and white icon, this bitmask is formatted so that the upper half is the icon AND bitmask and the lower half is the icon XOR bitmask. Under this condition, the height should be an even multiple of two. If this structure defines a color icon, this mask only defines the AND bitmask of the icon.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.Graphics.Gdi.HBITMAP hbmMask;
            /// <summary>
            /// <para>Type: <b>HBITMAP</b></para>
            /// <para>A handle to the icon color bitmap. This member can be optional if this structure defines a black and white icon. The AND bitmask of <b>hbmMask</b> is applied with the <b>SRCAND</b> flag to the destination; subsequently, the color bitmap is applied (using XOR) to the destination by using the <b>SRCINVERT</b> flag.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal win32.Graphics.Gdi.HBITMAP hbmColor;
            /// <summary>
            /// <para>Type: <b>WORD</b></para>
            /// <para>The icon or cursor resource bits. These bits are typically loaded by calls to the <a href = "https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-lookupiconidfromdirectoryex">LookupIconIdFromDirectoryEx</a> and <a href = "https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadresource">LoadResource</a> functions.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal ushort wResID;
            /// <summary>
            /// <para>Type: <b>TCHAR[MAX_PATH]</b></para>
            /// <para>The fully qualified path of the module.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal __win32_System_SystemServices_CHAR_260 szModName;
            /// <summary>
            /// <para>Type: <b>TCHAR[MAX_PATH]</b></para>
            /// <para>The fully qualified path of the resource.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-iconinfoexa#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal __win32_System_SystemServices_CHAR_260 szResName;
            internal struct __win32_System_SystemServices_CHAR_260
            {
                internal win32.System.SystemServices.CHAR _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99, _100, _101, _102, _103, _104, _105, _106, _107, _108, _109, _110, _111, _112, _113, _114, _115, _116, _117, _118, _119, _120, _121, _122, _123, _124, _125, _126, _127, _128, _129, _130, _131, _132, _133, _134, _135, _136, _137, _138, _139, _140, _141, _142, _143, _144, _145, _146, _147, _148, _149, _150, _151, _152, _153, _154, _155, _156, _157, _158, _159, _160, _161, _162, _163, _164, _165, _166, _167, _168, _169, _170, _171, _172, _173, _174, _175, _176, _177, _178, _179, _180, _181, _182, _183, _184, _185, _186, _187, _188, _189, _190, _191, _192, _193, _194, _195, _196, _197, _198, _199, _200, _201, _202, _203, _204, _205, _206, _207, _208, _209, _210, _211, _212, _213, _214, _215, _216, _217, _218, _219, _220, _221, _222, _223, _224, _225, _226, _227, _228, _229, _230, _231, _232, _233, _234, _235, _236, _237, _238, _239, _240, _241, _242, _243, _244, _245, _246, _247, _248, _249, _250, _251, _252, _253, _254, _255, _256, _257, _258, _259;
                /// <summary>Always <c>260</c>.</summary>
                internal int Length => 260;
            }
        }
    }
}