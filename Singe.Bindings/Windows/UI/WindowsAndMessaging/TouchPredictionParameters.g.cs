// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace UI.WindowsAndMessaging
    {
        /// <summary>Contains hardware input details that can be used to predict touch targets and help compensate for hardware latency when processing touch and gesture input that contains distance and velocity data.</summary>
        /// <remarks>
        /// <para>By default, touch prediction is activated. For information on getting pointer data without deactivating touch prediction, see <a href = "https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-getunpredictedmessagepos">GetUnpredictedMessagePos</a>.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-touchpredictionparameters#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct TouchPredictionParameters
        {
            /// <summary>The size of this structure, in bytes.</summary>
            internal uint cbSize;
            /// <summary>Latency in milliseconds.</summary>
            internal uint dwLatency;
            /// <summary>Sample time in milliseconds (used to calculate velocity).</summary>
            internal uint dwSampleTime;
            /// <summary>Use timestamps provided by the hardware.</summary>
            internal uint bUseHWTimeStamp;
        }
    }
}