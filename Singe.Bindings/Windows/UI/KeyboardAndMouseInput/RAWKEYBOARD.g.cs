// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace UI.KeyboardAndMouseInput
    {
        /// <summary>Contains information about the state of the keyboard.</summary>
        /// <remarks>
        /// <para>For a **MakeCode** value [HID client mapper driver](/windows-hardware/drivers/hid/keyboard-and-mouse-hid-client-drivers) converts HID usages into scan codes according to [USB HID to PS/2 Scan Code Translation Table](https://download.microsoft.com/download/1/6/1/161ba512-40e2-4cc9-843a-923143f3456c/translate.pdf) (see **PS/2 Set 1 Make** column).</para>
        /// <para>Older PS/2 keyboards actually transmit Scan Code Set 2 values down the wire from the keyboard to the keyboard port. These values are translated to Scan Code Set 1 by the i8042 port chip. Possible values are listed in [Keyboard Scan Code Specification](https://download.microsoft.com/download/1/6/1/161ba512-40e2-4cc9-843a-923143f3456c/scancode.doc) (see **Scan Code Table**).</para>
        /// <para><b>KEYBOARD_OVERRUN_MAKE_CODE</b> is a special **MakeCode** value sent when an invalid or unrecognizable combination of keys is pressed or the number of keys pressed exceeds the limit for this keyboard.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-rawkeyboard#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct RAWKEYBOARD
        {
            /// <summary>
            /// <para>Type: <b>USHORT</b></para>
            /// <para>Specifies the scan code (from Scan Code Set 1) associated with a key press. See Remarks.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-rawkeyboard#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal ushort MakeCode;
            /// <summary>
            /// <para>Type: <b>USHORT</b></para>
            /// <para>Flags for scan code information. It can be one or more of the following:</para>
            /// <para>| Value                | Meaning                          | |----------------------|----------------------------------| | **RI\_KEY\_MAKE** 0  | The key is down.                 | | **RI\_KEY\_BREAK** 1 | The key is up.                   | | **RI\_KEY\_E0** 2    | The scan code has the E0 prefix. | | **RI\_KEY\_E1** 4    | The scan code has the E1 prefix. |</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-rawkeyboard#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal ushort Flags;
            /// <summary>
            /// <para>Type: <b>USHORT</b></para>
            /// <para>Reserved; must be zero.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-rawkeyboard#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal ushort Reserved;
            /// <summary>
            /// <para>Type: <b>USHORT</b></para>
            /// <para>The corresponding [legacy virtual-key code](/windows/win32/inputdev/virtual-key-codes).</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-rawkeyboard#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal ushort VKey;
            /// <summary>
            /// <para>Type: <b>UINT</b></para>
            /// <para>The corresponding [legacy keyboard window message](/windows/win32/inputdev/keyboard-input-notifications), for example [WM_KEYDOWN](/windows/win32/inputdev/wm-keydown), [WM_SYSKEYDOWN](/windows/win32/inputdev/wm-syskeydown), and so forth.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-rawkeyboard#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint Message;
            /// <summary>
            /// <para>Type: <b>ULONG</b></para>
            /// <para>The device-specific additional information for the event.</para>
            /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-rawkeyboard#members">Read more on docs.microsoft.com</see>.</para>
            /// </summary>
            internal uint ExtraInformation;
        }
    }
}