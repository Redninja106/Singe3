// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Windows.Win32
{
    using global::System;
    using global::System.Diagnostics;
    using global::System.Runtime.CompilerServices;
    using global::System.Runtime.InteropServices;
    using win32 = global::Windows.Win32;

    namespace UI.Controls
    {
        /// <summary>Contains pointer-based device properties (Human Interface Device (HID) global items that correspond to HID usages).</summary>
        /// <remarks>
        /// <para>Developers can use this function to determine the properties that a device supports beyond the standard ones that are delivered through <a href = "https://docs.microsoft.com/previous-versions/windows/desktop/inputmsg/messages-and-notifications">Pointer Input Messages and Notifications</a>. The properties map directly to HID usages.</para>
        /// <para><see href = "https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-pointer_device_property#">Read more on docs.microsoft.com</see>.</para>
        /// </remarks>
        internal partial struct POINTER_DEVICE_PROPERTY
        {
            /// <summary>The minimum value that the device can report for this property.</summary>
            internal int logicalMin;
            /// <summary>The maximum value that the device can report for this property.</summary>
            internal int logicalMax;
            /// <summary>The physical minimum  in Himetric.</summary>
            internal int physicalMin;
            /// <summary>The physical maximum in Himetric.</summary>
            internal int physicalMax;
            /// <summary>The unit.</summary>
            internal uint unit;
            /// <summary>The exponent.</summary>
            internal uint unitExponent;
            /// <summary>The usage page for the property, as documented in the HID specification.</summary>
            internal ushort usagePageId;
            /// <summary>The usage  of  the property, as documented in the HID specification.</summary>
            internal ushort usageId;
        }
    }
}